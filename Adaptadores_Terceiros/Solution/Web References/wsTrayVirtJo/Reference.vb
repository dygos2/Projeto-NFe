'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34011
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34011.
'
Namespace wsTrayVirtJo
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="TrayWebServicewsdlBinding", [Namespace]:="http://www.virtualjoias.com/webservice/v2/ws_servidor.php"),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(RelacionamentoImposto)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(GrupoImposto)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(ProdutoPreco)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(DadosBuscaLista)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(DadosBuscaListaVendas)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(Pagamentos)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(DadosListaProdutos)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(DadosListaDesejos)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(ProdutosRelacionados)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(ProdutosKit)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(Chaves)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(StatusPedidos)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(Parcela_pedido)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(Item_pedido)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(ClienteSemDadosPedidoAvancado)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(ClienteSemDadosPedido)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(DadoExtra)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(EnderecoCliente)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(ClienteAvancado)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(Cliente)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(Endereco)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(EnderecoClienteComId)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(Categoria)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(InformacaoSimples)),  _
     System.Xml.Serialization.SoapIncludeAttribute(GetType(Informacao))>  _
    Partial Public Class TrayWebServicewsdl
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private fWSCadastraPerfilOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSCadastraCategoriaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSCadastraMarcaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSCadastraProdutoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSImportaProdutoPorCodReferenciaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSCadastraProdutoSimplesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSCadastraCaracteristicaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSRelacionaCategPerfilOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSRelacionaCaractPerfilOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSRelacionaCategProdutoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSCadastraDadosProdutoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSCadastraGradeProdutoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSCadastraVariaProdutosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSCadastraPromocaoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSRelacionaPromoProdutoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSCadastraClienteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSConsultaEnderecosClienteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSExcluiEnderecoClienteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSCadastraClienteAvancadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSCadastraContatosClienteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSCadastraEnderecoClienteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSCadastraListaEnderecoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSCadastraEnderecoClienteAvancadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSImportaClientesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSImportaClientesAvancadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSImportaClientesComPedidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSImportaClientesComPedidoAvancadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSImportaClientesSemDadosPedidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSImportaClientesSemDadosPedidoAvancadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSImportaClientePorIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSImportaClientePorIdAvancadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSImportaClientePorEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSImportaClientePorEmailAvancadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSImportaClientePorCPFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSImportaClientePorCPFAvancadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSImportaClientePorCNPJOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSImportaClientePorCNPJAvancadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSImportaClientePorPedidoAvancadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSImportaPedidosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSImportaPedidoPorIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSImportaItensPedidosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSImportaItensPedidoPorIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSImportaParcelasPedidosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSImportaParcelasPedidoPorIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSAtualizaPrecoProdutoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSAtualizaProdutoDisponivelOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSAtualizaEstoqueProdutoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSAtualizaStatusPedidosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSChavesLojasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSAtualizaListaToDoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSConsultaStatusPedidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSConcultaStatusPedidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSCadastraCompreJuntoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSCadastraCompreJuntoAvancadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSRelacionaProdutoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSCadastraListaDesejosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSCadastraListaProdutosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSExcluiListaDesejosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSExcluirProdutoListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSExportaPagamentosPedidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSBuscavendaListasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSBuscaListasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSImportaListasDesejoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSDadosRecursosExtrasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSRelacionaClientePerfilOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSCadastraListaPrecoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSCadastraCamposGrupoImpostoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSCadastraGrupoImpostoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSRelacionaImpostoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSConvertePedidoComissaoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSImportaGradePorCodReferenciaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fWSImportaCategoriaPorDescricaoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Solution.My.MySettings.Default.Solution_wsTrayVirtJo_TrayWebServicewsdl
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event fWSCadastraPerfilCompleted As fWSCadastraPerfilCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSCadastraCategoriaCompleted As fWSCadastraCategoriaCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSCadastraMarcaCompleted As fWSCadastraMarcaCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSCadastraProdutoCompleted As fWSCadastraProdutoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSImportaProdutoPorCodReferenciaCompleted As fWSImportaProdutoPorCodReferenciaCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSCadastraProdutoSimplesCompleted As fWSCadastraProdutoSimplesCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSCadastraCaracteristicaCompleted As fWSCadastraCaracteristicaCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSRelacionaCategPerfilCompleted As fWSRelacionaCategPerfilCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSRelacionaCaractPerfilCompleted As fWSRelacionaCaractPerfilCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSRelacionaCategProdutoCompleted As fWSRelacionaCategProdutoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSCadastraDadosProdutoCompleted As fWSCadastraDadosProdutoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSCadastraGradeProdutoCompleted As fWSCadastraGradeProdutoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSCadastraVariaProdutosCompleted As fWSCadastraVariaProdutosCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSCadastraPromocaoCompleted As fWSCadastraPromocaoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSRelacionaPromoProdutoCompleted As fWSRelacionaPromoProdutoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSCadastraClienteCompleted As fWSCadastraClienteCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSConsultaEnderecosClienteCompleted As fWSConsultaEnderecosClienteCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSExcluiEnderecoClienteCompleted As fWSExcluiEnderecoClienteCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSCadastraClienteAvancadoCompleted As fWSCadastraClienteAvancadoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSCadastraContatosClienteCompleted As fWSCadastraContatosClienteCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSCadastraEnderecoClienteCompleted As fWSCadastraEnderecoClienteCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSCadastraListaEnderecoCompleted As fWSCadastraListaEnderecoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSCadastraEnderecoClienteAvancadoCompleted As fWSCadastraEnderecoClienteAvancadoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSImportaClientesCompleted As fWSImportaClientesCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSImportaClientesAvancadoCompleted As fWSImportaClientesAvancadoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSImportaClientesComPedidoCompleted As fWSImportaClientesComPedidoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSImportaClientesComPedidoAvancadoCompleted As fWSImportaClientesComPedidoAvancadoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSImportaClientesSemDadosPedidoCompleted As fWSImportaClientesSemDadosPedidoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSImportaClientesSemDadosPedidoAvancadoCompleted As fWSImportaClientesSemDadosPedidoAvancadoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSImportaClientePorIdCompleted As fWSImportaClientePorIdCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSImportaClientePorIdAvancadoCompleted As fWSImportaClientePorIdAvancadoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSImportaClientePorEmailCompleted As fWSImportaClientePorEmailCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSImportaClientePorEmailAvancadoCompleted As fWSImportaClientePorEmailAvancadoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSImportaClientePorCPFCompleted As fWSImportaClientePorCPFCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSImportaClientePorCPFAvancadoCompleted As fWSImportaClientePorCPFAvancadoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSImportaClientePorCNPJCompleted As fWSImportaClientePorCNPJCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSImportaClientePorCNPJAvancadoCompleted As fWSImportaClientePorCNPJAvancadoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSImportaClientePorPedidoAvancadoCompleted As fWSImportaClientePorPedidoAvancadoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSImportaPedidosCompleted As fWSImportaPedidosCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSImportaPedidoPorIdCompleted As fWSImportaPedidoPorIdCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSImportaItensPedidosCompleted As fWSImportaItensPedidosCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSImportaItensPedidoPorIdCompleted As fWSImportaItensPedidoPorIdCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSImportaParcelasPedidosCompleted As fWSImportaParcelasPedidosCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSImportaParcelasPedidoPorIdCompleted As fWSImportaParcelasPedidoPorIdCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSAtualizaPrecoProdutoCompleted As fWSAtualizaPrecoProdutoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSAtualizaProdutoDisponivelCompleted As fWSAtualizaProdutoDisponivelCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSAtualizaEstoqueProdutoCompleted As fWSAtualizaEstoqueProdutoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSAtualizaStatusPedidosCompleted As fWSAtualizaStatusPedidosCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSChavesLojasCompleted As fWSChavesLojasCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSAtualizaListaToDoCompleted As fWSAtualizaListaToDoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSConsultaStatusPedidoCompleted As fWSConsultaStatusPedidoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSConcultaStatusPedidoCompleted As fWSConcultaStatusPedidoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSCadastraCompreJuntoCompleted As fWSCadastraCompreJuntoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSCadastraCompreJuntoAvancadoCompleted As fWSCadastraCompreJuntoAvancadoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSRelacionaProdutoCompleted As fWSRelacionaProdutoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSCadastraListaDesejosCompleted As fWSCadastraListaDesejosCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSCadastraListaProdutosCompleted As fWSCadastraListaProdutosCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSExcluiListaDesejosCompleted As fWSExcluiListaDesejosCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSExcluirProdutoListaCompleted As fWSExcluirProdutoListaCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSExportaPagamentosPedidoCompleted As fWSExportaPagamentosPedidoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSBuscavendaListasCompleted As fWSBuscavendaListasCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSBuscaListasCompleted As fWSBuscaListasCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSImportaListasDesejoCompleted As fWSImportaListasDesejoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSDadosRecursosExtrasCompleted As fWSDadosRecursosExtrasCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSRelacionaClientePerfilCompleted As fWSRelacionaClientePerfilCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSCadastraListaPrecoCompleted As fWSCadastraListaPrecoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSCadastraCamposGrupoImpostoCompleted As fWSCadastraCamposGrupoImpostoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSCadastraGrupoImpostoCompleted As fWSCadastraGrupoImpostoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSRelacionaImpostoCompleted As fWSRelacionaImpostoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSConvertePedidoComissaoCompleted As fWSConvertePedidoComissaoCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSImportaGradePorCodReferenciaCompleted As fWSImportaGradePorCodReferenciaCompletedEventHandler
        
        '''<remarks/>
        Public Event fWSImportaCategoriaPorDescricaoCompleted As fWSImportaCategoriaPorDescricaoCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSCadastraPerfilwsdl#fWSCadastraPerfil", RequestNamespace:="urn:fWSCadastraPerfilwsdl", ResponseNamespace:="urn:fWSCadastraPerfilwsdl")>  _
        Public Function fWSCadastraPerfil(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_perfil As String, ByVal descricao As String, ByVal ativo As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSCadastraPerfil", New Object() {pid_loja, plogin, psenha, id_perfil, descricao, ativo})
            id_perfil = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraPerfilAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_perfil As String, ByVal descricao As String, ByVal ativo As String)
            Me.fWSCadastraPerfilAsync(pid_loja, plogin, psenha, id_perfil, descricao, ativo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraPerfilAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_perfil As String, ByVal descricao As String, ByVal ativo As String, ByVal userState As Object)
            If (Me.fWSCadastraPerfilOperationCompleted Is Nothing) Then
                Me.fWSCadastraPerfilOperationCompleted = AddressOf Me.OnfWSCadastraPerfilOperationCompleted
            End If
            Me.InvokeAsync("fWSCadastraPerfil", New Object() {pid_loja, plogin, psenha, id_perfil, descricao, ativo}, Me.fWSCadastraPerfilOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSCadastraPerfilOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSCadastraPerfilCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSCadastraPerfilCompleted(Me, New fWSCadastraPerfilCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSCadastraCategoriawsdl#fWSCadastraCategoria", RequestNamespace:="urn:fWSCadastraCategoriawsdl", ResponseNamespace:="urn:fWSCadastraCategoriawsdl")>  _
        Public Function fWSCadastraCategoria(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_categoria As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_categoriapai As String, ByVal descricao As String, ByVal ativo As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSCadastraCategoria", New Object() {pid_loja, plogin, psenha, id_categoria, id_categoriapai, descricao, ativo})
            id_categoria = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraCategoriaAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_categoria As String, ByVal id_categoriapai As String, ByVal descricao As String, ByVal ativo As String)
            Me.fWSCadastraCategoriaAsync(pid_loja, plogin, psenha, id_categoria, id_categoriapai, descricao, ativo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraCategoriaAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_categoria As String, ByVal id_categoriapai As String, ByVal descricao As String, ByVal ativo As String, ByVal userState As Object)
            If (Me.fWSCadastraCategoriaOperationCompleted Is Nothing) Then
                Me.fWSCadastraCategoriaOperationCompleted = AddressOf Me.OnfWSCadastraCategoriaOperationCompleted
            End If
            Me.InvokeAsync("fWSCadastraCategoria", New Object() {pid_loja, plogin, psenha, id_categoria, id_categoriapai, descricao, ativo}, Me.fWSCadastraCategoriaOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSCadastraCategoriaOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSCadastraCategoriaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSCadastraCategoriaCompleted(Me, New fWSCadastraCategoriaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSCadastraMarcawsdl#fWSCadastraMarca", RequestNamespace:="urn:fWSCadastraMarcawsdl", ResponseNamespace:="urn:fWSCadastraMarcawsdl")>  _
        Public Function fWSCadastraMarca(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_marca As String, ByVal descricao As String, ByVal ativo As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSCadastraMarca", New Object() {pid_loja, plogin, psenha, id_marca, descricao, ativo})
            id_marca = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraMarcaAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_marca As String, ByVal descricao As String, ByVal ativo As String)
            Me.fWSCadastraMarcaAsync(pid_loja, plogin, psenha, id_marca, descricao, ativo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraMarcaAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_marca As String, ByVal descricao As String, ByVal ativo As String, ByVal userState As Object)
            If (Me.fWSCadastraMarcaOperationCompleted Is Nothing) Then
                Me.fWSCadastraMarcaOperationCompleted = AddressOf Me.OnfWSCadastraMarcaOperationCompleted
            End If
            Me.InvokeAsync("fWSCadastraMarca", New Object() {pid_loja, plogin, psenha, id_marca, descricao, ativo}, Me.fWSCadastraMarcaOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSCadastraMarcaOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSCadastraMarcaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSCadastraMarcaCompleted(Me, New fWSCadastraMarcaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSCadastraProdutowsdl#fWSCadastraProduto", RequestNamespace:="urn:fWSCadastraProdutowsdl", ResponseNamespace:="urn:fWSCadastraProdutowsdl")>  _
        Public Function fWSCadastraProduto( _
                    <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String,  _
                    ByVal plogin As String,  _
                    ByVal psenha As String,  _
                    <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_produto As String,  _
                    <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_marca As String,  _
                    <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_fornecedor As String,  _
                    ByVal cod_referencia As String,  _
                    ByVal descricao As String,  _
                    ByVal descricao_curta As String,  _
                    ByVal custo As String,  _
                    ByVal moeda_custo_aux As String,  _
                    ByVal custo_auxiliar As String,  _
                    ByVal preco As String,  _
                    ByVal peso_cubico As String,  _
                    ByVal peso As String,  _
                    ByVal disponivel As String,  _
                    ByVal informacao() As Informacao,  _
                    ByVal garantia As String,  _
                    ByVal disponibilidade As String,  _
                    <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal estoque As String,  _
                    <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal estoque_minimo As String,  _
                    <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal prazo_entrega As String,  _
                    ByVal frete_desconto As String,  _
                    ByVal destaque As String,  _
                    ByVal data_cadastro As String,  _
                    ByVal info_preco As String,  _
                    ByVal ativo As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSCadastraProduto", New Object() {pid_loja, plogin, psenha, id_produto, id_marca, id_fornecedor, cod_referencia, descricao, descricao_curta, custo, moeda_custo_aux, custo_auxiliar, preco, peso_cubico, peso, disponivel, informacao, garantia, disponibilidade, estoque, estoque_minimo, prazo_entrega, frete_desconto, destaque, data_cadastro, info_preco, ativo})
            id_produto = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraProdutoAsync( _
                    ByVal pid_loja As String,  _
                    ByVal plogin As String,  _
                    ByVal psenha As String,  _
                    ByVal id_produto As String,  _
                    ByVal id_marca As String,  _
                    ByVal id_fornecedor As String,  _
                    ByVal cod_referencia As String,  _
                    ByVal descricao As String,  _
                    ByVal descricao_curta As String,  _
                    ByVal custo As String,  _
                    ByVal moeda_custo_aux As String,  _
                    ByVal custo_auxiliar As String,  _
                    ByVal preco As String,  _
                    ByVal peso_cubico As String,  _
                    ByVal peso As String,  _
                    ByVal disponivel As String,  _
                    ByVal informacao() As Informacao,  _
                    ByVal garantia As String,  _
                    ByVal disponibilidade As String,  _
                    ByVal estoque As String,  _
                    ByVal estoque_minimo As String,  _
                    ByVal prazo_entrega As String,  _
                    ByVal frete_desconto As String,  _
                    ByVal destaque As String,  _
                    ByVal data_cadastro As String,  _
                    ByVal info_preco As String,  _
                    ByVal ativo As String)
            Me.fWSCadastraProdutoAsync(pid_loja, plogin, psenha, id_produto, id_marca, id_fornecedor, cod_referencia, descricao, descricao_curta, custo, moeda_custo_aux, custo_auxiliar, preco, peso_cubico, peso, disponivel, informacao, garantia, disponibilidade, estoque, estoque_minimo, prazo_entrega, frete_desconto, destaque, data_cadastro, info_preco, ativo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraProdutoAsync( _
                    ByVal pid_loja As String,  _
                    ByVal plogin As String,  _
                    ByVal psenha As String,  _
                    ByVal id_produto As String,  _
                    ByVal id_marca As String,  _
                    ByVal id_fornecedor As String,  _
                    ByVal cod_referencia As String,  _
                    ByVal descricao As String,  _
                    ByVal descricao_curta As String,  _
                    ByVal custo As String,  _
                    ByVal moeda_custo_aux As String,  _
                    ByVal custo_auxiliar As String,  _
                    ByVal preco As String,  _
                    ByVal peso_cubico As String,  _
                    ByVal peso As String,  _
                    ByVal disponivel As String,  _
                    ByVal informacao() As Informacao,  _
                    ByVal garantia As String,  _
                    ByVal disponibilidade As String,  _
                    ByVal estoque As String,  _
                    ByVal estoque_minimo As String,  _
                    ByVal prazo_entrega As String,  _
                    ByVal frete_desconto As String,  _
                    ByVal destaque As String,  _
                    ByVal data_cadastro As String,  _
                    ByVal info_preco As String,  _
                    ByVal ativo As String,  _
                    ByVal userState As Object)
            If (Me.fWSCadastraProdutoOperationCompleted Is Nothing) Then
                Me.fWSCadastraProdutoOperationCompleted = AddressOf Me.OnfWSCadastraProdutoOperationCompleted
            End If
            Me.InvokeAsync("fWSCadastraProduto", New Object() {pid_loja, plogin, psenha, id_produto, id_marca, id_fornecedor, cod_referencia, descricao, descricao_curta, custo, moeda_custo_aux, custo_auxiliar, preco, peso_cubico, peso, disponivel, informacao, garantia, disponibilidade, estoque, estoque_minimo, prazo_entrega, frete_desconto, destaque, data_cadastro, info_preco, ativo}, Me.fWSCadastraProdutoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSCadastraProdutoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSCadastraProdutoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSCadastraProdutoCompleted(Me, New fWSCadastraProdutoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSImportaProdutoPorCodReferenciawsdl#fWSImportaProdutoPorCodReferencia", RequestNamespace:="urn:fWSImportaProdutoPorCodReferenciawsdl", ResponseNamespace:="urn:fWSImportaProdutoPorCodReferenciawsdl")>  _
        Public Function fWSImportaProdutoPorCodReferencia( _
                    <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String,  _
                    ByVal plogin As String,  _
                    ByVal psenha As String,  _
                    ByRef cod_referencia As String,  _
                    ByRef id_marca As String,  _
                    ByRef descricao As String,  _
                    ByRef descricao_curta As String,  _
                    ByRef custo As String,  _
                    ByRef preco As String,  _
                    ByRef peso_cubico As String,  _
                    ByRef peso As String,  _
                    ByRef disponivel As String,  _
                    ByRef informacao As String,  _
                    ByRef garantia As String,  _
                    ByRef disponibilidade As String,  _
                    ByRef estoque As String,  _
                    ByRef estoque_minimo As String,  _
                    ByRef destaque As String,  _
                    ByRef data_cadastro As String,  _
                    ByRef info_preco As String) As <System.Xml.Serialization.SoapElementAttribute("id_produto", DataType:="integer")> String
            Dim results() As Object = Me.Invoke("fWSImportaProdutoPorCodReferencia", New Object() {pid_loja, plogin, psenha, cod_referencia})
            cod_referencia = CType(results(1),String)
            id_marca = CType(results(2),String)
            descricao = CType(results(3),String)
            descricao_curta = CType(results(4),String)
            custo = CType(results(5),String)
            preco = CType(results(6),String)
            peso_cubico = CType(results(7),String)
            peso = CType(results(8),String)
            disponivel = CType(results(9),String)
            informacao = CType(results(10),String)
            garantia = CType(results(11),String)
            disponibilidade = CType(results(12),String)
            estoque = CType(results(13),String)
            estoque_minimo = CType(results(14),String)
            destaque = CType(results(15),String)
            data_cadastro = CType(results(16),String)
            info_preco = CType(results(17),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSImportaProdutoPorCodReferenciaAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal cod_referencia As String)
            Me.fWSImportaProdutoPorCodReferenciaAsync(pid_loja, plogin, psenha, cod_referencia, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSImportaProdutoPorCodReferenciaAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal cod_referencia As String, ByVal userState As Object)
            If (Me.fWSImportaProdutoPorCodReferenciaOperationCompleted Is Nothing) Then
                Me.fWSImportaProdutoPorCodReferenciaOperationCompleted = AddressOf Me.OnfWSImportaProdutoPorCodReferenciaOperationCompleted
            End If
            Me.InvokeAsync("fWSImportaProdutoPorCodReferencia", New Object() {pid_loja, plogin, psenha, cod_referencia}, Me.fWSImportaProdutoPorCodReferenciaOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSImportaProdutoPorCodReferenciaOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSImportaProdutoPorCodReferenciaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSImportaProdutoPorCodReferenciaCompleted(Me, New fWSImportaProdutoPorCodReferenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSCadastraProdutoSimpleswsdl#fWSCadastraProdutoSimples", RequestNamespace:="urn:fWSCadastraProdutoSimpleswsdl", ResponseNamespace:="urn:fWSCadastraProdutoSimpleswsdl")>  _
        Public Function fWSCadastraProdutoSimples(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_produto As String, ByVal cod_referencia As String, ByVal descricao As String, ByVal informacao() As InformacaoSimples, ByVal preco As String, ByVal peso As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal estoque As String, ByVal data_cadastro As String, ByVal ativo As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSCadastraProdutoSimples", New Object() {pid_loja, plogin, psenha, id_produto, cod_referencia, descricao, informacao, preco, peso, estoque, data_cadastro, ativo})
            id_produto = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraProdutoSimplesAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_produto As String, ByVal cod_referencia As String, ByVal descricao As String, ByVal informacao() As InformacaoSimples, ByVal preco As String, ByVal peso As String, ByVal estoque As String, ByVal data_cadastro As String, ByVal ativo As String)
            Me.fWSCadastraProdutoSimplesAsync(pid_loja, plogin, psenha, id_produto, cod_referencia, descricao, informacao, preco, peso, estoque, data_cadastro, ativo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraProdutoSimplesAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_produto As String, ByVal cod_referencia As String, ByVal descricao As String, ByVal informacao() As InformacaoSimples, ByVal preco As String, ByVal peso As String, ByVal estoque As String, ByVal data_cadastro As String, ByVal ativo As String, ByVal userState As Object)
            If (Me.fWSCadastraProdutoSimplesOperationCompleted Is Nothing) Then
                Me.fWSCadastraProdutoSimplesOperationCompleted = AddressOf Me.OnfWSCadastraProdutoSimplesOperationCompleted
            End If
            Me.InvokeAsync("fWSCadastraProdutoSimples", New Object() {pid_loja, plogin, psenha, id_produto, cod_referencia, descricao, informacao, preco, peso, estoque, data_cadastro, ativo}, Me.fWSCadastraProdutoSimplesOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSCadastraProdutoSimplesOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSCadastraProdutoSimplesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSCadastraProdutoSimplesCompleted(Me, New fWSCadastraProdutoSimplesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSCadastraCaracteristicawsdl#fWSCadastraCaracteristica", RequestNamespace:="urn:fWSCadastraCaracteristicawsdl", ResponseNamespace:="urn:fWSCadastraCaracteristicawsdl")>  _
        Public Function fWSCadastraCaracteristica(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_caracterisitica As String, ByVal descricao As String, ByVal ativo As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_caracteristica As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSCadastraCaracteristica", New Object() {pid_loja, plogin, psenha, id_caracterisitica, descricao, ativo})
            id_caracteristica = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraCaracteristicaAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_caracterisitica As String, ByVal descricao As String, ByVal ativo As String)
            Me.fWSCadastraCaracteristicaAsync(pid_loja, plogin, psenha, id_caracterisitica, descricao, ativo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraCaracteristicaAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_caracterisitica As String, ByVal descricao As String, ByVal ativo As String, ByVal userState As Object)
            If (Me.fWSCadastraCaracteristicaOperationCompleted Is Nothing) Then
                Me.fWSCadastraCaracteristicaOperationCompleted = AddressOf Me.OnfWSCadastraCaracteristicaOperationCompleted
            End If
            Me.InvokeAsync("fWSCadastraCaracteristica", New Object() {pid_loja, plogin, psenha, id_caracterisitica, descricao, ativo}, Me.fWSCadastraCaracteristicaOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSCadastraCaracteristicaOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSCadastraCaracteristicaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSCadastraCaracteristicaCompleted(Me, New fWSCadastraCaracteristicaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSRelacionaCategPerfilwsdl#fWSRelacionaCategPerfil", RequestNamespace:="urn:fWSRelacionaCategPerfilwsdl", ResponseNamespace:="urn:fWSRelacionaCategPerfilwsdl")>  _
        Public Function fWSRelacionaCategPerfil(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_perfil As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_categoria As String, ByRef chaves As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSRelacionaCategPerfil", New Object() {pid_loja, plogin, psenha, id_perfil, id_categoria})
            chaves = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSRelacionaCategPerfilAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_perfil As String, ByVal id_categoria As String)
            Me.fWSRelacionaCategPerfilAsync(pid_loja, plogin, psenha, id_perfil, id_categoria, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSRelacionaCategPerfilAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_perfil As String, ByVal id_categoria As String, ByVal userState As Object)
            If (Me.fWSRelacionaCategPerfilOperationCompleted Is Nothing) Then
                Me.fWSRelacionaCategPerfilOperationCompleted = AddressOf Me.OnfWSRelacionaCategPerfilOperationCompleted
            End If
            Me.InvokeAsync("fWSRelacionaCategPerfil", New Object() {pid_loja, plogin, psenha, id_perfil, id_categoria}, Me.fWSRelacionaCategPerfilOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSRelacionaCategPerfilOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSRelacionaCategPerfilCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSRelacionaCategPerfilCompleted(Me, New fWSRelacionaCategPerfilCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSRelacionaCaractPerfilwsdl#fWSRelacionaCaractPerfil", RequestNamespace:="urn:fWSRelacionaCaractPerfilwsdl", ResponseNamespace:="urn:fWSRelacionaCaractPerfilwsdl")>  _
        Public Function fWSRelacionaCaractPerfil(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_perfil As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_caracteristica As String, ByRef chaves As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSRelacionaCaractPerfil", New Object() {pid_loja, plogin, psenha, id_perfil, id_caracteristica})
            chaves = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSRelacionaCaractPerfilAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_perfil As String, ByVal id_caracteristica As String)
            Me.fWSRelacionaCaractPerfilAsync(pid_loja, plogin, psenha, id_perfil, id_caracteristica, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSRelacionaCaractPerfilAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_perfil As String, ByVal id_caracteristica As String, ByVal userState As Object)
            If (Me.fWSRelacionaCaractPerfilOperationCompleted Is Nothing) Then
                Me.fWSRelacionaCaractPerfilOperationCompleted = AddressOf Me.OnfWSRelacionaCaractPerfilOperationCompleted
            End If
            Me.InvokeAsync("fWSRelacionaCaractPerfil", New Object() {pid_loja, plogin, psenha, id_perfil, id_caracteristica}, Me.fWSRelacionaCaractPerfilOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSRelacionaCaractPerfilOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSRelacionaCaractPerfilCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSRelacionaCaractPerfilCompleted(Me, New fWSRelacionaCaractPerfilCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSRelacionaCategProdutowsdl#fWSRelacionaCategProduto", RequestNamespace:="urn:fWSRelacionaCategProdutowsdl", ResponseNamespace:="urn:fWSRelacionaCategProdutowsdl")>  _
        Public Function fWSRelacionaCategProduto(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_categoria As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_produto As String, ByVal ids_categoria() As Categoria, ByRef chaves As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSRelacionaCategProduto", New Object() {pid_loja, plogin, psenha, id_categoria, id_produto, ids_categoria})
            chaves = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSRelacionaCategProdutoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_categoria As String, ByVal id_produto As String, ByVal ids_categoria() As Categoria)
            Me.fWSRelacionaCategProdutoAsync(pid_loja, plogin, psenha, id_categoria, id_produto, ids_categoria, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSRelacionaCategProdutoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_categoria As String, ByVal id_produto As String, ByVal ids_categoria() As Categoria, ByVal userState As Object)
            If (Me.fWSRelacionaCategProdutoOperationCompleted Is Nothing) Then
                Me.fWSRelacionaCategProdutoOperationCompleted = AddressOf Me.OnfWSRelacionaCategProdutoOperationCompleted
            End If
            Me.InvokeAsync("fWSRelacionaCategProduto", New Object() {pid_loja, plogin, psenha, id_categoria, id_produto, ids_categoria}, Me.fWSRelacionaCategProdutoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSRelacionaCategProdutoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSRelacionaCategProdutoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSRelacionaCategProdutoCompleted(Me, New fWSRelacionaCategProdutoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSCadastraDadosProdutowsdl#fWSCadastraDadosProduto", RequestNamespace:="urn:fWSCadastraDadosProdutowsdl", ResponseNamespace:="urn:fWSCadastraDadosProdutowsdl")>  _
        Public Function fWSCadastraDadosProduto(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_produto As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_caracteristica As String, ByVal valor As String, ByRef chaves As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSCadastraDadosProduto", New Object() {pid_loja, plogin, psenha, id_produto, id_caracteristica, valor})
            chaves = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraDadosProdutoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_produto As String, ByVal id_caracteristica As String, ByVal valor As String)
            Me.fWSCadastraDadosProdutoAsync(pid_loja, plogin, psenha, id_produto, id_caracteristica, valor, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraDadosProdutoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_produto As String, ByVal id_caracteristica As String, ByVal valor As String, ByVal userState As Object)
            If (Me.fWSCadastraDadosProdutoOperationCompleted Is Nothing) Then
                Me.fWSCadastraDadosProdutoOperationCompleted = AddressOf Me.OnfWSCadastraDadosProdutoOperationCompleted
            End If
            Me.InvokeAsync("fWSCadastraDadosProduto", New Object() {pid_loja, plogin, psenha, id_produto, id_caracteristica, valor}, Me.fWSCadastraDadosProdutoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSCadastraDadosProdutoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSCadastraDadosProdutoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSCadastraDadosProdutoCompleted(Me, New fWSCadastraDadosProdutoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSCadastraGradeProdutowsdl#fWSCadastraGradeProduto", RequestNamespace:="urn:fWSCadastraGradeProdutowsdl", ResponseNamespace:="urn:fWSCadastraGradeProdutowsdl")>  _
        Public Function fWSCadastraGradeProduto(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_grade As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_produto As String, ByVal cod_referencia As String, ByVal peso As String, ByVal peso_cubico As String, ByVal custo As String, ByVal preco As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal estoque As String, ByVal ativo As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSCadastraGradeProduto", New Object() {pid_loja, plogin, psenha, id_grade, id_produto, cod_referencia, peso, peso_cubico, custo, preco, estoque, ativo})
            id_grade = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraGradeProdutoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_grade As String, ByVal id_produto As String, ByVal cod_referencia As String, ByVal peso As String, ByVal peso_cubico As String, ByVal custo As String, ByVal preco As String, ByVal estoque As String, ByVal ativo As String)
            Me.fWSCadastraGradeProdutoAsync(pid_loja, plogin, psenha, id_grade, id_produto, cod_referencia, peso, peso_cubico, custo, preco, estoque, ativo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraGradeProdutoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_grade As String, ByVal id_produto As String, ByVal cod_referencia As String, ByVal peso As String, ByVal peso_cubico As String, ByVal custo As String, ByVal preco As String, ByVal estoque As String, ByVal ativo As String, ByVal userState As Object)
            If (Me.fWSCadastraGradeProdutoOperationCompleted Is Nothing) Then
                Me.fWSCadastraGradeProdutoOperationCompleted = AddressOf Me.OnfWSCadastraGradeProdutoOperationCompleted
            End If
            Me.InvokeAsync("fWSCadastraGradeProduto", New Object() {pid_loja, plogin, psenha, id_grade, id_produto, cod_referencia, peso, peso_cubico, custo, preco, estoque, ativo}, Me.fWSCadastraGradeProdutoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSCadastraGradeProdutoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSCadastraGradeProdutoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSCadastraGradeProdutoCompleted(Me, New fWSCadastraGradeProdutoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSCadastraVariaProdutoswsdl#fWSCadastraVariaProdutos", RequestNamespace:="urn:fWSCadastraVariaProdutoswsdl", ResponseNamespace:="urn:fWSCadastraVariaProdutoswsdl")>  _
        Public Function fWSCadastraVariaProdutos(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_grade As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_caracteristica As String, ByVal valor As String, ByVal ativo As String, ByRef chaves As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSCadastraVariaProdutos", New Object() {pid_loja, plogin, psenha, id_grade, id_caracteristica, valor, ativo})
            chaves = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraVariaProdutosAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_grade As String, ByVal id_caracteristica As String, ByVal valor As String, ByVal ativo As String)
            Me.fWSCadastraVariaProdutosAsync(pid_loja, plogin, psenha, id_grade, id_caracteristica, valor, ativo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraVariaProdutosAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_grade As String, ByVal id_caracteristica As String, ByVal valor As String, ByVal ativo As String, ByVal userState As Object)
            If (Me.fWSCadastraVariaProdutosOperationCompleted Is Nothing) Then
                Me.fWSCadastraVariaProdutosOperationCompleted = AddressOf Me.OnfWSCadastraVariaProdutosOperationCompleted
            End If
            Me.InvokeAsync("fWSCadastraVariaProdutos", New Object() {pid_loja, plogin, psenha, id_grade, id_caracteristica, valor, ativo}, Me.fWSCadastraVariaProdutosOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSCadastraVariaProdutosOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSCadastraVariaProdutosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSCadastraVariaProdutosCompleted(Me, New fWSCadastraVariaProdutosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSCadastraPromocaowsdl#fWSCadastraPromocao", RequestNamespace:="urn:fWSCadastraPromocaowsdl", ResponseNamespace:="urn:fWSCadastraPromocaowsdl")>  _
        Public Function fWSCadastraPromocao(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_promocao As String, ByVal descricao As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal data_inicial As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal data_final As Date, ByVal ativo As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSCadastraPromocao", New Object() {pid_loja, plogin, psenha, id_promocao, descricao, data_inicial, data_final, ativo})
            id_promocao = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraPromocaoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_promocao As String, ByVal descricao As String, ByVal data_inicial As Date, ByVal data_final As Date, ByVal ativo As String)
            Me.fWSCadastraPromocaoAsync(pid_loja, plogin, psenha, id_promocao, descricao, data_inicial, data_final, ativo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraPromocaoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_promocao As String, ByVal descricao As String, ByVal data_inicial As Date, ByVal data_final As Date, ByVal ativo As String, ByVal userState As Object)
            If (Me.fWSCadastraPromocaoOperationCompleted Is Nothing) Then
                Me.fWSCadastraPromocaoOperationCompleted = AddressOf Me.OnfWSCadastraPromocaoOperationCompleted
            End If
            Me.InvokeAsync("fWSCadastraPromocao", New Object() {pid_loja, plogin, psenha, id_promocao, descricao, data_inicial, data_final, ativo}, Me.fWSCadastraPromocaoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSCadastraPromocaoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSCadastraPromocaoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSCadastraPromocaoCompleted(Me, New fWSCadastraPromocaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSRelacionaPromoProdutowsdl#fWSRelacionaPromoProduto", RequestNamespace:="urn:fWSRelacionaPromoProdutowsdl", ResponseNamespace:="urn:fWSRelacionaPromoProdutowsdl")>  _
        Public Function fWSRelacionaPromoProduto(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_produto As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_promocao As String, ByVal preco_promocao As String, ByRef chaves As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSRelacionaPromoProduto", New Object() {pid_loja, plogin, psenha, id_produto, id_promocao, preco_promocao})
            chaves = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSRelacionaPromoProdutoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_produto As String, ByVal id_promocao As String, ByVal preco_promocao As String)
            Me.fWSRelacionaPromoProdutoAsync(pid_loja, plogin, psenha, id_produto, id_promocao, preco_promocao, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSRelacionaPromoProdutoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_produto As String, ByVal id_promocao As String, ByVal preco_promocao As String, ByVal userState As Object)
            If (Me.fWSRelacionaPromoProdutoOperationCompleted Is Nothing) Then
                Me.fWSRelacionaPromoProdutoOperationCompleted = AddressOf Me.OnfWSRelacionaPromoProdutoOperationCompleted
            End If
            Me.InvokeAsync("fWSRelacionaPromoProduto", New Object() {pid_loja, plogin, psenha, id_produto, id_promocao, preco_promocao}, Me.fWSRelacionaPromoProdutoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSRelacionaPromoProdutoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSRelacionaPromoProdutoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSRelacionaPromoProdutoCompleted(Me, New fWSRelacionaPromoProdutoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSCadastraClientewsdl#fWSCadastraCliente", RequestNamespace:="urn:fWSCadastraClientewsdl", ResponseNamespace:="urn:fWSCadastraClientewsdl")>  _
        Public Function fWSCadastraCliente( _
                    <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String,  _
                    ByVal plogin As String,  _
                    ByVal psenha As String,  _
                    <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_cliente As String,  _
                    <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_pais As String,  _
                    <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_revenda As String,  _
                    ByVal tipo_pessoa As String,  _
                    ByVal bloqueado As String,  _
                    ByVal nome As String,  _
                    ByVal cnpf_cpf As String,  _
                    ByVal ie_rg As String,  _
                    <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal data_nasc As Date,  _
                    <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal data_cadastro As Date,  _
                    ByVal email As String,  _
                    ByVal senha As String,  _
                    ByVal observacao As String,  _
                    ByVal ativo As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSCadastraCliente", New Object() {pid_loja, plogin, psenha, id_cliente, id_pais, id_revenda, tipo_pessoa, bloqueado, nome, cnpf_cpf, ie_rg, data_nasc, data_cadastro, email, senha, observacao, ativo})
            id_cliente = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraClienteAsync( _
                    ByVal pid_loja As String,  _
                    ByVal plogin As String,  _
                    ByVal psenha As String,  _
                    ByVal id_cliente As String,  _
                    ByVal id_pais As String,  _
                    ByVal id_revenda As String,  _
                    ByVal tipo_pessoa As String,  _
                    ByVal bloqueado As String,  _
                    ByVal nome As String,  _
                    ByVal cnpf_cpf As String,  _
                    ByVal ie_rg As String,  _
                    ByVal data_nasc As Date,  _
                    ByVal data_cadastro As Date,  _
                    ByVal email As String,  _
                    ByVal senha As String,  _
                    ByVal observacao As String,  _
                    ByVal ativo As String)
            Me.fWSCadastraClienteAsync(pid_loja, plogin, psenha, id_cliente, id_pais, id_revenda, tipo_pessoa, bloqueado, nome, cnpf_cpf, ie_rg, data_nasc, data_cadastro, email, senha, observacao, ativo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraClienteAsync( _
                    ByVal pid_loja As String,  _
                    ByVal plogin As String,  _
                    ByVal psenha As String,  _
                    ByVal id_cliente As String,  _
                    ByVal id_pais As String,  _
                    ByVal id_revenda As String,  _
                    ByVal tipo_pessoa As String,  _
                    ByVal bloqueado As String,  _
                    ByVal nome As String,  _
                    ByVal cnpf_cpf As String,  _
                    ByVal ie_rg As String,  _
                    ByVal data_nasc As Date,  _
                    ByVal data_cadastro As Date,  _
                    ByVal email As String,  _
                    ByVal senha As String,  _
                    ByVal observacao As String,  _
                    ByVal ativo As String,  _
                    ByVal userState As Object)
            If (Me.fWSCadastraClienteOperationCompleted Is Nothing) Then
                Me.fWSCadastraClienteOperationCompleted = AddressOf Me.OnfWSCadastraClienteOperationCompleted
            End If
            Me.InvokeAsync("fWSCadastraCliente", New Object() {pid_loja, plogin, psenha, id_cliente, id_pais, id_revenda, tipo_pessoa, bloqueado, nome, cnpf_cpf, ie_rg, data_nasc, data_cadastro, email, senha, observacao, ativo}, Me.fWSCadastraClienteOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSCadastraClienteOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSCadastraClienteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSCadastraClienteCompleted(Me, New fWSCadastraClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSConsultaEnderecosClientewsdl#fWSConsultaEnderecosCliente", RequestNamespace:="urn:fWSConsultaEnderecosClientewsdl", ResponseNamespace:="urn:fWSConsultaEnderecosClientewsdl")>  _
        Public Function fWSConsultaEnderecosCliente(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_cliente As String, ByRef enderecos() As EnderecoClienteComId) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSConsultaEnderecosCliente", New Object() {pid_loja, plogin, psenha, id_cliente})
            id_cliente = CType(results(1),String)
            enderecos = CType(results(2),EnderecoClienteComId())
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSConsultaEnderecosClienteAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_cliente As String)
            Me.fWSConsultaEnderecosClienteAsync(pid_loja, plogin, psenha, id_cliente, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSConsultaEnderecosClienteAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_cliente As String, ByVal userState As Object)
            If (Me.fWSConsultaEnderecosClienteOperationCompleted Is Nothing) Then
                Me.fWSConsultaEnderecosClienteOperationCompleted = AddressOf Me.OnfWSConsultaEnderecosClienteOperationCompleted
            End If
            Me.InvokeAsync("fWSConsultaEnderecosCliente", New Object() {pid_loja, plogin, psenha, id_cliente}, Me.fWSConsultaEnderecosClienteOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSConsultaEnderecosClienteOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSConsultaEnderecosClienteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSConsultaEnderecosClienteCompleted(Me, New fWSConsultaEnderecosClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSExcluiEnderecoClientewsdl#fWSExcluiEnderecoCliente", RequestNamespace:="urn:fWSExcluiEnderecoClientewsdl", ResponseNamespace:="urn:fWSExcluiEnderecoClientewsdl")>  _
        Public Function fWSExcluiEnderecoCliente(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_cliente As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_endereco As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSExcluiEnderecoCliente", New Object() {pid_loja, plogin, psenha, id_cliente, id_endereco})
            id_cliente = CType(results(1),String)
            id_endereco = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSExcluiEnderecoClienteAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_cliente As String, ByVal id_endereco As String)
            Me.fWSExcluiEnderecoClienteAsync(pid_loja, plogin, psenha, id_cliente, id_endereco, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSExcluiEnderecoClienteAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_cliente As String, ByVal id_endereco As String, ByVal userState As Object)
            If (Me.fWSExcluiEnderecoClienteOperationCompleted Is Nothing) Then
                Me.fWSExcluiEnderecoClienteOperationCompleted = AddressOf Me.OnfWSExcluiEnderecoClienteOperationCompleted
            End If
            Me.InvokeAsync("fWSExcluiEnderecoCliente", New Object() {pid_loja, plogin, psenha, id_cliente, id_endereco}, Me.fWSExcluiEnderecoClienteOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSExcluiEnderecoClienteOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSExcluiEnderecoClienteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSExcluiEnderecoClienteCompleted(Me, New fWSExcluiEnderecoClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSCadastraClienteAvancadowsdl#fWSCadastraClienteAvancado", RequestNamespace:="urn:fWSCadastraClienteAvancadowsdl", ResponseNamespace:="urn:fWSCadastraClienteAvancadowsdl")>  _
        Public Function fWSCadastraClienteAvancado( _
                    <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String,  _
                    ByVal plogin As String,  _
                    ByVal psenha As String,  _
                    <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_cliente As String,  _
                    <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_pais As String,  _
                    <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_revenda As String,  _
                    ByVal tipo_pessoa As String,  _
                    ByVal bloqueado As String,  _
                    ByVal nome As String,  _
                    ByVal cnpf_cpf As String,  _
                    ByVal ie_rg As String,  _
                    <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal data_nasc As Date,  _
                    <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal data_cadastro As Date,  _
                    ByVal email As String,  _
                    ByVal senha As String,  _
                    ByVal observacao As String,  _
                    ByVal ativo As String,  _
                    ByVal desconto_revenda As String,  _
                    ByVal razao_social As String,  _
                    ByVal enderecos() As Endereco) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSCadastraClienteAvancado", New Object() {pid_loja, plogin, psenha, id_cliente, id_pais, id_revenda, tipo_pessoa, bloqueado, nome, cnpf_cpf, ie_rg, data_nasc, data_cadastro, email, senha, observacao, ativo, desconto_revenda, razao_social, enderecos})
            id_cliente = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraClienteAvancadoAsync( _
                    ByVal pid_loja As String,  _
                    ByVal plogin As String,  _
                    ByVal psenha As String,  _
                    ByVal id_cliente As String,  _
                    ByVal id_pais As String,  _
                    ByVal id_revenda As String,  _
                    ByVal tipo_pessoa As String,  _
                    ByVal bloqueado As String,  _
                    ByVal nome As String,  _
                    ByVal cnpf_cpf As String,  _
                    ByVal ie_rg As String,  _
                    ByVal data_nasc As Date,  _
                    ByVal data_cadastro As Date,  _
                    ByVal email As String,  _
                    ByVal senha As String,  _
                    ByVal observacao As String,  _
                    ByVal ativo As String,  _
                    ByVal desconto_revenda As String,  _
                    ByVal razao_social As String,  _
                    ByVal enderecos() As Endereco)
            Me.fWSCadastraClienteAvancadoAsync(pid_loja, plogin, psenha, id_cliente, id_pais, id_revenda, tipo_pessoa, bloqueado, nome, cnpf_cpf, ie_rg, data_nasc, data_cadastro, email, senha, observacao, ativo, desconto_revenda, razao_social, enderecos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraClienteAvancadoAsync( _
                    ByVal pid_loja As String,  _
                    ByVal plogin As String,  _
                    ByVal psenha As String,  _
                    ByVal id_cliente As String,  _
                    ByVal id_pais As String,  _
                    ByVal id_revenda As String,  _
                    ByVal tipo_pessoa As String,  _
                    ByVal bloqueado As String,  _
                    ByVal nome As String,  _
                    ByVal cnpf_cpf As String,  _
                    ByVal ie_rg As String,  _
                    ByVal data_nasc As Date,  _
                    ByVal data_cadastro As Date,  _
                    ByVal email As String,  _
                    ByVal senha As String,  _
                    ByVal observacao As String,  _
                    ByVal ativo As String,  _
                    ByVal desconto_revenda As String,  _
                    ByVal razao_social As String,  _
                    ByVal enderecos() As Endereco,  _
                    ByVal userState As Object)
            If (Me.fWSCadastraClienteAvancadoOperationCompleted Is Nothing) Then
                Me.fWSCadastraClienteAvancadoOperationCompleted = AddressOf Me.OnfWSCadastraClienteAvancadoOperationCompleted
            End If
            Me.InvokeAsync("fWSCadastraClienteAvancado", New Object() {pid_loja, plogin, psenha, id_cliente, id_pais, id_revenda, tipo_pessoa, bloqueado, nome, cnpf_cpf, ie_rg, data_nasc, data_cadastro, email, senha, observacao, ativo, desconto_revenda, razao_social, enderecos}, Me.fWSCadastraClienteAvancadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSCadastraClienteAvancadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSCadastraClienteAvancadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSCadastraClienteAvancadoCompleted(Me, New fWSCadastraClienteAvancadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSCadastraContatosClientewsdl#fWSCadastraContatosCliente", RequestNamespace:="urn:fWSCadastraContatosClientewsdl", ResponseNamespace:="urn:fWSCadastraContatosClientewsdl")>  _
        Public Function fWSCadastraContatosCliente(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_cliente As String, ByVal telefone As String, ByVal telefone_adicional As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSCadastraContatosCliente", New Object() {pid_loja, plogin, psenha, id_cliente, telefone, telefone_adicional})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraContatosClienteAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_cliente As String, ByVal telefone As String, ByVal telefone_adicional As String)
            Me.fWSCadastraContatosClienteAsync(pid_loja, plogin, psenha, id_cliente, telefone, telefone_adicional, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraContatosClienteAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_cliente As String, ByVal telefone As String, ByVal telefone_adicional As String, ByVal userState As Object)
            If (Me.fWSCadastraContatosClienteOperationCompleted Is Nothing) Then
                Me.fWSCadastraContatosClienteOperationCompleted = AddressOf Me.OnfWSCadastraContatosClienteOperationCompleted
            End If
            Me.InvokeAsync("fWSCadastraContatosCliente", New Object() {pid_loja, plogin, psenha, id_cliente, telefone, telefone_adicional}, Me.fWSCadastraContatosClienteOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSCadastraContatosClienteOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSCadastraContatosClienteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSCadastraContatosClienteCompleted(Me, New fWSCadastraContatosClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSCadastraEnderecoClientewsdl#fWSCadastraEnderecoCliente", RequestNamespace:="urn:fWSCadastraEnderecoClientewsdl", ResponseNamespace:="urn:fWSCadastraEnderecoClientewsdl")>  _
        Public Function fWSCadastraEnderecoCliente(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_cliente As String, ByVal logradouro As String, ByVal numero As String, ByVal bairro As String, ByVal complemento As String, ByVal cidade As String, ByVal estado As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal cep As String, ByVal pais As String, ByVal descricao As String, ByVal destinatario As String, ByVal tipo_entrega As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSCadastraEnderecoCliente", New Object() {pid_loja, plogin, psenha, id_cliente, logradouro, numero, bairro, complemento, cidade, estado, cep, pais, descricao, destinatario, tipo_entrega})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraEnderecoClienteAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_cliente As String, ByVal logradouro As String, ByVal numero As String, ByVal bairro As String, ByVal complemento As String, ByVal cidade As String, ByVal estado As String, ByVal cep As String, ByVal pais As String, ByVal descricao As String, ByVal destinatario As String, ByVal tipo_entrega As String)
            Me.fWSCadastraEnderecoClienteAsync(pid_loja, plogin, psenha, id_cliente, logradouro, numero, bairro, complemento, cidade, estado, cep, pais, descricao, destinatario, tipo_entrega, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraEnderecoClienteAsync( _
                    ByVal pid_loja As String,  _
                    ByVal plogin As String,  _
                    ByVal psenha As String,  _
                    ByVal id_cliente As String,  _
                    ByVal logradouro As String,  _
                    ByVal numero As String,  _
                    ByVal bairro As String,  _
                    ByVal complemento As String,  _
                    ByVal cidade As String,  _
                    ByVal estado As String,  _
                    ByVal cep As String,  _
                    ByVal pais As String,  _
                    ByVal descricao As String,  _
                    ByVal destinatario As String,  _
                    ByVal tipo_entrega As String,  _
                    ByVal userState As Object)
            If (Me.fWSCadastraEnderecoClienteOperationCompleted Is Nothing) Then
                Me.fWSCadastraEnderecoClienteOperationCompleted = AddressOf Me.OnfWSCadastraEnderecoClienteOperationCompleted
            End If
            Me.InvokeAsync("fWSCadastraEnderecoCliente", New Object() {pid_loja, plogin, psenha, id_cliente, logradouro, numero, bairro, complemento, cidade, estado, cep, pais, descricao, destinatario, tipo_entrega}, Me.fWSCadastraEnderecoClienteOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSCadastraEnderecoClienteOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSCadastraEnderecoClienteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSCadastraEnderecoClienteCompleted(Me, New fWSCadastraEnderecoClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSCadastraListaEnderecowsdl#fWSCadastraListaEndereco", RequestNamespace:="urn:fWSCadastraListaEnderecowsdl", ResponseNamespace:="urn:fWSCadastraListaEnderecowsdl")>  _
        Public Function fWSCadastraListaEndereco( _
                    <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String,  _
                    ByVal plogin As String,  _
                    ByVal psenha As String,  _
                    <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_cliente As String,  _
                    ByVal logradouro As String,  _
                    ByVal descricao As String,  _
                    ByVal destinatario As String,  _
                    ByVal tipo_entrega As String,  _
                    ByVal numero As String,  _
                    ByVal bairro As String,  _
                    ByVal complemento As String,  _
                    ByVal cidade As String,  _
                    ByVal estado As String,  _
                    ByVal cep As String,  _
                    ByVal pais As String,  _
                    <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_endereco As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSCadastraListaEndereco", New Object() {pid_loja, plogin, psenha, id_cliente, logradouro, descricao, destinatario, tipo_entrega, numero, bairro, complemento, cidade, estado, cep, pais})
            id_endereco = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraListaEnderecoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_cliente As String, ByVal logradouro As String, ByVal descricao As String, ByVal destinatario As String, ByVal tipo_entrega As String, ByVal numero As String, ByVal bairro As String, ByVal complemento As String, ByVal cidade As String, ByVal estado As String, ByVal cep As String, ByVal pais As String)
            Me.fWSCadastraListaEnderecoAsync(pid_loja, plogin, psenha, id_cliente, logradouro, descricao, destinatario, tipo_entrega, numero, bairro, complemento, cidade, estado, cep, pais, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraListaEnderecoAsync( _
                    ByVal pid_loja As String,  _
                    ByVal plogin As String,  _
                    ByVal psenha As String,  _
                    ByVal id_cliente As String,  _
                    ByVal logradouro As String,  _
                    ByVal descricao As String,  _
                    ByVal destinatario As String,  _
                    ByVal tipo_entrega As String,  _
                    ByVal numero As String,  _
                    ByVal bairro As String,  _
                    ByVal complemento As String,  _
                    ByVal cidade As String,  _
                    ByVal estado As String,  _
                    ByVal cep As String,  _
                    ByVal pais As String,  _
                    ByVal userState As Object)
            If (Me.fWSCadastraListaEnderecoOperationCompleted Is Nothing) Then
                Me.fWSCadastraListaEnderecoOperationCompleted = AddressOf Me.OnfWSCadastraListaEnderecoOperationCompleted
            End If
            Me.InvokeAsync("fWSCadastraListaEndereco", New Object() {pid_loja, plogin, psenha, id_cliente, logradouro, descricao, destinatario, tipo_entrega, numero, bairro, complemento, cidade, estado, cep, pais}, Me.fWSCadastraListaEnderecoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSCadastraListaEnderecoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSCadastraListaEnderecoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSCadastraListaEnderecoCompleted(Me, New fWSCadastraListaEnderecoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSCadastraEnderecoClienteAvancadowsdl#fWSCadastraEnderecoClienteAvancado", RequestNamespace:="urn:fWSCadastraEnderecoClienteAvancadowsdl", ResponseNamespace:="urn:fWSCadastraEnderecoClienteAvancadowsdl")>  _
        Public Function fWSCadastraEnderecoClienteAvancado( _
                    <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String,  _
                    ByVal plogin As String,  _
                    ByVal psenha As String,  _
                    <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_cliente As String,  _
                    ByVal logradouro As String,  _
                    ByVal numero As String,  _
                    ByVal bairro As String,  _
                    ByVal complemento As String,  _
                    ByVal cidade As String,  _
                    ByVal estado As String,  _
                    <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal cep As String,  _
                    ByVal pais As String,  _
                    ByVal descricao As String,  _
                    ByVal destinatario As String,  _
                    ByVal tipo_entrega As String,  _
                    <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSCadastraEnderecoClienteAvancado", New Object() {pid_loja, plogin, psenha, id_cliente, logradouro, numero, bairro, complemento, cidade, estado, cep, pais, descricao, destinatario, tipo_entrega})
            id = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraEnderecoClienteAvancadoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_cliente As String, ByVal logradouro As String, ByVal numero As String, ByVal bairro As String, ByVal complemento As String, ByVal cidade As String, ByVal estado As String, ByVal cep As String, ByVal pais As String, ByVal descricao As String, ByVal destinatario As String, ByVal tipo_entrega As String)
            Me.fWSCadastraEnderecoClienteAvancadoAsync(pid_loja, plogin, psenha, id_cliente, logradouro, numero, bairro, complemento, cidade, estado, cep, pais, descricao, destinatario, tipo_entrega, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraEnderecoClienteAvancadoAsync( _
                    ByVal pid_loja As String,  _
                    ByVal plogin As String,  _
                    ByVal psenha As String,  _
                    ByVal id_cliente As String,  _
                    ByVal logradouro As String,  _
                    ByVal numero As String,  _
                    ByVal bairro As String,  _
                    ByVal complemento As String,  _
                    ByVal cidade As String,  _
                    ByVal estado As String,  _
                    ByVal cep As String,  _
                    ByVal pais As String,  _
                    ByVal descricao As String,  _
                    ByVal destinatario As String,  _
                    ByVal tipo_entrega As String,  _
                    ByVal userState As Object)
            If (Me.fWSCadastraEnderecoClienteAvancadoOperationCompleted Is Nothing) Then
                Me.fWSCadastraEnderecoClienteAvancadoOperationCompleted = AddressOf Me.OnfWSCadastraEnderecoClienteAvancadoOperationCompleted
            End If
            Me.InvokeAsync("fWSCadastraEnderecoClienteAvancado", New Object() {pid_loja, plogin, psenha, id_cliente, logradouro, numero, bairro, complemento, cidade, estado, cep, pais, descricao, destinatario, tipo_entrega}, Me.fWSCadastraEnderecoClienteAvancadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSCadastraEnderecoClienteAvancadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSCadastraEnderecoClienteAvancadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSCadastraEnderecoClienteAvancadoCompleted(Me, New fWSCadastraEnderecoClienteAvancadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSImportaClienteswsdl#fWSImportaClientes", RequestNamespace:="urn:fWSImportaClienteswsdl", ResponseNamespace:="urn:fWSImportaClienteswsdl")>  _
        Public Function fWSImportaClientes(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal data_inicial As String, ByVal data_final As String, ByVal hora_inicial As String, ByVal hora_final As String, ByVal status_atual As String) As <System.Xml.Serialization.SoapElementAttribute("return")> Cliente()
            Dim results() As Object = Me.Invoke("fWSImportaClientes", New Object() {pid_loja, plogin, psenha, data_inicial, data_final, hora_inicial, hora_final, status_atual})
            Return CType(results(0),Cliente())
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientesAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal data_inicial As String, ByVal data_final As String, ByVal hora_inicial As String, ByVal hora_final As String, ByVal status_atual As String)
            Me.fWSImportaClientesAsync(pid_loja, plogin, psenha, data_inicial, data_final, hora_inicial, hora_final, status_atual, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientesAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal data_inicial As String, ByVal data_final As String, ByVal hora_inicial As String, ByVal hora_final As String, ByVal status_atual As String, ByVal userState As Object)
            If (Me.fWSImportaClientesOperationCompleted Is Nothing) Then
                Me.fWSImportaClientesOperationCompleted = AddressOf Me.OnfWSImportaClientesOperationCompleted
            End If
            Me.InvokeAsync("fWSImportaClientes", New Object() {pid_loja, plogin, psenha, data_inicial, data_final, hora_inicial, hora_final, status_atual}, Me.fWSImportaClientesOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSImportaClientesOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSImportaClientesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSImportaClientesCompleted(Me, New fWSImportaClientesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSImportaClientesAvancadowsdl#fWSImportaClientesAvancado", RequestNamespace:="urn:fWSImportaClientesAvancadowsdl", ResponseNamespace:="urn:fWSImportaClientesAvancadowsdl")>  _
        Public Function fWSImportaClientesAvancado(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal data_inicial As String, ByVal data_final As String, ByVal hora_inicial As String, ByVal hora_final As String, ByVal status_atual As String) As <System.Xml.Serialization.SoapElementAttribute("return")> ClienteAvancado()
            Dim results() As Object = Me.Invoke("fWSImportaClientesAvancado", New Object() {pid_loja, plogin, psenha, data_inicial, data_final, hora_inicial, hora_final, status_atual})
            Return CType(results(0),ClienteAvancado())
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientesAvancadoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal data_inicial As String, ByVal data_final As String, ByVal hora_inicial As String, ByVal hora_final As String, ByVal status_atual As String)
            Me.fWSImportaClientesAvancadoAsync(pid_loja, plogin, psenha, data_inicial, data_final, hora_inicial, hora_final, status_atual, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientesAvancadoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal data_inicial As String, ByVal data_final As String, ByVal hora_inicial As String, ByVal hora_final As String, ByVal status_atual As String, ByVal userState As Object)
            If (Me.fWSImportaClientesAvancadoOperationCompleted Is Nothing) Then
                Me.fWSImportaClientesAvancadoOperationCompleted = AddressOf Me.OnfWSImportaClientesAvancadoOperationCompleted
            End If
            Me.InvokeAsync("fWSImportaClientesAvancado", New Object() {pid_loja, plogin, psenha, data_inicial, data_final, hora_inicial, hora_final, status_atual}, Me.fWSImportaClientesAvancadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSImportaClientesAvancadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSImportaClientesAvancadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSImportaClientesAvancadoCompleted(Me, New fWSImportaClientesAvancadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSImportaClientesComPedidowsdl#fWSImportaClientesComPedido", RequestNamespace:="urn:fWSImportaClientesComPedidowsdl", ResponseNamespace:="urn:fWSImportaClientesComPedidowsdl")>  _
        Public Function fWSImportaClientesComPedido(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal data_inicial As String, ByVal data_final As String, ByVal hora_inicial As String, ByVal hora_final As String, ByVal status_atual As String) As <System.Xml.Serialization.SoapElementAttribute("return")> Cliente()
            Dim results() As Object = Me.Invoke("fWSImportaClientesComPedido", New Object() {pid_loja, plogin, psenha, data_inicial, data_final, hora_inicial, hora_final, status_atual})
            Return CType(results(0),Cliente())
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientesComPedidoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal data_inicial As String, ByVal data_final As String, ByVal hora_inicial As String, ByVal hora_final As String, ByVal status_atual As String)
            Me.fWSImportaClientesComPedidoAsync(pid_loja, plogin, psenha, data_inicial, data_final, hora_inicial, hora_final, status_atual, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientesComPedidoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal data_inicial As String, ByVal data_final As String, ByVal hora_inicial As String, ByVal hora_final As String, ByVal status_atual As String, ByVal userState As Object)
            If (Me.fWSImportaClientesComPedidoOperationCompleted Is Nothing) Then
                Me.fWSImportaClientesComPedidoOperationCompleted = AddressOf Me.OnfWSImportaClientesComPedidoOperationCompleted
            End If
            Me.InvokeAsync("fWSImportaClientesComPedido", New Object() {pid_loja, plogin, psenha, data_inicial, data_final, hora_inicial, hora_final, status_atual}, Me.fWSImportaClientesComPedidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSImportaClientesComPedidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSImportaClientesComPedidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSImportaClientesComPedidoCompleted(Me, New fWSImportaClientesComPedidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSImportaClientesComPedidoAvancadowsdl#fWSImportaClientesComPedidoAvancado", RequestNamespace:="urn:fWSImportaClientesComPedidoAvancadowsdl", ResponseNamespace:="urn:fWSImportaClientesComPedidoAvancadowsdl")>  _
        Public Function fWSImportaClientesComPedidoAvancado(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal data_inicial As String, ByVal data_final As String, ByVal hora_inicial As String, ByVal hora_final As String, ByVal status_atual As String) As <System.Xml.Serialization.SoapElementAttribute("return")> ClienteAvancado()
            Dim results() As Object = Me.Invoke("fWSImportaClientesComPedidoAvancado", New Object() {pid_loja, plogin, psenha, data_inicial, data_final, hora_inicial, hora_final, status_atual})
            Return CType(results(0),ClienteAvancado())
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientesComPedidoAvancadoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal data_inicial As String, ByVal data_final As String, ByVal hora_inicial As String, ByVal hora_final As String, ByVal status_atual As String)
            Me.fWSImportaClientesComPedidoAvancadoAsync(pid_loja, plogin, psenha, data_inicial, data_final, hora_inicial, hora_final, status_atual, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientesComPedidoAvancadoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal data_inicial As String, ByVal data_final As String, ByVal hora_inicial As String, ByVal hora_final As String, ByVal status_atual As String, ByVal userState As Object)
            If (Me.fWSImportaClientesComPedidoAvancadoOperationCompleted Is Nothing) Then
                Me.fWSImportaClientesComPedidoAvancadoOperationCompleted = AddressOf Me.OnfWSImportaClientesComPedidoAvancadoOperationCompleted
            End If
            Me.InvokeAsync("fWSImportaClientesComPedidoAvancado", New Object() {pid_loja, plogin, psenha, data_inicial, data_final, hora_inicial, hora_final, status_atual}, Me.fWSImportaClientesComPedidoAvancadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSImportaClientesComPedidoAvancadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSImportaClientesComPedidoAvancadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSImportaClientesComPedidoAvancadoCompleted(Me, New fWSImportaClientesComPedidoAvancadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSImportaClientesSemDadosPedidowsdl#fWSImportaClientesSemPedido", RequestNamespace:="urn:fWSImportaClientesSemDadosPedidowsdl", ResponseNamespace:="urn:fWSImportaClientesSemDadosPedidowsdl")>  _
        Public Function fWSImportaClientesSemDadosPedido(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal data_inicial As String, ByVal data_final As String, ByVal hora_inicial As String, ByVal hora_final As String) As <System.Xml.Serialization.SoapElementAttribute("return")> ClienteSemDadosPedido()
            Dim results() As Object = Me.Invoke("fWSImportaClientesSemDadosPedido", New Object() {pid_loja, plogin, psenha, data_inicial, data_final, hora_inicial, hora_final})
            Return CType(results(0),ClienteSemDadosPedido())
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientesSemDadosPedidoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal data_inicial As String, ByVal data_final As String, ByVal hora_inicial As String, ByVal hora_final As String)
            Me.fWSImportaClientesSemDadosPedidoAsync(pid_loja, plogin, psenha, data_inicial, data_final, hora_inicial, hora_final, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientesSemDadosPedidoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal data_inicial As String, ByVal data_final As String, ByVal hora_inicial As String, ByVal hora_final As String, ByVal userState As Object)
            If (Me.fWSImportaClientesSemDadosPedidoOperationCompleted Is Nothing) Then
                Me.fWSImportaClientesSemDadosPedidoOperationCompleted = AddressOf Me.OnfWSImportaClientesSemDadosPedidoOperationCompleted
            End If
            Me.InvokeAsync("fWSImportaClientesSemDadosPedido", New Object() {pid_loja, plogin, psenha, data_inicial, data_final, hora_inicial, hora_final}, Me.fWSImportaClientesSemDadosPedidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSImportaClientesSemDadosPedidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSImportaClientesSemDadosPedidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSImportaClientesSemDadosPedidoCompleted(Me, New fWSImportaClientesSemDadosPedidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSImportaClientesSemDadosPedidoAvancadowsdl#fWSImportaClientesSemPedidoAvanc"& _ 
            "ado", RequestNamespace:="urn:fWSImportaClientesSemDadosPedidoAvancadowsdl", ResponseNamespace:="urn:fWSImportaClientesSemDadosPedidoAvancadowsdl")>  _
        Public Function fWSImportaClientesSemDadosPedidoAvancado(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal data_inicial As String, ByVal data_final As String, ByVal hora_inicial As String, ByVal hora_final As String) As <System.Xml.Serialization.SoapElementAttribute("return")> ClienteSemDadosPedidoAvancado()
            Dim results() As Object = Me.Invoke("fWSImportaClientesSemDadosPedidoAvancado", New Object() {pid_loja, plogin, psenha, data_inicial, data_final, hora_inicial, hora_final})
            Return CType(results(0),ClienteSemDadosPedidoAvancado())
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientesSemDadosPedidoAvancadoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal data_inicial As String, ByVal data_final As String, ByVal hora_inicial As String, ByVal hora_final As String)
            Me.fWSImportaClientesSemDadosPedidoAvancadoAsync(pid_loja, plogin, psenha, data_inicial, data_final, hora_inicial, hora_final, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientesSemDadosPedidoAvancadoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal data_inicial As String, ByVal data_final As String, ByVal hora_inicial As String, ByVal hora_final As String, ByVal userState As Object)
            If (Me.fWSImportaClientesSemDadosPedidoAvancadoOperationCompleted Is Nothing) Then
                Me.fWSImportaClientesSemDadosPedidoAvancadoOperationCompleted = AddressOf Me.OnfWSImportaClientesSemDadosPedidoAvancadoOperationCompleted
            End If
            Me.InvokeAsync("fWSImportaClientesSemDadosPedidoAvancado", New Object() {pid_loja, plogin, psenha, data_inicial, data_final, hora_inicial, hora_final}, Me.fWSImportaClientesSemDadosPedidoAvancadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSImportaClientesSemDadosPedidoAvancadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSImportaClientesSemDadosPedidoAvancadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSImportaClientesSemDadosPedidoAvancadoCompleted(Me, New fWSImportaClientesSemDadosPedidoAvancadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSImportaClientePorIdwsdl#fWSImportaClientePorId", RequestNamespace:="urn:fWSImportaClientePorIdwsdl", ResponseNamespace:="urn:fWSImportaClientePorIdwsdl")>  _
        Public Function fWSImportaClientePorId(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_cliente As String) As <System.Xml.Serialization.SoapElementAttribute("return")> Cliente()
            Dim results() As Object = Me.Invoke("fWSImportaClientePorId", New Object() {pid_loja, plogin, psenha, id_cliente})
            Return CType(results(0),Cliente())
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientePorIdAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_cliente As String)
            Me.fWSImportaClientePorIdAsync(pid_loja, plogin, psenha, id_cliente, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientePorIdAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_cliente As String, ByVal userState As Object)
            If (Me.fWSImportaClientePorIdOperationCompleted Is Nothing) Then
                Me.fWSImportaClientePorIdOperationCompleted = AddressOf Me.OnfWSImportaClientePorIdOperationCompleted
            End If
            Me.InvokeAsync("fWSImportaClientePorId", New Object() {pid_loja, plogin, psenha, id_cliente}, Me.fWSImportaClientePorIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSImportaClientePorIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSImportaClientePorIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSImportaClientePorIdCompleted(Me, New fWSImportaClientePorIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSImportaClientePorIdAvancadowsdl#fWSImportaClientePorIdAvancado", RequestNamespace:="urn:fWSImportaClientePorIdAvancadowsdl", ResponseNamespace:="urn:fWSImportaClientePorIdAvancadowsdl")>  _
        Public Function fWSImportaClientePorIdAvancado(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_cliente As String) As <System.Xml.Serialization.SoapElementAttribute("return")> ClienteAvancado()
            Dim results() As Object = Me.Invoke("fWSImportaClientePorIdAvancado", New Object() {pid_loja, plogin, psenha, id_cliente})
            Return CType(results(0),ClienteAvancado())
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientePorIdAvancadoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_cliente As String)
            Me.fWSImportaClientePorIdAvancadoAsync(pid_loja, plogin, psenha, id_cliente, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientePorIdAvancadoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_cliente As String, ByVal userState As Object)
            If (Me.fWSImportaClientePorIdAvancadoOperationCompleted Is Nothing) Then
                Me.fWSImportaClientePorIdAvancadoOperationCompleted = AddressOf Me.OnfWSImportaClientePorIdAvancadoOperationCompleted
            End If
            Me.InvokeAsync("fWSImportaClientePorIdAvancado", New Object() {pid_loja, plogin, psenha, id_cliente}, Me.fWSImportaClientePorIdAvancadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSImportaClientePorIdAvancadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSImportaClientePorIdAvancadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSImportaClientePorIdAvancadoCompleted(Me, New fWSImportaClientePorIdAvancadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSImportaClientePorEmailwsdl#fWSImportaClientePorEmail", RequestNamespace:="urn:fWSImportaClientePorEmailwsdl", ResponseNamespace:="urn:fWSImportaClientePorEmailwsdl")>  _
        Public Function fWSImportaClientePorEmail(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal email As String) As <System.Xml.Serialization.SoapElementAttribute("return")> Cliente()
            Dim results() As Object = Me.Invoke("fWSImportaClientePorEmail", New Object() {pid_loja, plogin, psenha, email})
            Return CType(results(0),Cliente())
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientePorEmailAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal email As String)
            Me.fWSImportaClientePorEmailAsync(pid_loja, plogin, psenha, email, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientePorEmailAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal email As String, ByVal userState As Object)
            If (Me.fWSImportaClientePorEmailOperationCompleted Is Nothing) Then
                Me.fWSImportaClientePorEmailOperationCompleted = AddressOf Me.OnfWSImportaClientePorEmailOperationCompleted
            End If
            Me.InvokeAsync("fWSImportaClientePorEmail", New Object() {pid_loja, plogin, psenha, email}, Me.fWSImportaClientePorEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSImportaClientePorEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSImportaClientePorEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSImportaClientePorEmailCompleted(Me, New fWSImportaClientePorEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSImportaClientePorEmailAvancadowsdl#fWSImportaClientePorEmailAvancado", RequestNamespace:="urn:fWSImportaClientePorEmailAvancadowsdl", ResponseNamespace:="urn:fWSImportaClientePorEmailAvancadowsdl")>  _
        Public Function fWSImportaClientePorEmailAvancado(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal email As String) As <System.Xml.Serialization.SoapElementAttribute("return")> ClienteAvancado()
            Dim results() As Object = Me.Invoke("fWSImportaClientePorEmailAvancado", New Object() {pid_loja, plogin, psenha, email})
            Return CType(results(0),ClienteAvancado())
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientePorEmailAvancadoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal email As String)
            Me.fWSImportaClientePorEmailAvancadoAsync(pid_loja, plogin, psenha, email, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientePorEmailAvancadoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal email As String, ByVal userState As Object)
            If (Me.fWSImportaClientePorEmailAvancadoOperationCompleted Is Nothing) Then
                Me.fWSImportaClientePorEmailAvancadoOperationCompleted = AddressOf Me.OnfWSImportaClientePorEmailAvancadoOperationCompleted
            End If
            Me.InvokeAsync("fWSImportaClientePorEmailAvancado", New Object() {pid_loja, plogin, psenha, email}, Me.fWSImportaClientePorEmailAvancadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSImportaClientePorEmailAvancadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSImportaClientePorEmailAvancadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSImportaClientePorEmailAvancadoCompleted(Me, New fWSImportaClientePorEmailAvancadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSImportaClientePorCPFwsdl#fWSImportaClientePorCPF", RequestNamespace:="urn:fWSImportaClientePorCPFwsdl", ResponseNamespace:="urn:fWSImportaClientePorCPFwsdl")>  _
        Public Function fWSImportaClientePorCPF(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal cpf As String) As <System.Xml.Serialization.SoapElementAttribute("return")> Cliente()
            Dim results() As Object = Me.Invoke("fWSImportaClientePorCPF", New Object() {pid_loja, plogin, psenha, cpf})
            Return CType(results(0),Cliente())
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientePorCPFAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal cpf As String)
            Me.fWSImportaClientePorCPFAsync(pid_loja, plogin, psenha, cpf, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientePorCPFAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal cpf As String, ByVal userState As Object)
            If (Me.fWSImportaClientePorCPFOperationCompleted Is Nothing) Then
                Me.fWSImportaClientePorCPFOperationCompleted = AddressOf Me.OnfWSImportaClientePorCPFOperationCompleted
            End If
            Me.InvokeAsync("fWSImportaClientePorCPF", New Object() {pid_loja, plogin, psenha, cpf}, Me.fWSImportaClientePorCPFOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSImportaClientePorCPFOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSImportaClientePorCPFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSImportaClientePorCPFCompleted(Me, New fWSImportaClientePorCPFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSImportaClientePorCPFAvancadowsdl#fWSImportaClientePorCPFAvancado", RequestNamespace:="urn:fWSImportaClientePorCPFAvancadowsdl", ResponseNamespace:="urn:fWSImportaClientePorCPFAvancadowsdl")>  _
        Public Function fWSImportaClientePorCPFAvancado(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal cpf As String) As <System.Xml.Serialization.SoapElementAttribute("return")> ClienteAvancado()
            Dim results() As Object = Me.Invoke("fWSImportaClientePorCPFAvancado", New Object() {pid_loja, plogin, psenha, cpf})
            Return CType(results(0),ClienteAvancado())
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientePorCPFAvancadoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal cpf As String)
            Me.fWSImportaClientePorCPFAvancadoAsync(pid_loja, plogin, psenha, cpf, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientePorCPFAvancadoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal cpf As String, ByVal userState As Object)
            If (Me.fWSImportaClientePorCPFAvancadoOperationCompleted Is Nothing) Then
                Me.fWSImportaClientePorCPFAvancadoOperationCompleted = AddressOf Me.OnfWSImportaClientePorCPFAvancadoOperationCompleted
            End If
            Me.InvokeAsync("fWSImportaClientePorCPFAvancado", New Object() {pid_loja, plogin, psenha, cpf}, Me.fWSImportaClientePorCPFAvancadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSImportaClientePorCPFAvancadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSImportaClientePorCPFAvancadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSImportaClientePorCPFAvancadoCompleted(Me, New fWSImportaClientePorCPFAvancadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSImportaClientePorCNPJwsdl#fWSImportaClientePorCNPJ", RequestNamespace:="urn:fWSImportaClientePorCNPJwsdl", ResponseNamespace:="urn:fWSImportaClientePorCNPJwsdl")>  _
        Public Function fWSImportaClientePorCNPJ(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal cnpj As String) As <System.Xml.Serialization.SoapElementAttribute("return")> Cliente()
            Dim results() As Object = Me.Invoke("fWSImportaClientePorCNPJ", New Object() {pid_loja, plogin, psenha, cnpj})
            Return CType(results(0),Cliente())
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientePorCNPJAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal cnpj As String)
            Me.fWSImportaClientePorCNPJAsync(pid_loja, plogin, psenha, cnpj, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientePorCNPJAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal cnpj As String, ByVal userState As Object)
            If (Me.fWSImportaClientePorCNPJOperationCompleted Is Nothing) Then
                Me.fWSImportaClientePorCNPJOperationCompleted = AddressOf Me.OnfWSImportaClientePorCNPJOperationCompleted
            End If
            Me.InvokeAsync("fWSImportaClientePorCNPJ", New Object() {pid_loja, plogin, psenha, cnpj}, Me.fWSImportaClientePorCNPJOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSImportaClientePorCNPJOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSImportaClientePorCNPJCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSImportaClientePorCNPJCompleted(Me, New fWSImportaClientePorCNPJCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSImportaClientePorCNPJAvancadowsdl#fWSImportaClientePorCNPJAvancado", RequestNamespace:="urn:fWSImportaClientePorCNPJAvancadowsdl", ResponseNamespace:="urn:fWSImportaClientePorCNPJAvancadowsdl")>  _
        Public Function fWSImportaClientePorCNPJAvancado(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal cnpj As String) As <System.Xml.Serialization.SoapElementAttribute("return")> ClienteAvancado()
            Dim results() As Object = Me.Invoke("fWSImportaClientePorCNPJAvancado", New Object() {pid_loja, plogin, psenha, cnpj})
            Return CType(results(0),ClienteAvancado())
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientePorCNPJAvancadoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal cnpj As String)
            Me.fWSImportaClientePorCNPJAvancadoAsync(pid_loja, plogin, psenha, cnpj, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientePorCNPJAvancadoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal cnpj As String, ByVal userState As Object)
            If (Me.fWSImportaClientePorCNPJAvancadoOperationCompleted Is Nothing) Then
                Me.fWSImportaClientePorCNPJAvancadoOperationCompleted = AddressOf Me.OnfWSImportaClientePorCNPJAvancadoOperationCompleted
            End If
            Me.InvokeAsync("fWSImportaClientePorCNPJAvancado", New Object() {pid_loja, plogin, psenha, cnpj}, Me.fWSImportaClientePorCNPJAvancadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSImportaClientePorCNPJAvancadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSImportaClientePorCNPJAvancadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSImportaClientePorCNPJAvancadoCompleted(Me, New fWSImportaClientePorCNPJAvancadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSImportaClientePorPedidoAvancadowsdl#fWSImportaClientePorPedidoAvancado", RequestNamespace:="urn:fWSImportaClientePorPedidoAvancadowsdl", ResponseNamespace:="urn:fWSImportaClientePorPedidoAvancadowsdl")>  _
        Public Function fWSImportaClientePorPedidoAvancado(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_pedido As String) As <System.Xml.Serialization.SoapElementAttribute("return")> ClienteAvancado()
            Dim results() As Object = Me.Invoke("fWSImportaClientePorPedidoAvancado", New Object() {pid_loja, plogin, psenha, id_pedido})
            Return CType(results(0),ClienteAvancado())
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientePorPedidoAvancadoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_pedido As String)
            Me.fWSImportaClientePorPedidoAvancadoAsync(pid_loja, plogin, psenha, id_pedido, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSImportaClientePorPedidoAvancadoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_pedido As String, ByVal userState As Object)
            If (Me.fWSImportaClientePorPedidoAvancadoOperationCompleted Is Nothing) Then
                Me.fWSImportaClientePorPedidoAvancadoOperationCompleted = AddressOf Me.OnfWSImportaClientePorPedidoAvancadoOperationCompleted
            End If
            Me.InvokeAsync("fWSImportaClientePorPedidoAvancado", New Object() {pid_loja, plogin, psenha, id_pedido}, Me.fWSImportaClientePorPedidoAvancadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSImportaClientePorPedidoAvancadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSImportaClientePorPedidoAvancadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSImportaClientePorPedidoAvancadoCompleted(Me, New fWSImportaClientePorPedidoAvancadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSImportaPedidosswsdl#fWSImportaPedidos", RequestNamespace:="urn:fWSImportaPedidoswsdl", ResponseNamespace:="urn:fWSImportaPedidoswsdl")>  _
        Public Function fWSImportaPedidos(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal data_inicial As String, ByVal data_final As String, ByVal hora_inicial As String, ByVal hora_final As String, ByVal status_atual As String) As <System.Xml.Serialization.SoapElementAttribute("return")> Pedido()
            Dim results() As Object = Me.Invoke("fWSImportaPedidos", New Object() {pid_loja, plogin, psenha, data_inicial, data_final, hora_inicial, hora_final, status_atual})
            Return CType(results(0),Pedido())
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSImportaPedidosAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal data_inicial As String, ByVal data_final As String, ByVal hora_inicial As String, ByVal hora_final As String, ByVal status_atual As String)
            Me.fWSImportaPedidosAsync(pid_loja, plogin, psenha, data_inicial, data_final, hora_inicial, hora_final, status_atual, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSImportaPedidosAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal data_inicial As String, ByVal data_final As String, ByVal hora_inicial As String, ByVal hora_final As String, ByVal status_atual As String, ByVal userState As Object)
            If (Me.fWSImportaPedidosOperationCompleted Is Nothing) Then
                Me.fWSImportaPedidosOperationCompleted = AddressOf Me.OnfWSImportaPedidosOperationCompleted
            End If
            Me.InvokeAsync("fWSImportaPedidos", New Object() {pid_loja, plogin, psenha, data_inicial, data_final, hora_inicial, hora_final, status_atual}, Me.fWSImportaPedidosOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSImportaPedidosOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSImportaPedidosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSImportaPedidosCompleted(Me, New fWSImportaPedidosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSImportaPedidoPorIdwsdl#fWSImportaPedidoPorId", RequestNamespace:="urn:fWSImportaPedidoPorIdwsdl", ResponseNamespace:="urn:fWSImportaPedidoPorIdwsdl")>  _
        Public Function fWSImportaPedidoPorId(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_pedido As String) As <System.Xml.Serialization.SoapElementAttribute("return")> Pedido
            Dim results() As Object = Me.Invoke("fWSImportaPedidoPorId", New Object() {pid_loja, plogin, psenha, id_pedido})
            Return CType(results(0),Pedido)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSImportaPedidoPorIdAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_pedido As String)
            Me.fWSImportaPedidoPorIdAsync(pid_loja, plogin, psenha, id_pedido, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSImportaPedidoPorIdAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_pedido As String, ByVal userState As Object)
            If (Me.fWSImportaPedidoPorIdOperationCompleted Is Nothing) Then
                Me.fWSImportaPedidoPorIdOperationCompleted = AddressOf Me.OnfWSImportaPedidoPorIdOperationCompleted
            End If
            Me.InvokeAsync("fWSImportaPedidoPorId", New Object() {pid_loja, plogin, psenha, id_pedido}, Me.fWSImportaPedidoPorIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSImportaPedidoPorIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSImportaPedidoPorIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSImportaPedidoPorIdCompleted(Me, New fWSImportaPedidoPorIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSImportaItensPedidoswsdl#fWSImportaItensPedidos", RequestNamespace:="urn:fWSImportaItensPedidoswsdl", ResponseNamespace:="urn:fWSImportaItensPedidoswsdl")>  _
        Public Function fWSImportaItensPedidos(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal data_inicial As String, ByVal data_final As String, ByVal hora_inicial As String, ByVal hora_final As String, ByVal status_atual As String) As <System.Xml.Serialization.SoapElementAttribute("return")> Item_pedido()
            Dim results() As Object = Me.Invoke("fWSImportaItensPedidos", New Object() {pid_loja, plogin, psenha, data_inicial, data_final, hora_inicial, hora_final, status_atual})
            Return CType(results(0),Item_pedido())
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSImportaItensPedidosAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal data_inicial As String, ByVal data_final As String, ByVal hora_inicial As String, ByVal hora_final As String, ByVal status_atual As String)
            Me.fWSImportaItensPedidosAsync(pid_loja, plogin, psenha, data_inicial, data_final, hora_inicial, hora_final, status_atual, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSImportaItensPedidosAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal data_inicial As String, ByVal data_final As String, ByVal hora_inicial As String, ByVal hora_final As String, ByVal status_atual As String, ByVal userState As Object)
            If (Me.fWSImportaItensPedidosOperationCompleted Is Nothing) Then
                Me.fWSImportaItensPedidosOperationCompleted = AddressOf Me.OnfWSImportaItensPedidosOperationCompleted
            End If
            Me.InvokeAsync("fWSImportaItensPedidos", New Object() {pid_loja, plogin, psenha, data_inicial, data_final, hora_inicial, hora_final, status_atual}, Me.fWSImportaItensPedidosOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSImportaItensPedidosOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSImportaItensPedidosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSImportaItensPedidosCompleted(Me, New fWSImportaItensPedidosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSImportaItensPedidoPorIdwsdl#fWSImportaItensPedidoPorId", RequestNamespace:="urn:fWSImportaItensPedidoPorIdwsdl", ResponseNamespace:="urn:fWSImportaItensPedidoPorIdwsdl")>  _
        Public Function fWSImportaItensPedidoPorId(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_pedido As String) As <System.Xml.Serialization.SoapElementAttribute("return")> Item_pedido()
            Dim results() As Object = Me.Invoke("fWSImportaItensPedidoPorId", New Object() {pid_loja, plogin, psenha, id_pedido})
            Return CType(results(0),Item_pedido())
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSImportaItensPedidoPorIdAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_pedido As String)
            Me.fWSImportaItensPedidoPorIdAsync(pid_loja, plogin, psenha, id_pedido, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSImportaItensPedidoPorIdAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_pedido As String, ByVal userState As Object)
            If (Me.fWSImportaItensPedidoPorIdOperationCompleted Is Nothing) Then
                Me.fWSImportaItensPedidoPorIdOperationCompleted = AddressOf Me.OnfWSImportaItensPedidoPorIdOperationCompleted
            End If
            Me.InvokeAsync("fWSImportaItensPedidoPorId", New Object() {pid_loja, plogin, psenha, id_pedido}, Me.fWSImportaItensPedidoPorIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSImportaItensPedidoPorIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSImportaItensPedidoPorIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSImportaItensPedidoPorIdCompleted(Me, New fWSImportaItensPedidoPorIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSImportaParcelasPedidoswsdl#fWSImportaParcelasPedidos", RequestNamespace:="urn:fWSImportaParcelasPedidoswsdl", ResponseNamespace:="urn:fWSImportaParcelasPedidoswsdl")>  _
        Public Function fWSImportaParcelasPedidos(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal data_inicial As String, ByVal data_final As String, ByVal hora_inicial As String, ByVal hora_final As String, ByVal status_atual As String) As <System.Xml.Serialization.SoapElementAttribute("return")> Parcela_pedido()
            Dim results() As Object = Me.Invoke("fWSImportaParcelasPedidos", New Object() {pid_loja, plogin, psenha, data_inicial, data_final, hora_inicial, hora_final, status_atual})
            Return CType(results(0),Parcela_pedido())
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSImportaParcelasPedidosAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal data_inicial As String, ByVal data_final As String, ByVal hora_inicial As String, ByVal hora_final As String, ByVal status_atual As String)
            Me.fWSImportaParcelasPedidosAsync(pid_loja, plogin, psenha, data_inicial, data_final, hora_inicial, hora_final, status_atual, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSImportaParcelasPedidosAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal data_inicial As String, ByVal data_final As String, ByVal hora_inicial As String, ByVal hora_final As String, ByVal status_atual As String, ByVal userState As Object)
            If (Me.fWSImportaParcelasPedidosOperationCompleted Is Nothing) Then
                Me.fWSImportaParcelasPedidosOperationCompleted = AddressOf Me.OnfWSImportaParcelasPedidosOperationCompleted
            End If
            Me.InvokeAsync("fWSImportaParcelasPedidos", New Object() {pid_loja, plogin, psenha, data_inicial, data_final, hora_inicial, hora_final, status_atual}, Me.fWSImportaParcelasPedidosOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSImportaParcelasPedidosOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSImportaParcelasPedidosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSImportaParcelasPedidosCompleted(Me, New fWSImportaParcelasPedidosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSImportaParcelasPedidoPorIdwsdl#fWSImportaParcelasPedidoPorId", RequestNamespace:="urn:fWSImportaParcelasPedidoPorIdwsdl", ResponseNamespace:="urn:fWSImportaParcelasPedidoPorIdwsdl")>  _
        Public Function fWSImportaParcelasPedidoPorId(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_pedido As String) As <System.Xml.Serialization.SoapElementAttribute("return")> Parcela_pedido()
            Dim results() As Object = Me.Invoke("fWSImportaParcelasPedidoPorId", New Object() {pid_loja, plogin, psenha, id_pedido})
            Return CType(results(0),Parcela_pedido())
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSImportaParcelasPedidoPorIdAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_pedido As String)
            Me.fWSImportaParcelasPedidoPorIdAsync(pid_loja, plogin, psenha, id_pedido, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSImportaParcelasPedidoPorIdAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_pedido As String, ByVal userState As Object)
            If (Me.fWSImportaParcelasPedidoPorIdOperationCompleted Is Nothing) Then
                Me.fWSImportaParcelasPedidoPorIdOperationCompleted = AddressOf Me.OnfWSImportaParcelasPedidoPorIdOperationCompleted
            End If
            Me.InvokeAsync("fWSImportaParcelasPedidoPorId", New Object() {pid_loja, plogin, psenha, id_pedido}, Me.fWSImportaParcelasPedidoPorIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSImportaParcelasPedidoPorIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSImportaParcelasPedidoPorIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSImportaParcelasPedidoPorIdCompleted(Me, New fWSImportaParcelasPedidoPorIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSAtualizaPrecoProdutowsdl#fWSAtualizaPrecoProduto", RequestNamespace:="urn:fWSAtualizaPrecoProdutowsdl", ResponseNamespace:="urn:fWSAtualizaPrecoProdutowsdl")>  _
        Public Function fWSAtualizaPrecoProduto(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal is_grade As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_produto As String, ByVal preco As String, ByVal precopromo As String, ByVal data_inicio As String, ByVal data_termino As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSAtualizaPrecoProduto", New Object() {pid_loja, plogin, psenha, is_grade, id_produto, preco, precopromo, data_inicio, data_termino})
            id_produto = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSAtualizaPrecoProdutoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal is_grade As String, ByVal id_produto As String, ByVal preco As String, ByVal precopromo As String, ByVal data_inicio As String, ByVal data_termino As String)
            Me.fWSAtualizaPrecoProdutoAsync(pid_loja, plogin, psenha, is_grade, id_produto, preco, precopromo, data_inicio, data_termino, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSAtualizaPrecoProdutoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal is_grade As String, ByVal id_produto As String, ByVal preco As String, ByVal precopromo As String, ByVal data_inicio As String, ByVal data_termino As String, ByVal userState As Object)
            If (Me.fWSAtualizaPrecoProdutoOperationCompleted Is Nothing) Then
                Me.fWSAtualizaPrecoProdutoOperationCompleted = AddressOf Me.OnfWSAtualizaPrecoProdutoOperationCompleted
            End If
            Me.InvokeAsync("fWSAtualizaPrecoProduto", New Object() {pid_loja, plogin, psenha, is_grade, id_produto, preco, precopromo, data_inicio, data_termino}, Me.fWSAtualizaPrecoProdutoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSAtualizaPrecoProdutoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSAtualizaPrecoProdutoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSAtualizaPrecoProdutoCompleted(Me, New fWSAtualizaPrecoProdutoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSAtualizaProdutoDisponivelwsdl#fWSAtualizaProdutoDisponivel", RequestNamespace:="urn:fWSAtualizaProdutoDisponivelwsdl", ResponseNamespace:="urn:fWSAtualizaProdutoDisponivelwsdl")>  _
        Public Function fWSAtualizaProdutoDisponivel(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_produto As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal disponivel As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSAtualizaProdutoDisponivel", New Object() {pid_loja, plogin, psenha, id_produto, disponivel})
            id_produto = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSAtualizaProdutoDisponivelAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_produto As String, ByVal disponivel As String)
            Me.fWSAtualizaProdutoDisponivelAsync(pid_loja, plogin, psenha, id_produto, disponivel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSAtualizaProdutoDisponivelAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_produto As String, ByVal disponivel As String, ByVal userState As Object)
            If (Me.fWSAtualizaProdutoDisponivelOperationCompleted Is Nothing) Then
                Me.fWSAtualizaProdutoDisponivelOperationCompleted = AddressOf Me.OnfWSAtualizaProdutoDisponivelOperationCompleted
            End If
            Me.InvokeAsync("fWSAtualizaProdutoDisponivel", New Object() {pid_loja, plogin, psenha, id_produto, disponivel}, Me.fWSAtualizaProdutoDisponivelOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSAtualizaProdutoDisponivelOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSAtualizaProdutoDisponivelCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSAtualizaProdutoDisponivelCompleted(Me, New fWSAtualizaProdutoDisponivelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSAtualizaEstoqueProdutowsdl#fWSAtualizaEstoqueProduto", RequestNamespace:="urn:fWSAtualizaEstoqueProdutowsdl", ResponseNamespace:="urn:fWSAtualizaEstoqueProdutowsdl")>  _
        Public Function fWSAtualizaEstoqueProduto(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal is_grade As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_produto As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal estoque As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal estoque_minimo As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSAtualizaEstoqueProduto", New Object() {pid_loja, plogin, psenha, is_grade, id_produto, estoque, estoque_minimo})
            id_produto = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSAtualizaEstoqueProdutoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal is_grade As String, ByVal id_produto As String, ByVal estoque As String, ByVal estoque_minimo As String)
            Me.fWSAtualizaEstoqueProdutoAsync(pid_loja, plogin, psenha, is_grade, id_produto, estoque, estoque_minimo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSAtualizaEstoqueProdutoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal is_grade As String, ByVal id_produto As String, ByVal estoque As String, ByVal estoque_minimo As String, ByVal userState As Object)
            If (Me.fWSAtualizaEstoqueProdutoOperationCompleted Is Nothing) Then
                Me.fWSAtualizaEstoqueProdutoOperationCompleted = AddressOf Me.OnfWSAtualizaEstoqueProdutoOperationCompleted
            End If
            Me.InvokeAsync("fWSAtualizaEstoqueProduto", New Object() {pid_loja, plogin, psenha, is_grade, id_produto, estoque, estoque_minimo}, Me.fWSAtualizaEstoqueProdutoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSAtualizaEstoqueProdutoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSAtualizaEstoqueProdutoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSAtualizaEstoqueProdutoCompleted(Me, New fWSAtualizaEstoqueProdutoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSAtualizaStatusPedidoswsdl#fWSAtualizaStatusPedidos", RequestNamespace:="urn:fWSAtualizaStatusPedidoswsdl", ResponseNamespace:="urn:fWSAtualizaStatusPedidoswsdl")>  _
        Public Function fWSAtualizaStatusPedidos(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal lista_status() As StatusPedidos, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_pedido As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSAtualizaStatusPedidos", New Object() {pid_loja, plogin, psenha, lista_status})
            id_pedido = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSAtualizaStatusPedidosAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal lista_status() As StatusPedidos)
            Me.fWSAtualizaStatusPedidosAsync(pid_loja, plogin, psenha, lista_status, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSAtualizaStatusPedidosAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal lista_status() As StatusPedidos, ByVal userState As Object)
            If (Me.fWSAtualizaStatusPedidosOperationCompleted Is Nothing) Then
                Me.fWSAtualizaStatusPedidosOperationCompleted = AddressOf Me.OnfWSAtualizaStatusPedidosOperationCompleted
            End If
            Me.InvokeAsync("fWSAtualizaStatusPedidos", New Object() {pid_loja, plogin, psenha, lista_status}, Me.fWSAtualizaStatusPedidosOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSAtualizaStatusPedidosOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSAtualizaStatusPedidosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSAtualizaStatusPedidosCompleted(Me, New fWSAtualizaStatusPedidosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSChavesLojasswsdl#fWSChavesLojas", RequestNamespace:="urn:fWSChavesLojasswsdl", ResponseNamespace:="urn:fWSChavesLojasswsdl")>  _
        Public Function fWSChavesLojas(ByVal token As String) As <System.Xml.Serialization.SoapElementAttribute("return")> Chaves()
            Dim results() As Object = Me.Invoke("fWSChavesLojas", New Object() {token})
            Return CType(results(0),Chaves())
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSChavesLojasAsync(ByVal token As String)
            Me.fWSChavesLojasAsync(token, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSChavesLojasAsync(ByVal token As String, ByVal userState As Object)
            If (Me.fWSChavesLojasOperationCompleted Is Nothing) Then
                Me.fWSChavesLojasOperationCompleted = AddressOf Me.OnfWSChavesLojasOperationCompleted
            End If
            Me.InvokeAsync("fWSChavesLojas", New Object() {token}, Me.fWSChavesLojasOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSChavesLojasOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSChavesLojasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSChavesLojasCompleted(Me, New fWSChavesLojasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSAtualizaListaToDowsdl#fWSAtualizaListaToDo", RequestNamespace:="urn:fWSAtualizaListaToDowsdl", ResponseNamespace:="urn:fWSAtualizaListaToDowsdl")>  _
        Public Function fWSAtualizaListaToDo(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal entidade As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSAtualizaListaToDo", New Object() {pid_loja, plogin, psenha, entidade, id})
            id = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSAtualizaListaToDoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal entidade As String, ByVal id As String)
            Me.fWSAtualizaListaToDoAsync(pid_loja, plogin, psenha, entidade, id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSAtualizaListaToDoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal entidade As String, ByVal id As String, ByVal userState As Object)
            If (Me.fWSAtualizaListaToDoOperationCompleted Is Nothing) Then
                Me.fWSAtualizaListaToDoOperationCompleted = AddressOf Me.OnfWSAtualizaListaToDoOperationCompleted
            End If
            Me.InvokeAsync("fWSAtualizaListaToDo", New Object() {pid_loja, plogin, psenha, entidade, id}, Me.fWSAtualizaListaToDoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSAtualizaListaToDoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSAtualizaListaToDoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSAtualizaListaToDoCompleted(Me, New fWSAtualizaListaToDoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSConsultaStatusPedidowsdl#fWSConsultaStatusPedido", RequestNamespace:="urn:fWSConsultaStatusPedidowsdl", ResponseNamespace:="urn:fWSConsultaStatusPedidowsdl")>  _
        Public Function fWSConsultaStatusPedido(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_pedido As String, ByRef status_pedido As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSConsultaStatusPedido", New Object() {pid_loja, plogin, psenha, id_pedido})
            id_pedido = CType(results(1),String)
            status_pedido = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSConsultaStatusPedidoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_pedido As String)
            Me.fWSConsultaStatusPedidoAsync(pid_loja, plogin, psenha, id_pedido, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSConsultaStatusPedidoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_pedido As String, ByVal userState As Object)
            If (Me.fWSConsultaStatusPedidoOperationCompleted Is Nothing) Then
                Me.fWSConsultaStatusPedidoOperationCompleted = AddressOf Me.OnfWSConsultaStatusPedidoOperationCompleted
            End If
            Me.InvokeAsync("fWSConsultaStatusPedido", New Object() {pid_loja, plogin, psenha, id_pedido}, Me.fWSConsultaStatusPedidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSConsultaStatusPedidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSConsultaStatusPedidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSConsultaStatusPedidoCompleted(Me, New fWSConsultaStatusPedidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSConcultaStatusPedidowsdl#fWSConcultaStatusPedido", RequestNamespace:="urn:fWSConcultaStatusPedidowsdl", ResponseNamespace:="urn:fWSConcultaStatusPedidowsdl")>  _
        Public Function fWSConcultaStatusPedido(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_pedido As String, ByRef status_pedido As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSConcultaStatusPedido", New Object() {pid_loja, plogin, psenha, id_pedido})
            id_pedido = CType(results(1),String)
            status_pedido = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSConcultaStatusPedidoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_pedido As String)
            Me.fWSConcultaStatusPedidoAsync(pid_loja, plogin, psenha, id_pedido, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSConcultaStatusPedidoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_pedido As String, ByVal userState As Object)
            If (Me.fWSConcultaStatusPedidoOperationCompleted Is Nothing) Then
                Me.fWSConcultaStatusPedidoOperationCompleted = AddressOf Me.OnfWSConcultaStatusPedidoOperationCompleted
            End If
            Me.InvokeAsync("fWSConcultaStatusPedido", New Object() {pid_loja, plogin, psenha, id_pedido}, Me.fWSConcultaStatusPedidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSConcultaStatusPedidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSConcultaStatusPedidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSConcultaStatusPedidoCompleted(Me, New fWSConcultaStatusPedidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSCadastraCompreJuntowsdl#fWSCadastraCompreJunto", RequestNamespace:="fWSCadastraCompreJuntowsdl", ResponseNamespace:="fWSCadastraCompreJuntowsdl")>  _
        Public Function fWSCadastraCompreJunto(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_produto As String, ByVal data_inicial As String, ByVal data_final As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal brinde As String, ByVal compre_junto() As ProdutosKit, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal quantidade As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal ordem As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal tipo_desconto As String, ByVal desconto As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal frete_gratis As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_compre_junto As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSCadastraCompreJunto", New Object() {pid_loja, plogin, psenha, id_produto, data_inicial, data_final, brinde, compre_junto, quantidade, ordem, tipo_desconto, desconto, frete_gratis})
            id_produto = CType(results(1),String)
            id_compre_junto = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraCompreJuntoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_produto As String, ByVal data_inicial As String, ByVal data_final As String, ByVal brinde As String, ByVal compre_junto() As ProdutosKit, ByVal quantidade As String, ByVal ordem As String, ByVal tipo_desconto As String, ByVal desconto As String, ByVal frete_gratis As String)
            Me.fWSCadastraCompreJuntoAsync(pid_loja, plogin, psenha, id_produto, data_inicial, data_final, brinde, compre_junto, quantidade, ordem, tipo_desconto, desconto, frete_gratis, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraCompreJuntoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_produto As String, ByVal data_inicial As String, ByVal data_final As String, ByVal brinde As String, ByVal compre_junto() As ProdutosKit, ByVal quantidade As String, ByVal ordem As String, ByVal tipo_desconto As String, ByVal desconto As String, ByVal frete_gratis As String, ByVal userState As Object)
            If (Me.fWSCadastraCompreJuntoOperationCompleted Is Nothing) Then
                Me.fWSCadastraCompreJuntoOperationCompleted = AddressOf Me.OnfWSCadastraCompreJuntoOperationCompleted
            End If
            Me.InvokeAsync("fWSCadastraCompreJunto", New Object() {pid_loja, plogin, psenha, id_produto, data_inicial, data_final, brinde, compre_junto, quantidade, ordem, tipo_desconto, desconto, frete_gratis}, Me.fWSCadastraCompreJuntoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSCadastraCompreJuntoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSCadastraCompreJuntoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSCadastraCompreJuntoCompleted(Me, New fWSCadastraCompreJuntoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSCadastraCompreJuntoAvancadowsdl#fWSCadastraCompreJuntoAvancado", RequestNamespace:="fWSCadastraCompreJuntoAvancadowsdl", ResponseNamespace:="fWSCadastraCompreJuntoAvancadowsdl")>  _
        Public Function fWSCadastraCompreJuntoAvancado(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_produto As String, ByVal data_inicial As String, ByVal data_final As String, ByVal nome As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal brinde As String, ByVal compre_junto() As ProdutosKit, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal quantidade As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal ordem As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal tipo_desconto As String, ByVal desconto As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal frete_gratis As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_compre_junto As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSCadastraCompreJuntoAvancado", New Object() {pid_loja, plogin, psenha, id_produto, data_inicial, data_final, nome, brinde, compre_junto, quantidade, ordem, tipo_desconto, desconto, frete_gratis})
            id_produto = CType(results(1),String)
            id_compre_junto = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraCompreJuntoAvancadoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_produto As String, ByVal data_inicial As String, ByVal data_final As String, ByVal nome As String, ByVal brinde As String, ByVal compre_junto() As ProdutosKit, ByVal quantidade As String, ByVal ordem As String, ByVal tipo_desconto As String, ByVal desconto As String, ByVal frete_gratis As String)
            Me.fWSCadastraCompreJuntoAvancadoAsync(pid_loja, plogin, psenha, id_produto, data_inicial, data_final, nome, brinde, compre_junto, quantidade, ordem, tipo_desconto, desconto, frete_gratis, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraCompreJuntoAvancadoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_produto As String, ByVal data_inicial As String, ByVal data_final As String, ByVal nome As String, ByVal brinde As String, ByVal compre_junto() As ProdutosKit, ByVal quantidade As String, ByVal ordem As String, ByVal tipo_desconto As String, ByVal desconto As String, ByVal frete_gratis As String, ByVal userState As Object)
            If (Me.fWSCadastraCompreJuntoAvancadoOperationCompleted Is Nothing) Then
                Me.fWSCadastraCompreJuntoAvancadoOperationCompleted = AddressOf Me.OnfWSCadastraCompreJuntoAvancadoOperationCompleted
            End If
            Me.InvokeAsync("fWSCadastraCompreJuntoAvancado", New Object() {pid_loja, plogin, psenha, id_produto, data_inicial, data_final, nome, brinde, compre_junto, quantidade, ordem, tipo_desconto, desconto, frete_gratis}, Me.fWSCadastraCompreJuntoAvancadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSCadastraCompreJuntoAvancadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSCadastraCompreJuntoAvancadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSCadastraCompreJuntoAvancadoCompleted(Me, New fWSCadastraCompreJuntoAvancadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSRelacionaProdutowsdl#fWSRelacionaProduto", RequestNamespace:="fWSRelacionaProdutowsdl", ResponseNamespace:="fWSRelacionaProdutowsdl")>  _
        Public Function fWSRelacionaProduto(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_produto As String, ByVal produtos_relacionados() As ProdutosRelacionados, ByRef id_produtos_relacionados As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSRelacionaProduto", New Object() {pid_loja, plogin, psenha, id_produto, produtos_relacionados})
            id_produto = CType(results(1),String)
            id_produtos_relacionados = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSRelacionaProdutoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_produto As String, ByVal produtos_relacionados() As ProdutosRelacionados)
            Me.fWSRelacionaProdutoAsync(pid_loja, plogin, psenha, id_produto, produtos_relacionados, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSRelacionaProdutoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_produto As String, ByVal produtos_relacionados() As ProdutosRelacionados, ByVal userState As Object)
            If (Me.fWSRelacionaProdutoOperationCompleted Is Nothing) Then
                Me.fWSRelacionaProdutoOperationCompleted = AddressOf Me.OnfWSRelacionaProdutoOperationCompleted
            End If
            Me.InvokeAsync("fWSRelacionaProduto", New Object() {pid_loja, plogin, psenha, id_produto, produtos_relacionados}, Me.fWSRelacionaProdutoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSRelacionaProdutoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSRelacionaProdutoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSRelacionaProdutoCompleted(Me, New fWSRelacionaProdutoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSCadastraListaDesejoswsdl#fWSCadastraListaDesejos", RequestNamespace:="urn:fWSCadastraListaDesejoswsdl", ResponseNamespace:="urn:fWSCadastraListaDesejoswsdl")>  _
        Public Function fWSCadastraListaDesejos(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal dados_lista() As DadosListaDesejos, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSCadastraListaDesejos", New Object() {pid_loja, plogin, psenha, dados_lista})
            id = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraListaDesejosAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal dados_lista() As DadosListaDesejos)
            Me.fWSCadastraListaDesejosAsync(pid_loja, plogin, psenha, dados_lista, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraListaDesejosAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal dados_lista() As DadosListaDesejos, ByVal userState As Object)
            If (Me.fWSCadastraListaDesejosOperationCompleted Is Nothing) Then
                Me.fWSCadastraListaDesejosOperationCompleted = AddressOf Me.OnfWSCadastraListaDesejosOperationCompleted
            End If
            Me.InvokeAsync("fWSCadastraListaDesejos", New Object() {pid_loja, plogin, psenha, dados_lista}, Me.fWSCadastraListaDesejosOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSCadastraListaDesejosOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSCadastraListaDesejosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSCadastraListaDesejosCompleted(Me, New fWSCadastraListaDesejosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSCadastraListaProdutoswsdl#fWSCadastraListaProdutos", RequestNamespace:="urn:fWSCadastraListaProdutoswsdl", ResponseNamespace:="urn:fWSCadastraListaProdutoswsdl")>  _
        Public Function fWSCadastraListaProdutos(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal dados_lista() As DadosListaProdutos, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSCadastraListaProdutos", New Object() {pid_loja, plogin, psenha, dados_lista})
            id = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraListaProdutosAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal dados_lista() As DadosListaProdutos)
            Me.fWSCadastraListaProdutosAsync(pid_loja, plogin, psenha, dados_lista, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraListaProdutosAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal dados_lista() As DadosListaProdutos, ByVal userState As Object)
            If (Me.fWSCadastraListaProdutosOperationCompleted Is Nothing) Then
                Me.fWSCadastraListaProdutosOperationCompleted = AddressOf Me.OnfWSCadastraListaProdutosOperationCompleted
            End If
            Me.InvokeAsync("fWSCadastraListaProdutos", New Object() {pid_loja, plogin, psenha, dados_lista}, Me.fWSCadastraListaProdutosOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSCadastraListaProdutosOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSCadastraListaProdutosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSCadastraListaProdutosCompleted(Me, New fWSCadastraListaProdutosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSExcluiListaDesejoswsdl#fWSExcluiListaDesejos", RequestNamespace:="urn:fWSExcluiListaDesejoswsdl", ResponseNamespace:="urn:fWSExcluiListaDesejoswsdl")>  _
        Public Function fWSExcluiListaDesejos(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_lista As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSExcluiListaDesejos", New Object() {pid_loja, plogin, psenha, id_lista})
            id = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSExcluiListaDesejosAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_lista As String)
            Me.fWSExcluiListaDesejosAsync(pid_loja, plogin, psenha, id_lista, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSExcluiListaDesejosAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_lista As String, ByVal userState As Object)
            If (Me.fWSExcluiListaDesejosOperationCompleted Is Nothing) Then
                Me.fWSExcluiListaDesejosOperationCompleted = AddressOf Me.OnfWSExcluiListaDesejosOperationCompleted
            End If
            Me.InvokeAsync("fWSExcluiListaDesejos", New Object() {pid_loja, plogin, psenha, id_lista}, Me.fWSExcluiListaDesejosOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSExcluiListaDesejosOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSExcluiListaDesejosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSExcluiListaDesejosCompleted(Me, New fWSExcluiListaDesejosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSExcluirProdutoListawsdl#fWSExcluirProdutoLista", RequestNamespace:="urn:fWSExcluirProdutoListawsdl", ResponseNamespace:="urn:fWSExcluirProdutoListawsdl")>  _
        Public Function fWSExcluirProdutoLista(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal idProdLista As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSExcluirProdutoLista", New Object() {pid_loja, plogin, psenha, idProdLista})
            id = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSExcluirProdutoListaAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal idProdLista As String)
            Me.fWSExcluirProdutoListaAsync(pid_loja, plogin, psenha, idProdLista, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSExcluirProdutoListaAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal idProdLista As String, ByVal userState As Object)
            If (Me.fWSExcluirProdutoListaOperationCompleted Is Nothing) Then
                Me.fWSExcluirProdutoListaOperationCompleted = AddressOf Me.OnfWSExcluirProdutoListaOperationCompleted
            End If
            Me.InvokeAsync("fWSExcluirProdutoLista", New Object() {pid_loja, plogin, psenha, idProdLista}, Me.fWSExcluirProdutoListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSExcluirProdutoListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSExcluirProdutoListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSExcluirProdutoListaCompleted(Me, New fWSExcluirProdutoListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSExportaPagamentosPedidowsdl#fWSExportaPagamentosPedidowsdl", RequestNamespace:="fWSExportaPagamentosPedidowsdl", ResponseNamespace:="fWSExportaPagamentosPedidowsdl")>  _
        Public Function fWSExportaPagamentosPedido(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String) As <System.Xml.Serialization.SoapElementAttribute("pagamentos")> Pagamentos()
            Dim results() As Object = Me.Invoke("fWSExportaPagamentosPedido", New Object() {pid_loja, plogin, psenha})
            Return CType(results(0),Pagamentos())
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSExportaPagamentosPedidoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String)
            Me.fWSExportaPagamentosPedidoAsync(pid_loja, plogin, psenha, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSExportaPagamentosPedidoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal userState As Object)
            If (Me.fWSExportaPagamentosPedidoOperationCompleted Is Nothing) Then
                Me.fWSExportaPagamentosPedidoOperationCompleted = AddressOf Me.OnfWSExportaPagamentosPedidoOperationCompleted
            End If
            Me.InvokeAsync("fWSExportaPagamentosPedido", New Object() {pid_loja, plogin, psenha}, Me.fWSExportaPagamentosPedidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSExportaPagamentosPedidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSExportaPagamentosPedidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSExportaPagamentosPedidoCompleted(Me, New fWSExportaPagamentosPedidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSBuscavendaListaswsdl#fWSBuscavendaListas", RequestNamespace:="urn:fWSBuscavendaListaswsdl", ResponseNamespace:="urn:fWSBuscavendaListaswsdl")>  _
        Public Function fWSBuscavendaListas(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal idLista As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal idCliente As String) As <System.Xml.Serialization.SoapElementAttribute("resultado")> DadosBuscaListaVendas()
            Dim results() As Object = Me.Invoke("fWSBuscavendaListas", New Object() {pid_loja, plogin, psenha, idLista, idCliente})
            Return CType(results(0),DadosBuscaListaVendas())
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSBuscavendaListasAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal idLista As String, ByVal idCliente As String)
            Me.fWSBuscavendaListasAsync(pid_loja, plogin, psenha, idLista, idCliente, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSBuscavendaListasAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal idLista As String, ByVal idCliente As String, ByVal userState As Object)
            If (Me.fWSBuscavendaListasOperationCompleted Is Nothing) Then
                Me.fWSBuscavendaListasOperationCompleted = AddressOf Me.OnfWSBuscavendaListasOperationCompleted
            End If
            Me.InvokeAsync("fWSBuscavendaListas", New Object() {pid_loja, plogin, psenha, idLista, idCliente}, Me.fWSBuscavendaListasOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSBuscavendaListasOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSBuscavendaListasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSBuscavendaListasCompleted(Me, New fWSBuscavendaListasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSBuscaListaswsdl#fWSBuscaListas", RequestNamespace:="urn:fWSBuscaListaswsdl", ResponseNamespace:="urn:fWSBuscaListaswsdl")>  _
        Public Function fWSBuscaListas(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal idLista As String) As <System.Xml.Serialization.SoapElementAttribute("resultado")> DadosBuscaLista()
            Dim results() As Object = Me.Invoke("fWSBuscaListas", New Object() {pid_loja, plogin, psenha, idLista})
            Return CType(results(0),DadosBuscaLista())
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSBuscaListasAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal idLista As String)
            Me.fWSBuscaListasAsync(pid_loja, plogin, psenha, idLista, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSBuscaListasAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal idLista As String, ByVal userState As Object)
            If (Me.fWSBuscaListasOperationCompleted Is Nothing) Then
                Me.fWSBuscaListasOperationCompleted = AddressOf Me.OnfWSBuscaListasOperationCompleted
            End If
            Me.InvokeAsync("fWSBuscaListas", New Object() {pid_loja, plogin, psenha, idLista}, Me.fWSBuscaListasOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSBuscaListasOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSBuscaListasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSBuscaListasCompleted(Me, New fWSBuscaListasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSImportaListasDesejowsdl#fWSImportaListasDesejo", RequestNamespace:="urn:fWSImportaListasDesejowsdl", ResponseNamespace:="urn:fWSImportaListasDesejowsdl")>  _
        Public Function fWSImportaListasDesejo(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal idLista As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal idCliente As String, ByVal data_inicial As String, ByVal data_final As String) As <System.Xml.Serialization.SoapElementAttribute("return")> DadosBuscaLista()
            Dim results() As Object = Me.Invoke("fWSImportaListasDesejo", New Object() {pid_loja, plogin, psenha, idLista, idCliente, data_inicial, data_final})
            Return CType(results(0),DadosBuscaLista())
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSImportaListasDesejoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal idLista As String, ByVal idCliente As String, ByVal data_inicial As String, ByVal data_final As String)
            Me.fWSImportaListasDesejoAsync(pid_loja, plogin, psenha, idLista, idCliente, data_inicial, data_final, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSImportaListasDesejoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal idLista As String, ByVal idCliente As String, ByVal data_inicial As String, ByVal data_final As String, ByVal userState As Object)
            If (Me.fWSImportaListasDesejoOperationCompleted Is Nothing) Then
                Me.fWSImportaListasDesejoOperationCompleted = AddressOf Me.OnfWSImportaListasDesejoOperationCompleted
            End If
            Me.InvokeAsync("fWSImportaListasDesejo", New Object() {pid_loja, plogin, psenha, idLista, idCliente, data_inicial, data_final}, Me.fWSImportaListasDesejoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSImportaListasDesejoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSImportaListasDesejoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSImportaListasDesejoCompleted(Me, New fWSImportaListasDesejoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSDadosRecursosExtraswsdl#fWSDadosRecursosExtras", RequestNamespace:="urn:fWSDadosRecursosExtraswsdl", ResponseNamespace:="urn:fWSDadosRecursosExtraswsdl")>  _
        Public Function fWSDadosRecursosExtras(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_registro As String, ByRef entidade As String, ByVal campo As String, ByVal valor As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSDadosRecursosExtras", New Object() {pid_loja, plogin, psenha, id_registro, entidade, campo, valor})
            id_registro = CType(results(1),String)
            entidade = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSDadosRecursosExtrasAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_registro As String, ByVal entidade As String, ByVal campo As String, ByVal valor As String)
            Me.fWSDadosRecursosExtrasAsync(pid_loja, plogin, psenha, id_registro, entidade, campo, valor, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSDadosRecursosExtrasAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_registro As String, ByVal entidade As String, ByVal campo As String, ByVal valor As String, ByVal userState As Object)
            If (Me.fWSDadosRecursosExtrasOperationCompleted Is Nothing) Then
                Me.fWSDadosRecursosExtrasOperationCompleted = AddressOf Me.OnfWSDadosRecursosExtrasOperationCompleted
            End If
            Me.InvokeAsync("fWSDadosRecursosExtras", New Object() {pid_loja, plogin, psenha, id_registro, entidade, campo, valor}, Me.fWSDadosRecursosExtrasOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSDadosRecursosExtrasOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSDadosRecursosExtrasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSDadosRecursosExtrasCompleted(Me, New fWSDadosRecursosExtrasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSRelacionaClientePerfilwsdl#fWSRelacionaClientePerfil", RequestNamespace:="urn:fWSRelacionaClientePerfilwsdl", ResponseNamespace:="urn:fWSRelacionaClientePerfilwsdl")>  _
        Public Function fWSRelacionaClientePerfil(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_cliente As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal id_perfil As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSRelacionaClientePerfil", New Object() {pid_loja, plogin, psenha, id_cliente, id_perfil})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSRelacionaClientePerfilAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_cliente As String, ByVal id_perfil As String)
            Me.fWSRelacionaClientePerfilAsync(pid_loja, plogin, psenha, id_cliente, id_perfil, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSRelacionaClientePerfilAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_cliente As String, ByVal id_perfil As String, ByVal userState As Object)
            If (Me.fWSRelacionaClientePerfilOperationCompleted Is Nothing) Then
                Me.fWSRelacionaClientePerfilOperationCompleted = AddressOf Me.OnfWSRelacionaClientePerfilOperationCompleted
            End If
            Me.InvokeAsync("fWSRelacionaClientePerfil", New Object() {pid_loja, plogin, psenha, id_cliente, id_perfil}, Me.fWSRelacionaClientePerfilOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSRelacionaClientePerfilOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSRelacionaClientePerfilCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSRelacionaClientePerfilCompleted(Me, New fWSRelacionaClientePerfilCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSCadastraListaPrecowsdl#fWSCadastraListaPreco", RequestNamespace:="urn:fWSCadastraListaPrecowsdl", ResponseNamespace:="urn:fWSCadastraListaPrecowsdl")>  _
        Public Function fWSCadastraListaPreco(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_lista As String, ByVal nome_lista As String, ByVal id_produtos_precos() As ProdutoPreco) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSCadastraListaPreco", New Object() {pid_loja, plogin, psenha, id_lista, nome_lista, id_produtos_precos})
            id_lista = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraListaPrecoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_lista As String, ByVal nome_lista As String, ByVal id_produtos_precos() As ProdutoPreco)
            Me.fWSCadastraListaPrecoAsync(pid_loja, plogin, psenha, id_lista, nome_lista, id_produtos_precos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraListaPrecoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_lista As String, ByVal nome_lista As String, ByVal id_produtos_precos() As ProdutoPreco, ByVal userState As Object)
            If (Me.fWSCadastraListaPrecoOperationCompleted Is Nothing) Then
                Me.fWSCadastraListaPrecoOperationCompleted = AddressOf Me.OnfWSCadastraListaPrecoOperationCompleted
            End If
            Me.InvokeAsync("fWSCadastraListaPreco", New Object() {pid_loja, plogin, psenha, id_lista, nome_lista, id_produtos_precos}, Me.fWSCadastraListaPrecoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSCadastraListaPrecoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSCadastraListaPrecoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSCadastraListaPrecoCompleted(Me, New fWSCadastraListaPrecoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSCadastraCamposGrupoImpostowsdl#fWSCadastraCamposGrupoImposto", RequestNamespace:="urn:fWSCadastraCamposGrupoImpostowsdl", ResponseNamespace:="urn:fWSCadastraCamposGrupoImpostowsdl")>  _
        Public Function fWSCadastraCamposGrupoImposto(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_campo As String, ByVal nome_campo As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal tipo_campo As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal valor_cliente_loja As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal tipo_valor_campo As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSCadastraCamposGrupoImposto", New Object() {pid_loja, plogin, psenha, id_campo, nome_campo, tipo_campo, valor_cliente_loja, tipo_valor_campo})
            id_campo = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraCamposGrupoImpostoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_campo As String, ByVal nome_campo As String, ByVal tipo_campo As String, ByVal valor_cliente_loja As String, ByVal tipo_valor_campo As String)
            Me.fWSCadastraCamposGrupoImpostoAsync(pid_loja, plogin, psenha, id_campo, nome_campo, tipo_campo, valor_cliente_loja, tipo_valor_campo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraCamposGrupoImpostoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_campo As String, ByVal nome_campo As String, ByVal tipo_campo As String, ByVal valor_cliente_loja As String, ByVal tipo_valor_campo As String, ByVal userState As Object)
            If (Me.fWSCadastraCamposGrupoImpostoOperationCompleted Is Nothing) Then
                Me.fWSCadastraCamposGrupoImpostoOperationCompleted = AddressOf Me.OnfWSCadastraCamposGrupoImpostoOperationCompleted
            End If
            Me.InvokeAsync("fWSCadastraCamposGrupoImposto", New Object() {pid_loja, plogin, psenha, id_campo, nome_campo, tipo_campo, valor_cliente_loja, tipo_valor_campo}, Me.fWSCadastraCamposGrupoImpostoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSCadastraCamposGrupoImpostoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSCadastraCamposGrupoImpostoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSCadastraCamposGrupoImpostoCompleted(Me, New fWSCadastraCamposGrupoImpostoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSCadastraGrupoImpostowsdl#fWSCadastraGrupoImposto", RequestNamespace:="urn:fWSCadastraGrupoImpostowsdl", ResponseNamespace:="urn:fWSCadastraGrupoImpostowsdl")>  _
        Public Sub fWSCadastraGrupoImposto(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_grupo As String, ByVal nome_grupo As String, ByVal icms_grupo As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef status As String, ByVal dados_grupo() As GrupoImposto)
            Dim results() As Object = Me.Invoke("fWSCadastraGrupoImposto", New Object() {pid_loja, plogin, psenha, id_grupo, nome_grupo, icms_grupo, status, dados_grupo})
            id_grupo = CType(results(0),String)
            status = CType(results(1),String)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraGrupoImpostoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_grupo As String, ByVal nome_grupo As String, ByVal icms_grupo As String, ByVal status As String, ByVal dados_grupo() As GrupoImposto)
            Me.fWSCadastraGrupoImpostoAsync(pid_loja, plogin, psenha, id_grupo, nome_grupo, icms_grupo, status, dados_grupo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSCadastraGrupoImpostoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_grupo As String, ByVal nome_grupo As String, ByVal icms_grupo As String, ByVal status As String, ByVal dados_grupo() As GrupoImposto, ByVal userState As Object)
            If (Me.fWSCadastraGrupoImpostoOperationCompleted Is Nothing) Then
                Me.fWSCadastraGrupoImpostoOperationCompleted = AddressOf Me.OnfWSCadastraGrupoImpostoOperationCompleted
            End If
            Me.InvokeAsync("fWSCadastraGrupoImposto", New Object() {pid_loja, plogin, psenha, id_grupo, nome_grupo, icms_grupo, status, dados_grupo}, Me.fWSCadastraGrupoImpostoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSCadastraGrupoImpostoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSCadastraGrupoImpostoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSCadastraGrupoImpostoCompleted(Me, New fWSCadastraGrupoImpostoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSRelacionaImpostowsdl#fWSRelacionaImposto", RequestNamespace:="urn:fWSRelacionaImpostowsdl", ResponseNamespace:="urn:fWSRelacionaImpostowsdl")>  _
        Public Function fWSRelacionaImposto(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal grupo_id As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal tipo_id As String, ByVal ids_relacionamento() As RelacionamentoImposto, <System.Xml.Serialization.SoapElementAttribute("grupo_id")> ByRef grupo_id1() As RelacionamentoImposto) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSRelacionaImposto", New Object() {pid_loja, plogin, psenha, grupo_id, tipo_id, ids_relacionamento})
            grupo_id1 = CType(results(1),RelacionamentoImposto())
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSRelacionaImpostoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal grupo_id As String, ByVal tipo_id As String, ByVal ids_relacionamento() As RelacionamentoImposto)
            Me.fWSRelacionaImpostoAsync(pid_loja, plogin, psenha, grupo_id, tipo_id, ids_relacionamento, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSRelacionaImpostoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal grupo_id As String, ByVal tipo_id As String, ByVal ids_relacionamento() As RelacionamentoImposto, ByVal userState As Object)
            If (Me.fWSRelacionaImpostoOperationCompleted Is Nothing) Then
                Me.fWSRelacionaImpostoOperationCompleted = AddressOf Me.OnfWSRelacionaImpostoOperationCompleted
            End If
            Me.InvokeAsync("fWSRelacionaImposto", New Object() {pid_loja, plogin, psenha, grupo_id, tipo_id, ids_relacionamento}, Me.fWSRelacionaImpostoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSRelacionaImpostoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSRelacionaImpostoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSRelacionaImpostoCompleted(Me, New fWSRelacionaImpostoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSConvertePedidoComissaowsdl#fWSConvertePedidoComissao", RequestNamespace:="urn:fWSConvertePedidoComissaowsdl", ResponseNamespace:="urn:fWSConvertePedidoComissaowsdl")>  _
        Public Function fWSConvertePedidoComissao(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_pedido As String) As <System.Xml.Serialization.SoapElementAttribute("status")> String
            Dim results() As Object = Me.Invoke("fWSConvertePedidoComissao", New Object() {pid_loja, plogin, psenha, id_pedido})
            id_pedido = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSConvertePedidoComissaoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_pedido As String)
            Me.fWSConvertePedidoComissaoAsync(pid_loja, plogin, psenha, id_pedido, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSConvertePedidoComissaoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_pedido As String, ByVal userState As Object)
            If (Me.fWSConvertePedidoComissaoOperationCompleted Is Nothing) Then
                Me.fWSConvertePedidoComissaoOperationCompleted = AddressOf Me.OnfWSConvertePedidoComissaoOperationCompleted
            End If
            Me.InvokeAsync("fWSConvertePedidoComissao", New Object() {pid_loja, plogin, psenha, id_pedido}, Me.fWSConvertePedidoComissaoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSConvertePedidoComissaoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSConvertePedidoComissaoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSConvertePedidoComissaoCompleted(Me, New fWSConvertePedidoComissaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSImportaGradePorCodReferenciawsdl#fWSImportaGradePorCodReferencia", RequestNamespace:="urn:fWSImportaGradePorCodReferenciawsdl", ResponseNamespace:="urn:fWSImportaGradePorCodReferenciawsdl")>  _
        Public Function fWSImportaGradePorCodReferencia(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal cod_referencia As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_produto As String) As <System.Xml.Serialization.SoapElementAttribute("id_grade", DataType:="integer")> String
            Dim results() As Object = Me.Invoke("fWSImportaGradePorCodReferencia", New Object() {pid_loja, plogin, psenha, cod_referencia})
            id_produto = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSImportaGradePorCodReferenciaAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal cod_referencia As String)
            Me.fWSImportaGradePorCodReferenciaAsync(pid_loja, plogin, psenha, cod_referencia, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSImportaGradePorCodReferenciaAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal cod_referencia As String, ByVal userState As Object)
            If (Me.fWSImportaGradePorCodReferenciaOperationCompleted Is Nothing) Then
                Me.fWSImportaGradePorCodReferenciaOperationCompleted = AddressOf Me.OnfWSImportaGradePorCodReferenciaOperationCompleted
            End If
            Me.InvokeAsync("fWSImportaGradePorCodReferencia", New Object() {pid_loja, plogin, psenha, cod_referencia}, Me.fWSImportaGradePorCodReferenciaOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSImportaGradePorCodReferenciaOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSImportaGradePorCodReferenciaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSImportaGradePorCodReferenciaCompleted(Me, New fWSImportaGradePorCodReferenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:fWSImportaCategoriaPorDescricaowsdl#fWSImportaCategoriaPorDescricao", RequestNamespace:="urn:fWSImportaCategoriaPorDescricaowsdl", ResponseNamespace:="urn:fWSImportaCategoriaPorDescricaowsdl")>  _
        Public Function fWSImportaCategoriaPorDescricao(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByRef id_categoriapai As String, ByVal descricao As String) As <System.Xml.Serialization.SoapElementAttribute("id_categoria", DataType:="integer")> String
            Dim results() As Object = Me.Invoke("fWSImportaCategoriaPorDescricao", New Object() {pid_loja, plogin, psenha, id_categoriapai, descricao})
            id_categoriapai = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fWSImportaCategoriaPorDescricaoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_categoriapai As String, ByVal descricao As String)
            Me.fWSImportaCategoriaPorDescricaoAsync(pid_loja, plogin, psenha, id_categoriapai, descricao, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fWSImportaCategoriaPorDescricaoAsync(ByVal pid_loja As String, ByVal plogin As String, ByVal psenha As String, ByVal id_categoriapai As String, ByVal descricao As String, ByVal userState As Object)
            If (Me.fWSImportaCategoriaPorDescricaoOperationCompleted Is Nothing) Then
                Me.fWSImportaCategoriaPorDescricaoOperationCompleted = AddressOf Me.OnfWSImportaCategoriaPorDescricaoOperationCompleted
            End If
            Me.InvokeAsync("fWSImportaCategoriaPorDescricao", New Object() {pid_loja, plogin, psenha, id_categoriapai, descricao}, Me.fWSImportaCategoriaPorDescricaoOperationCompleted, userState)
        End Sub
        
        Private Sub OnfWSImportaCategoriaPorDescricaoOperationCompleted(ByVal arg As Object)
            If (Not (Me.fWSImportaCategoriaPorDescricaoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fWSImportaCategoriaPorDescricaoCompleted(Me, New fWSImportaCategoriaPorDescricaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.virtualjoias.com/webservice/v2/ws_servidor.php")>  _
    Partial Public Class Informacao
        
        Private tipoNomeField As String
        
        Private textoField As String
        
        '''<remarks/>
        Public Property TipoNome() As String
            Get
                Return Me.tipoNomeField
            End Get
            Set
                Me.tipoNomeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Texto() As String
            Get
                Return Me.textoField
            End Get
            Set
                Me.textoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.virtualjoias.com/webservice/v2/ws_servidor.php")>  _
    Partial Public Class RelacionamentoImposto
        
        Private idField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.virtualjoias.com/webservice/v2/ws_servidor.php")>  _
    Partial Public Class GrupoImposto
        
        Private id_campoField As String
        
        Private estadoField As String
        
        Private valor_campoField As String
        
        Private capitalField As String
        
        Private interiorField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_campo() As String
            Get
                Return Me.id_campoField
            End Get
            Set
                Me.id_campoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property estado() As String
            Get
                Return Me.estadoField
            End Get
            Set
                Me.estadoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property valor_campo() As String
            Get
                Return Me.valor_campoField
            End Get
            Set
                Me.valor_campoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property capital() As String
            Get
                Return Me.capitalField
            End Get
            Set
                Me.capitalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property interior() As String
            Get
                Return Me.interiorField
            End Get
            Set
                Me.interiorField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.virtualjoias.com/webservice/v2/ws_servidor.php")>  _
    Partial Public Class ProdutoPreco
        
        Private idField As String
        
        Private variacaoField As String
        
        Private valorField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property variacao() As String
            Get
                Return Me.variacaoField
            End Get
            Set
                Me.variacaoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property valor() As String
            Get
                Return Me.valorField
            End Get
            Set
                Me.valorField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.virtualjoias.com/webservice/v2/ws_servidor.php")>  _
    Partial Public Class DadosBuscaLista
        
        Private idField As String
        
        Private id_eventosField As String
        
        Private id_clienteField As String
        
        Private cliente_enderecosField As String
        
        Private quantidade_compradaField As String
        
        Private nomeField As String
        
        Private dataField As String
        
        Private data_cadastroField As String
        
        Private data_finalizadoField As String
        
        Private validadeField As String
        
        Private urlField As String
        
        Private imagemField As String
        
        Private recebimentoField As String
        
        Private cartaoField As String
        
        Private envia_emailField As String
        
        Private mensagemField As String
        
        Private statusField As String
        
        Private paisField As String
        
        Private revendaField As String
        
        Private tipo_pessoaField As String
        
        Private bloqueadoField As String
        
        Private clienteField As String
        
        Private cnpj_cpfField As String
        
        Private ie_rgField As String
        
        Private data_nascField As String
        
        Private emailField As String
        
        Private observacaoField As String
        
        Private logradouroField As String
        
        Private numeroField As String
        
        Private bairroField As String
        
        Private complementoField As String
        
        Private cepField As String
        
        Private cidadeField As String
        
        Private ufField As String
        
        Private telefoneField As String
        
        Private faxField As String
        
        Private celularField As String
        
        Private sexoField As String
        
        Private apelidoField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_eventos() As String
            Get
                Return Me.id_eventosField
            End Get
            Set
                Me.id_eventosField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_cliente() As String
            Get
                Return Me.id_clienteField
            End Get
            Set
                Me.id_clienteField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property cliente_enderecos() As String
            Get
                Return Me.cliente_enderecosField
            End Get
            Set
                Me.cliente_enderecosField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property quantidade_comprada() As String
            Get
                Return Me.quantidade_compradaField
            End Get
            Set
                Me.quantidade_compradaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nome() As String
            Get
                Return Me.nomeField
            End Get
            Set
                Me.nomeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property data() As String
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property data_cadastro() As String
            Get
                Return Me.data_cadastroField
            End Get
            Set
                Me.data_cadastroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property data_finalizado() As String
            Get
                Return Me.data_finalizadoField
            End Get
            Set
                Me.data_finalizadoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property validade() As String
            Get
                Return Me.validadeField
            End Get
            Set
                Me.validadeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property url() As String
            Get
                Return Me.urlField
            End Get
            Set
                Me.urlField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property imagem() As String
            Get
                Return Me.imagemField
            End Get
            Set
                Me.imagemField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property recebimento() As String
            Get
                Return Me.recebimentoField
            End Get
            Set
                Me.recebimentoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cartao() As String
            Get
                Return Me.cartaoField
            End Get
            Set
                Me.cartaoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property envia_email() As String
            Get
                Return Me.envia_emailField
            End Get
            Set
                Me.envia_emailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property mensagem() As String
            Get
                Return Me.mensagemField
            End Get
            Set
                Me.mensagemField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property pais() As String
            Get
                Return Me.paisField
            End Get
            Set
                Me.paisField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property revenda() As String
            Get
                Return Me.revendaField
            End Get
            Set
                Me.revendaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property tipo_pessoa() As String
            Get
                Return Me.tipo_pessoaField
            End Get
            Set
                Me.tipo_pessoaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bloqueado() As String
            Get
                Return Me.bloqueadoField
            End Get
            Set
                Me.bloqueadoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cliente() As String
            Get
                Return Me.clienteField
            End Get
            Set
                Me.clienteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cnpj_cpf() As String
            Get
                Return Me.cnpj_cpfField
            End Get
            Set
                Me.cnpj_cpfField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ie_rg() As String
            Get
                Return Me.ie_rgField
            End Get
            Set
                Me.ie_rgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property data_nasc() As String
            Get
                Return Me.data_nascField
            End Get
            Set
                Me.data_nascField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property email() As String
            Get
                Return Me.emailField
            End Get
            Set
                Me.emailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property observacao() As String
            Get
                Return Me.observacaoField
            End Get
            Set
                Me.observacaoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property logradouro() As String
            Get
                Return Me.logradouroField
            End Get
            Set
                Me.logradouroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property numero() As String
            Get
                Return Me.numeroField
            End Get
            Set
                Me.numeroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bairro() As String
            Get
                Return Me.bairroField
            End Get
            Set
                Me.bairroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property complemento() As String
            Get
                Return Me.complementoField
            End Get
            Set
                Me.complementoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cep() As String
            Get
                Return Me.cepField
            End Get
            Set
                Me.cepField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cidade() As String
            Get
                Return Me.cidadeField
            End Get
            Set
                Me.cidadeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property uf() As String
            Get
                Return Me.ufField
            End Get
            Set
                Me.ufField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property telefone() As String
            Get
                Return Me.telefoneField
            End Get
            Set
                Me.telefoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property fax() As String
            Get
                Return Me.faxField
            End Get
            Set
                Me.faxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property celular() As String
            Get
                Return Me.celularField
            End Get
            Set
                Me.celularField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sexo() As String
            Get
                Return Me.sexoField
            End Get
            Set
                Me.sexoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property apelido() As String
            Get
                Return Me.apelidoField
            End Get
            Set
                Me.apelidoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.virtualjoias.com/webservice/v2/ws_servidor.php")>  _
    Partial Public Class DadosBuscaListaVendas
        
        Private id_listaField As String
        
        Private quantidadeField As String
        
        Private quantidade_compradaField As String
        
        Private nome_produtoField As String
        
        Private id_produtoField As String
        
        Private id_gradeField As String
        
        Private id_produto_listaField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_lista() As String
            Get
                Return Me.id_listaField
            End Get
            Set
                Me.id_listaField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property quantidade() As String
            Get
                Return Me.quantidadeField
            End Get
            Set
                Me.quantidadeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property quantidade_comprada() As String
            Get
                Return Me.quantidade_compradaField
            End Get
            Set
                Me.quantidade_compradaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nome_produto() As String
            Get
                Return Me.nome_produtoField
            End Get
            Set
                Me.nome_produtoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_produto() As String
            Get
                Return Me.id_produtoField
            End Get
            Set
                Me.id_produtoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_grade() As String
            Get
                Return Me.id_gradeField
            End Get
            Set
                Me.id_gradeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_produto_lista() As String
            Get
                Return Me.id_produto_listaField
            End Get
            Set
                Me.id_produto_listaField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.virtualjoias.com/webservice/v2/ws_servidor.php")>  _
    Partial Public Class Pagamentos
        
        Private cod_pedidoField As String
        
        Private id_pagamentoField As String
        
        Private forma_pagamentoField As String
        
        Private valor_pagoField As String
        
        Private data_pagamentoField As Date
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property cod_pedido() As String
            Get
                Return Me.cod_pedidoField
            End Get
            Set
                Me.cod_pedidoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_pagamento() As String
            Get
                Return Me.id_pagamentoField
            End Get
            Set
                Me.id_pagamentoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property forma_pagamento() As String
            Get
                Return Me.forma_pagamentoField
            End Get
            Set
                Me.forma_pagamentoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property valor_pago() As String
            Get
                Return Me.valor_pagoField
            End Get
            Set
                Me.valor_pagoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="date")>  _
        Public Property data_pagamento() As Date
            Get
                Return Me.data_pagamentoField
            End Get
            Set
                Me.data_pagamentoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.virtualjoias.com/webservice/v2/ws_servidor.php")>  _
    Partial Public Class DadosListaProdutos
        
        Private idField As String
        
        Private id_listaField As String
        
        Private id_produtoField As String
        
        Private quantidadeField As String
        
        Private quantidade_compradaField As String
        
        Private id_gradeField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_lista() As String
            Get
                Return Me.id_listaField
            End Get
            Set
                Me.id_listaField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_produto() As String
            Get
                Return Me.id_produtoField
            End Get
            Set
                Me.id_produtoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property quantidade() As String
            Get
                Return Me.quantidadeField
            End Get
            Set
                Me.quantidadeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property quantidade_comprada() As String
            Get
                Return Me.quantidade_compradaField
            End Get
            Set
                Me.quantidade_compradaField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_grade() As String
            Get
                Return Me.id_gradeField
            End Get
            Set
                Me.id_gradeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.virtualjoias.com/webservice/v2/ws_servidor.php")>  _
    Partial Public Class DadosListaDesejos
        
        Private idField As String
        
        Private id_clienteField As String
        
        Private id_eventosField As String
        
        Private cliente_enderecosField As String
        
        Private dataField As String
        
        Private data_cadastroField As String
        
        Private nomeField As String
        
        Private data_finalizadoField As String
        
        Private validadeField As String
        
        Private urlField As String
        
        Private recebimentoField As String
        
        Private cartaoField As String
        
        Private envia_emailField As String
        
        Private mensagemField As String
        
        Private statusField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_cliente() As String
            Get
                Return Me.id_clienteField
            End Get
            Set
                Me.id_clienteField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_eventos() As String
            Get
                Return Me.id_eventosField
            End Get
            Set
                Me.id_eventosField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property cliente_enderecos() As String
            Get
                Return Me.cliente_enderecosField
            End Get
            Set
                Me.cliente_enderecosField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property data() As String
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property data_cadastro() As String
            Get
                Return Me.data_cadastroField
            End Get
            Set
                Me.data_cadastroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nome() As String
            Get
                Return Me.nomeField
            End Get
            Set
                Me.nomeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property data_finalizado() As String
            Get
                Return Me.data_finalizadoField
            End Get
            Set
                Me.data_finalizadoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property validade() As String
            Get
                Return Me.validadeField
            End Get
            Set
                Me.validadeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property url() As String
            Get
                Return Me.urlField
            End Get
            Set
                Me.urlField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property recebimento() As String
            Get
                Return Me.recebimentoField
            End Get
            Set
                Me.recebimentoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cartao() As String
            Get
                Return Me.cartaoField
            End Get
            Set
                Me.cartaoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property envia_email() As String
            Get
                Return Me.envia_emailField
            End Get
            Set
                Me.envia_emailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property mensagem() As String
            Get
                Return Me.mensagemField
            End Get
            Set
                Me.mensagemField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.virtualjoias.com/webservice/v2/ws_servidor.php")>  _
    Partial Public Class ProdutosRelacionados
        
        Private id_produtoField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_produto() As String
            Get
                Return Me.id_produtoField
            End Get
            Set
                Me.id_produtoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.virtualjoias.com/webservice/v2/ws_servidor.php")>  _
    Partial Public Class ProdutosKit
        
        Private produtoField As String
        
        Private tipo_descontoField As String
        
        Private descontoField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property produto() As String
            Get
                Return Me.produtoField
            End Get
            Set
                Me.produtoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property tipo_desconto() As String
            Get
                Return Me.tipo_descontoField
            End Get
            Set
                Me.tipo_descontoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property desconto() As String
            Get
                Return Me.descontoField
            End Get
            Set
                Me.descontoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.virtualjoias.com/webservice/v2/ws_servidor.php")>  _
    Partial Public Class Chaves
        
        Private lojaField As String
        
        Private userField As String
        
        Private senhaField As String
        
        Private chaveabacosField As String
        
        Private ipabacosField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property loja() As String
            Get
                Return Me.lojaField
            End Get
            Set
                Me.lojaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property user() As String
            Get
                Return Me.userField
            End Get
            Set
                Me.userField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property senha() As String
            Get
                Return Me.senhaField
            End Get
            Set
                Me.senhaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property chaveabacos() As String
            Get
                Return Me.chaveabacosField
            End Get
            Set
                Me.chaveabacosField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ipabacos() As String
            Get
                Return Me.ipabacosField
            End Get
            Set
                Me.ipabacosField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.virtualjoias.com/webservice/v2/ws_servidor.php")>  _
    Partial Public Class StatusPedidos
        
        Private protocoloField As String
        
        Private pedidoField As String
        
        Private id_statusField As String
        
        Private statusField As String
        
        Private dataField As String
        
        Private horaField As String
        
        Private serienotaField As String
        
        Private numeronotaField As String
        
        Private datanotaField As String
        
        Private horanotaField As String
        
        Private objetoField As String
        
        Private volumeField As String
        
        '''<remarks/>
        Public Property protocolo() As String
            Get
                Return Me.protocoloField
            End Get
            Set
                Me.protocoloField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property pedido() As String
            Get
                Return Me.pedidoField
            End Get
            Set
                Me.pedidoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_status() As String
            Get
                Return Me.id_statusField
            End Get
            Set
                Me.id_statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property data() As String
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property hora() As String
            Get
                Return Me.horaField
            End Get
            Set
                Me.horaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property serienota() As String
            Get
                Return Me.serienotaField
            End Get
            Set
                Me.serienotaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property numeronota() As String
            Get
                Return Me.numeronotaField
            End Get
            Set
                Me.numeronotaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property datanota() As String
            Get
                Return Me.datanotaField
            End Get
            Set
                Me.datanotaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property horanota() As String
            Get
                Return Me.horanotaField
            End Get
            Set
                Me.horanotaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property objeto() As String
            Get
                Return Me.objetoField
            End Get
            Set
                Me.objetoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property volume() As String
            Get
                Return Me.volumeField
            End Get
            Set
                Me.volumeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.virtualjoias.com/webservice/v2/ws_servidor.php")>  _
    Partial Public Class Parcela_pedido
        
        Private id_parcelaField As String
        
        Private id_pedidoField As String
        
        Private forma_pagamentoField As String
        
        Private data_vencimentoField As Date
        
        Private valorField As String
        
        Private data_pagamentoField As Date
        
        Private data_confirmacaoField As Date
        
        Private valor_pagoField As String
        
        Private local_pagamentoField As String
        
        Private observacaoField As String
        
        Private id_forma_pagamentoField As String
        
        Private qt_parcelasField As String
        
        Private statusField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_parcela() As String
            Get
                Return Me.id_parcelaField
            End Get
            Set
                Me.id_parcelaField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_pedido() As String
            Get
                Return Me.id_pedidoField
            End Get
            Set
                Me.id_pedidoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property forma_pagamento() As String
            Get
                Return Me.forma_pagamentoField
            End Get
            Set
                Me.forma_pagamentoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="date")>  _
        Public Property data_vencimento() As Date
            Get
                Return Me.data_vencimentoField
            End Get
            Set
                Me.data_vencimentoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property valor() As String
            Get
                Return Me.valorField
            End Get
            Set
                Me.valorField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="date")>  _
        Public Property data_pagamento() As Date
            Get
                Return Me.data_pagamentoField
            End Get
            Set
                Me.data_pagamentoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="date")>  _
        Public Property data_confirmacao() As Date
            Get
                Return Me.data_confirmacaoField
            End Get
            Set
                Me.data_confirmacaoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property valor_pago() As String
            Get
                Return Me.valor_pagoField
            End Get
            Set
                Me.valor_pagoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property local_pagamento() As String
            Get
                Return Me.local_pagamentoField
            End Get
            Set
                Me.local_pagamentoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property observacao() As String
            Get
                Return Me.observacaoField
            End Get
            Set
                Me.observacaoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_forma_pagamento() As String
            Get
                Return Me.id_forma_pagamentoField
            End Get
            Set
                Me.id_forma_pagamentoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property qt_parcelas() As String
            Get
                Return Me.qt_parcelasField
            End Get
            Set
                Me.qt_parcelasField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.virtualjoias.com/webservice/v2/ws_servidor.php")>  _
    Partial Public Class Item_pedido
        
        Private id_pedidoField As String
        
        Private id_produtoField As String
        
        Private id_gradeField As String
        
        Private id_kitField As String
        
        Private nome_produtoField As String
        
        Private referenciaField As String
        
        Private id_embalagemField As String
        
        Private precoField As String
        
        Private custoField As String
        
        Private comissaoField As String
        
        Private quantidadeField As String
        
        Private brindeField As String
        
        Private statusField As String
        
        Private id_listaField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_pedido() As String
            Get
                Return Me.id_pedidoField
            End Get
            Set
                Me.id_pedidoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_produto() As String
            Get
                Return Me.id_produtoField
            End Get
            Set
                Me.id_produtoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_grade() As String
            Get
                Return Me.id_gradeField
            End Get
            Set
                Me.id_gradeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_kit() As String
            Get
                Return Me.id_kitField
            End Get
            Set
                Me.id_kitField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nome_produto() As String
            Get
                Return Me.nome_produtoField
            End Get
            Set
                Me.nome_produtoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property referencia() As String
            Get
                Return Me.referenciaField
            End Get
            Set
                Me.referenciaField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_embalagem() As String
            Get
                Return Me.id_embalagemField
            End Get
            Set
                Me.id_embalagemField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property preco() As String
            Get
                Return Me.precoField
            End Get
            Set
                Me.precoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property custo() As String
            Get
                Return Me.custoField
            End Get
            Set
                Me.custoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property comissao() As String
            Get
                Return Me.comissaoField
            End Get
            Set
                Me.comissaoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property quantidade() As String
            Get
                Return Me.quantidadeField
            End Get
            Set
                Me.quantidadeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property brinde() As String
            Get
                Return Me.brindeField
            End Get
            Set
                Me.brindeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_lista() As String
            Get
                Return Me.id_listaField
            End Get
            Set
                Me.id_listaField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.virtualjoias.com/webservice/v2/ws_servidor.php")>  _
    Partial Public Class Pedido
        
        Private id_pedidoField As String
        
        Private pedido_nfinField As String
        
        Private freteField As String
        
        Private id_clienteField As String
        
        Private id_orcamentoField As String
        
        Private id_site_parceiroField As String
        
        Private id_local_vendaField As String
        
        Private id_usuarioField As String
        
        Private data_pedidoField As String
        
        Private hora_pedidoField As String
        
        Private data_envioField As String
        
        Private hora_envioField As String
        
        Private ip_origemField As String
        
        Private totalField As String
        
        Private descontoField As String
        
        Private valor_cupomField As String
        
        Private comissaoField As String
        
        Private valor_freteField As String
        
        Private frete_pagoField As String
        
        Private cod_rastreamentoField As String
        
        Private obs_lojaField As String
        
        Private obs_clienteField As String
        
        Private obs_pagamentoField As String
        
        Private obs_freteField As String
        
        Private valor_impostoField As String
        
        Private valor_embalagemField As String
        
        Private local_vendaField As String
        
        Private nro_cupomField As String
        
        Private parceiroField As String
        
        Private statusField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_pedido() As String
            Get
                Return Me.id_pedidoField
            End Get
            Set
                Me.id_pedidoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property pedido_nfin() As String
            Get
                Return Me.pedido_nfinField
            End Get
            Set
                Me.pedido_nfinField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property frete() As String
            Get
                Return Me.freteField
            End Get
            Set
                Me.freteField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_cliente() As String
            Get
                Return Me.id_clienteField
            End Get
            Set
                Me.id_clienteField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_orcamento() As String
            Get
                Return Me.id_orcamentoField
            End Get
            Set
                Me.id_orcamentoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_site_parceiro() As String
            Get
                Return Me.id_site_parceiroField
            End Get
            Set
                Me.id_site_parceiroField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_local_venda() As String
            Get
                Return Me.id_local_vendaField
            End Get
            Set
                Me.id_local_vendaField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_usuario() As String
            Get
                Return Me.id_usuarioField
            End Get
            Set
                Me.id_usuarioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property data_pedido() As String
            Get
                Return Me.data_pedidoField
            End Get
            Set
                Me.data_pedidoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property hora_pedido() As String
            Get
                Return Me.hora_pedidoField
            End Get
            Set
                Me.hora_pedidoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property data_envio() As String
            Get
                Return Me.data_envioField
            End Get
            Set
                Me.data_envioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property hora_envio() As String
            Get
                Return Me.hora_envioField
            End Get
            Set
                Me.hora_envioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ip_origem() As String
            Get
                Return Me.ip_origemField
            End Get
            Set
                Me.ip_origemField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property total() As String
            Get
                Return Me.totalField
            End Get
            Set
                Me.totalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property desconto() As String
            Get
                Return Me.descontoField
            End Get
            Set
                Me.descontoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property valor_cupom() As String
            Get
                Return Me.valor_cupomField
            End Get
            Set
                Me.valor_cupomField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property comissao() As String
            Get
                Return Me.comissaoField
            End Get
            Set
                Me.comissaoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property valor_frete() As String
            Get
                Return Me.valor_freteField
            End Get
            Set
                Me.valor_freteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property frete_pago() As String
            Get
                Return Me.frete_pagoField
            End Get
            Set
                Me.frete_pagoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cod_rastreamento() As String
            Get
                Return Me.cod_rastreamentoField
            End Get
            Set
                Me.cod_rastreamentoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property obs_loja() As String
            Get
                Return Me.obs_lojaField
            End Get
            Set
                Me.obs_lojaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property obs_cliente() As String
            Get
                Return Me.obs_clienteField
            End Get
            Set
                Me.obs_clienteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property obs_pagamento() As String
            Get
                Return Me.obs_pagamentoField
            End Get
            Set
                Me.obs_pagamentoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property obs_frete() As String
            Get
                Return Me.obs_freteField
            End Get
            Set
                Me.obs_freteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property valor_imposto() As String
            Get
                Return Me.valor_impostoField
            End Get
            Set
                Me.valor_impostoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property valor_embalagem() As String
            Get
                Return Me.valor_embalagemField
            End Get
            Set
                Me.valor_embalagemField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property local_venda() As String
            Get
                Return Me.local_vendaField
            End Get
            Set
                Me.local_vendaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nro_cupom() As String
            Get
                Return Me.nro_cupomField
            End Get
            Set
                Me.nro_cupomField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property parceiro() As String
            Get
                Return Me.parceiroField
            End Get
            Set
                Me.parceiroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.virtualjoias.com/webservice/v2/ws_servidor.php")>  _
    Partial Public Class ClienteSemDadosPedidoAvancado
        
        Private id_clienteField As String
        
        Private paisField As String
        
        Private revendaField As String
        
        Private tipo_pessoaField As String
        
        Private bloqueadoField As String
        
        Private clienteField As String
        
        Private cnpj_cpfField As String
        
        Private ie_rgField As String
        
        Private data_nascField As String
        
        Private data_cadastroField As String
        
        Private emailField As String
        
        Private observacaoField As String
        
        Private logradouroField As String
        
        Private numeroField As String
        
        Private bairroField As String
        
        Private complementoField As String
        
        Private cepField As String
        
        Private cidadeField As String
        
        Private ufField As String
        
        Private telefoneField As String
        
        Private faxField As String
        
        Private celularField As String
        
        Private sexoField As String
        
        Private apelidoField As String
        
        Private desconto_revendaField As String
        
        Private enderecosField() As EnderecoCliente
        
        Private dados_extrasField() As DadoExtra
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_cliente() As String
            Get
                Return Me.id_clienteField
            End Get
            Set
                Me.id_clienteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property pais() As String
            Get
                Return Me.paisField
            End Get
            Set
                Me.paisField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property revenda() As String
            Get
                Return Me.revendaField
            End Get
            Set
                Me.revendaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property tipo_pessoa() As String
            Get
                Return Me.tipo_pessoaField
            End Get
            Set
                Me.tipo_pessoaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bloqueado() As String
            Get
                Return Me.bloqueadoField
            End Get
            Set
                Me.bloqueadoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cliente() As String
            Get
                Return Me.clienteField
            End Get
            Set
                Me.clienteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cnpj_cpf() As String
            Get
                Return Me.cnpj_cpfField
            End Get
            Set
                Me.cnpj_cpfField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ie_rg() As String
            Get
                Return Me.ie_rgField
            End Get
            Set
                Me.ie_rgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property data_nasc() As String
            Get
                Return Me.data_nascField
            End Get
            Set
                Me.data_nascField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property data_cadastro() As String
            Get
                Return Me.data_cadastroField
            End Get
            Set
                Me.data_cadastroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property email() As String
            Get
                Return Me.emailField
            End Get
            Set
                Me.emailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property observacao() As String
            Get
                Return Me.observacaoField
            End Get
            Set
                Me.observacaoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property logradouro() As String
            Get
                Return Me.logradouroField
            End Get
            Set
                Me.logradouroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property numero() As String
            Get
                Return Me.numeroField
            End Get
            Set
                Me.numeroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bairro() As String
            Get
                Return Me.bairroField
            End Get
            Set
                Me.bairroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property complemento() As String
            Get
                Return Me.complementoField
            End Get
            Set
                Me.complementoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cep() As String
            Get
                Return Me.cepField
            End Get
            Set
                Me.cepField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cidade() As String
            Get
                Return Me.cidadeField
            End Get
            Set
                Me.cidadeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property uf() As String
            Get
                Return Me.ufField
            End Get
            Set
                Me.ufField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property telefone() As String
            Get
                Return Me.telefoneField
            End Get
            Set
                Me.telefoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property fax() As String
            Get
                Return Me.faxField
            End Get
            Set
                Me.faxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property celular() As String
            Get
                Return Me.celularField
            End Get
            Set
                Me.celularField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sexo() As String
            Get
                Return Me.sexoField
            End Get
            Set
                Me.sexoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property apelido() As String
            Get
                Return Me.apelidoField
            End Get
            Set
                Me.apelidoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property desconto_revenda() As String
            Get
                Return Me.desconto_revendaField
            End Get
            Set
                Me.desconto_revendaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property enderecos() As EnderecoCliente()
            Get
                Return Me.enderecosField
            End Get
            Set
                Me.enderecosField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dados_extras() As DadoExtra()
            Get
                Return Me.dados_extrasField
            End Get
            Set
                Me.dados_extrasField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.virtualjoias.com/webservice/v2/ws_servidor.php")>  _
    Partial Public Class EnderecoCliente
        
        Private tipoField As String
        
        Private descricaoField As String
        
        Private tipo_entregaField As String
        
        Private destinatarioField As String
        
        Private logradouroField As String
        
        Private numeroField As String
        
        Private complementoField As String
        
        Private bairroField As String
        
        Private cidadeField As String
        
        Private ufField As String
        
        Private cepField As String
        
        Private paisField As String
        
        '''<remarks/>
        Public Property tipo() As String
            Get
                Return Me.tipoField
            End Get
            Set
                Me.tipoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property descricao() As String
            Get
                Return Me.descricaoField
            End Get
            Set
                Me.descricaoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property tipo_entrega() As String
            Get
                Return Me.tipo_entregaField
            End Get
            Set
                Me.tipo_entregaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property destinatario() As String
            Get
                Return Me.destinatarioField
            End Get
            Set
                Me.destinatarioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property logradouro() As String
            Get
                Return Me.logradouroField
            End Get
            Set
                Me.logradouroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property numero() As String
            Get
                Return Me.numeroField
            End Get
            Set
                Me.numeroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property complemento() As String
            Get
                Return Me.complementoField
            End Get
            Set
                Me.complementoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bairro() As String
            Get
                Return Me.bairroField
            End Get
            Set
                Me.bairroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cidade() As String
            Get
                Return Me.cidadeField
            End Get
            Set
                Me.cidadeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property uf() As String
            Get
                Return Me.ufField
            End Get
            Set
                Me.ufField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cep() As String
            Get
                Return Me.cepField
            End Get
            Set
                Me.cepField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property pais() As String
            Get
                Return Me.paisField
            End Get
            Set
                Me.paisField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.virtualjoias.com/webservice/v2/ws_servidor.php")>  _
    Partial Public Class DadoExtra
        
        Private campoField As String
        
        Private valorField As String
        
        '''<remarks/>
        Public Property campo() As String
            Get
                Return Me.campoField
            End Get
            Set
                Me.campoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property valor() As String
            Get
                Return Me.valorField
            End Get
            Set
                Me.valorField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.virtualjoias.com/webservice/v2/ws_servidor.php")>  _
    Partial Public Class ClienteSemDadosPedido
        
        Private id_clienteField As String
        
        Private paisField As String
        
        Private revendaField As String
        
        Private tipo_pessoaField As String
        
        Private bloqueadoField As String
        
        Private clienteField As String
        
        Private cnpj_cpfField As String
        
        Private ie_rgField As String
        
        Private data_nascField As String
        
        Private data_cadastroField As String
        
        Private emailField As String
        
        Private observacaoField As String
        
        Private logradouroField As String
        
        Private numeroField As String
        
        Private bairroField As String
        
        Private complementoField As String
        
        Private cepField As String
        
        Private cidadeField As String
        
        Private ufField As String
        
        Private telefoneField As String
        
        Private faxField As String
        
        Private celularField As String
        
        Private sexoField As String
        
        Private apelidoField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_cliente() As String
            Get
                Return Me.id_clienteField
            End Get
            Set
                Me.id_clienteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property pais() As String
            Get
                Return Me.paisField
            End Get
            Set
                Me.paisField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property revenda() As String
            Get
                Return Me.revendaField
            End Get
            Set
                Me.revendaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property tipo_pessoa() As String
            Get
                Return Me.tipo_pessoaField
            End Get
            Set
                Me.tipo_pessoaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bloqueado() As String
            Get
                Return Me.bloqueadoField
            End Get
            Set
                Me.bloqueadoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cliente() As String
            Get
                Return Me.clienteField
            End Get
            Set
                Me.clienteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cnpj_cpf() As String
            Get
                Return Me.cnpj_cpfField
            End Get
            Set
                Me.cnpj_cpfField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ie_rg() As String
            Get
                Return Me.ie_rgField
            End Get
            Set
                Me.ie_rgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property data_nasc() As String
            Get
                Return Me.data_nascField
            End Get
            Set
                Me.data_nascField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property data_cadastro() As String
            Get
                Return Me.data_cadastroField
            End Get
            Set
                Me.data_cadastroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property email() As String
            Get
                Return Me.emailField
            End Get
            Set
                Me.emailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property observacao() As String
            Get
                Return Me.observacaoField
            End Get
            Set
                Me.observacaoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property logradouro() As String
            Get
                Return Me.logradouroField
            End Get
            Set
                Me.logradouroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property numero() As String
            Get
                Return Me.numeroField
            End Get
            Set
                Me.numeroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bairro() As String
            Get
                Return Me.bairroField
            End Get
            Set
                Me.bairroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property complemento() As String
            Get
                Return Me.complementoField
            End Get
            Set
                Me.complementoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cep() As String
            Get
                Return Me.cepField
            End Get
            Set
                Me.cepField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cidade() As String
            Get
                Return Me.cidadeField
            End Get
            Set
                Me.cidadeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property uf() As String
            Get
                Return Me.ufField
            End Get
            Set
                Me.ufField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property telefone() As String
            Get
                Return Me.telefoneField
            End Get
            Set
                Me.telefoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property fax() As String
            Get
                Return Me.faxField
            End Get
            Set
                Me.faxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property celular() As String
            Get
                Return Me.celularField
            End Get
            Set
                Me.celularField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sexo() As String
            Get
                Return Me.sexoField
            End Get
            Set
                Me.sexoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property apelido() As String
            Get
                Return Me.apelidoField
            End Get
            Set
                Me.apelidoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.virtualjoias.com/webservice/v2/ws_servidor.php")>  _
    Partial Public Class ClienteAvancado
        
        Private id_pedidoField As String
        
        Private id_clienteField As String
        
        Private paisField As String
        
        Private revendaField As String
        
        Private tipo_pessoaField As String
        
        Private bloqueadoField As String
        
        Private clienteField As String
        
        Private cnpj_cpfField As String
        
        Private ie_rgField As String
        
        Private data_nascField As String
        
        Private data_cadastroField As String
        
        Private emailField As String
        
        Private observacaoField As String
        
        Private logradouroField As String
        
        Private numeroField As String
        
        Private bairroField As String
        
        Private complementoField As String
        
        Private cepField As String
        
        Private cidadeField As String
        
        Private ufField As String
        
        Private telefoneField As String
        
        Private faxField As String
        
        Private celularField As String
        
        Private sexoField As String
        
        Private statusField As String
        
        Private apelidoField As String
        
        Private desconto_revendaField As String
        
        Private enderecosField() As EnderecoCliente
        
        Private dados_extrasField() As DadoExtra
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_pedido() As String
            Get
                Return Me.id_pedidoField
            End Get
            Set
                Me.id_pedidoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_cliente() As String
            Get
                Return Me.id_clienteField
            End Get
            Set
                Me.id_clienteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property pais() As String
            Get
                Return Me.paisField
            End Get
            Set
                Me.paisField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property revenda() As String
            Get
                Return Me.revendaField
            End Get
            Set
                Me.revendaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property tipo_pessoa() As String
            Get
                Return Me.tipo_pessoaField
            End Get
            Set
                Me.tipo_pessoaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bloqueado() As String
            Get
                Return Me.bloqueadoField
            End Get
            Set
                Me.bloqueadoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cliente() As String
            Get
                Return Me.clienteField
            End Get
            Set
                Me.clienteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cnpj_cpf() As String
            Get
                Return Me.cnpj_cpfField
            End Get
            Set
                Me.cnpj_cpfField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ie_rg() As String
            Get
                Return Me.ie_rgField
            End Get
            Set
                Me.ie_rgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property data_nasc() As String
            Get
                Return Me.data_nascField
            End Get
            Set
                Me.data_nascField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property data_cadastro() As String
            Get
                Return Me.data_cadastroField
            End Get
            Set
                Me.data_cadastroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property email() As String
            Get
                Return Me.emailField
            End Get
            Set
                Me.emailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property observacao() As String
            Get
                Return Me.observacaoField
            End Get
            Set
                Me.observacaoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property logradouro() As String
            Get
                Return Me.logradouroField
            End Get
            Set
                Me.logradouroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property numero() As String
            Get
                Return Me.numeroField
            End Get
            Set
                Me.numeroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bairro() As String
            Get
                Return Me.bairroField
            End Get
            Set
                Me.bairroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property complemento() As String
            Get
                Return Me.complementoField
            End Get
            Set
                Me.complementoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cep() As String
            Get
                Return Me.cepField
            End Get
            Set
                Me.cepField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cidade() As String
            Get
                Return Me.cidadeField
            End Get
            Set
                Me.cidadeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property uf() As String
            Get
                Return Me.ufField
            End Get
            Set
                Me.ufField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property telefone() As String
            Get
                Return Me.telefoneField
            End Get
            Set
                Me.telefoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property fax() As String
            Get
                Return Me.faxField
            End Get
            Set
                Me.faxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property celular() As String
            Get
                Return Me.celularField
            End Get
            Set
                Me.celularField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sexo() As String
            Get
                Return Me.sexoField
            End Get
            Set
                Me.sexoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property apelido() As String
            Get
                Return Me.apelidoField
            End Get
            Set
                Me.apelidoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property desconto_revenda() As String
            Get
                Return Me.desconto_revendaField
            End Get
            Set
                Me.desconto_revendaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property enderecos() As EnderecoCliente()
            Get
                Return Me.enderecosField
            End Get
            Set
                Me.enderecosField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dados_extras() As DadoExtra()
            Get
                Return Me.dados_extrasField
            End Get
            Set
                Me.dados_extrasField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.virtualjoias.com/webservice/v2/ws_servidor.php")>  _
    Partial Public Class Cliente
        
        Private id_pedidoField As String
        
        Private id_clienteField As String
        
        Private paisField As String
        
        Private revendaField As String
        
        Private tipo_pessoaField As String
        
        Private bloqueadoField As String
        
        Private clienteField As String
        
        Private cnpj_cpfField As String
        
        Private ie_rgField As String
        
        Private data_nascField As String
        
        Private data_cadastroField As String
        
        Private emailField As String
        
        Private observacaoField As String
        
        Private logradouroField As String
        
        Private numeroField As String
        
        Private bairroField As String
        
        Private complementoField As String
        
        Private cepField As String
        
        Private cidadeField As String
        
        Private ufField As String
        
        Private telefoneField As String
        
        Private faxField As String
        
        Private celularField As String
        
        Private sexoField As String
        
        Private statusField As String
        
        Private apelidoField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_pedido() As String
            Get
                Return Me.id_pedidoField
            End Get
            Set
                Me.id_pedidoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_cliente() As String
            Get
                Return Me.id_clienteField
            End Get
            Set
                Me.id_clienteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property pais() As String
            Get
                Return Me.paisField
            End Get
            Set
                Me.paisField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property revenda() As String
            Get
                Return Me.revendaField
            End Get
            Set
                Me.revendaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property tipo_pessoa() As String
            Get
                Return Me.tipo_pessoaField
            End Get
            Set
                Me.tipo_pessoaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bloqueado() As String
            Get
                Return Me.bloqueadoField
            End Get
            Set
                Me.bloqueadoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cliente() As String
            Get
                Return Me.clienteField
            End Get
            Set
                Me.clienteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cnpj_cpf() As String
            Get
                Return Me.cnpj_cpfField
            End Get
            Set
                Me.cnpj_cpfField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ie_rg() As String
            Get
                Return Me.ie_rgField
            End Get
            Set
                Me.ie_rgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property data_nasc() As String
            Get
                Return Me.data_nascField
            End Get
            Set
                Me.data_nascField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property data_cadastro() As String
            Get
                Return Me.data_cadastroField
            End Get
            Set
                Me.data_cadastroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property email() As String
            Get
                Return Me.emailField
            End Get
            Set
                Me.emailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property observacao() As String
            Get
                Return Me.observacaoField
            End Get
            Set
                Me.observacaoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property logradouro() As String
            Get
                Return Me.logradouroField
            End Get
            Set
                Me.logradouroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property numero() As String
            Get
                Return Me.numeroField
            End Get
            Set
                Me.numeroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bairro() As String
            Get
                Return Me.bairroField
            End Get
            Set
                Me.bairroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property complemento() As String
            Get
                Return Me.complementoField
            End Get
            Set
                Me.complementoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cep() As String
            Get
                Return Me.cepField
            End Get
            Set
                Me.cepField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cidade() As String
            Get
                Return Me.cidadeField
            End Get
            Set
                Me.cidadeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property uf() As String
            Get
                Return Me.ufField
            End Get
            Set
                Me.ufField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property telefone() As String
            Get
                Return Me.telefoneField
            End Get
            Set
                Me.telefoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property fax() As String
            Get
                Return Me.faxField
            End Get
            Set
                Me.faxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property celular() As String
            Get
                Return Me.celularField
            End Get
            Set
                Me.celularField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sexo() As String
            Get
                Return Me.sexoField
            End Get
            Set
                Me.sexoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property apelido() As String
            Get
                Return Me.apelidoField
            End Get
            Set
                Me.apelidoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.virtualjoias.com/webservice/v2/ws_servidor.php")>  _
    Partial Public Class Endereco
        
        Private tipoField As String
        
        Private descricaoField As String
        
        Private destinatarioField As String
        
        Private tipo_entregaField As String
        
        Private logradouroField As String
        
        Private numeroField As String
        
        Private bairroField As String
        
        Private complementoField As String
        
        Private cidadeField As String
        
        Private estadoField As String
        
        Private cepField As String
        
        Private paisField As String
        
        '''<remarks/>
        Public Property tipo() As String
            Get
                Return Me.tipoField
            End Get
            Set
                Me.tipoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property descricao() As String
            Get
                Return Me.descricaoField
            End Get
            Set
                Me.descricaoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property destinatario() As String
            Get
                Return Me.destinatarioField
            End Get
            Set
                Me.destinatarioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property tipo_entrega() As String
            Get
                Return Me.tipo_entregaField
            End Get
            Set
                Me.tipo_entregaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property logradouro() As String
            Get
                Return Me.logradouroField
            End Get
            Set
                Me.logradouroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property numero() As String
            Get
                Return Me.numeroField
            End Get
            Set
                Me.numeroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bairro() As String
            Get
                Return Me.bairroField
            End Get
            Set
                Me.bairroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property complemento() As String
            Get
                Return Me.complementoField
            End Get
            Set
                Me.complementoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cidade() As String
            Get
                Return Me.cidadeField
            End Get
            Set
                Me.cidadeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property estado() As String
            Get
                Return Me.estadoField
            End Get
            Set
                Me.estadoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property cep() As String
            Get
                Return Me.cepField
            End Get
            Set
                Me.cepField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property pais() As String
            Get
                Return Me.paisField
            End Get
            Set
                Me.paisField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.virtualjoias.com/webservice/v2/ws_servidor.php")>  _
    Partial Public Class EnderecoClienteComId
        
        Private id_enderecoField As Integer
        
        Private tipoField As String
        
        Private descricaoField As String
        
        Private tipo_entregaField As String
        
        Private destinatarioField As String
        
        Private logradouroField As String
        
        Private numeroField As String
        
        Private complementoField As String
        
        Private bairroField As String
        
        Private cidadeField As String
        
        Private ufField As String
        
        Private cepField As String
        
        Private paisField As String
        
        '''<remarks/>
        Public Property id_endereco() As Integer
            Get
                Return Me.id_enderecoField
            End Get
            Set
                Me.id_enderecoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property tipo() As String
            Get
                Return Me.tipoField
            End Get
            Set
                Me.tipoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property descricao() As String
            Get
                Return Me.descricaoField
            End Get
            Set
                Me.descricaoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property tipo_entrega() As String
            Get
                Return Me.tipo_entregaField
            End Get
            Set
                Me.tipo_entregaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property destinatario() As String
            Get
                Return Me.destinatarioField
            End Get
            Set
                Me.destinatarioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property logradouro() As String
            Get
                Return Me.logradouroField
            End Get
            Set
                Me.logradouroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property numero() As String
            Get
                Return Me.numeroField
            End Get
            Set
                Me.numeroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property complemento() As String
            Get
                Return Me.complementoField
            End Get
            Set
                Me.complementoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bairro() As String
            Get
                Return Me.bairroField
            End Get
            Set
                Me.bairroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cidade() As String
            Get
                Return Me.cidadeField
            End Get
            Set
                Me.cidadeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property uf() As String
            Get
                Return Me.ufField
            End Get
            Set
                Me.ufField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cep() As String
            Get
                Return Me.cepField
            End Get
            Set
                Me.cepField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property pais() As String
            Get
                Return Me.paisField
            End Get
            Set
                Me.paisField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.virtualjoias.com/webservice/v2/ws_servidor.php")>  _
    Partial Public Class Categoria
        
        Private id_categoriaField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")>  _
        Public Property id_categoria() As String
            Get
                Return Me.id_categoriaField
            End Get
            Set
                Me.id_categoriaField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://www.virtualjoias.com/webservice/v2/ws_servidor.php")>  _
    Partial Public Class InformacaoSimples
        
        Private tipoNomeField As String
        
        Private textoField As String
        
        '''<remarks/>
        Public Property TipoNome() As String
            Get
                Return Me.tipoNomeField
            End Get
            Set
                Me.tipoNomeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Texto() As String
            Get
                Return Me.textoField
            End Get
            Set
                Me.textoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSCadastraPerfilCompletedEventHandler(ByVal sender As Object, ByVal e As fWSCadastraPerfilCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSCadastraPerfilCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_perfil() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSCadastraCategoriaCompletedEventHandler(ByVal sender As Object, ByVal e As fWSCadastraCategoriaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSCadastraCategoriaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_categoria() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSCadastraMarcaCompletedEventHandler(ByVal sender As Object, ByVal e As fWSCadastraMarcaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSCadastraMarcaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_marca() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSCadastraProdutoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSCadastraProdutoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSCadastraProdutoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_produto() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSImportaProdutoPorCodReferenciaCompletedEventHandler(ByVal sender As Object, ByVal e As fWSImportaProdutoPorCodReferenciaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSImportaProdutoPorCodReferenciaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property cod_referencia() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_marca() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property descricao() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property descricao_curta() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(4),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property custo() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(5),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property preco() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(6),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property peso_cubico() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(7),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property peso() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(8),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property disponivel() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(9),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property informacao() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(10),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property garantia() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(11),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property disponibilidade() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(12),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property estoque() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(13),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property estoque_minimo() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(14),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property destaque() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(15),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property data_cadastro() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(16),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property info_preco() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(17),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSCadastraProdutoSimplesCompletedEventHandler(ByVal sender As Object, ByVal e As fWSCadastraProdutoSimplesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSCadastraProdutoSimplesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_produto() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSCadastraCaracteristicaCompletedEventHandler(ByVal sender As Object, ByVal e As fWSCadastraCaracteristicaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSCadastraCaracteristicaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_caracteristica() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSRelacionaCategPerfilCompletedEventHandler(ByVal sender As Object, ByVal e As fWSRelacionaCategPerfilCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSRelacionaCategPerfilCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property chaves() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSRelacionaCaractPerfilCompletedEventHandler(ByVal sender As Object, ByVal e As fWSRelacionaCaractPerfilCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSRelacionaCaractPerfilCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property chaves() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSRelacionaCategProdutoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSRelacionaCategProdutoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSRelacionaCategProdutoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property chaves() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSCadastraDadosProdutoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSCadastraDadosProdutoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSCadastraDadosProdutoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property chaves() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSCadastraGradeProdutoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSCadastraGradeProdutoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSCadastraGradeProdutoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_grade() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSCadastraVariaProdutosCompletedEventHandler(ByVal sender As Object, ByVal e As fWSCadastraVariaProdutosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSCadastraVariaProdutosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property chaves() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSCadastraPromocaoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSCadastraPromocaoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSCadastraPromocaoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_promocao() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSRelacionaPromoProdutoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSRelacionaPromoProdutoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSRelacionaPromoProdutoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property chaves() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSCadastraClienteCompletedEventHandler(ByVal sender As Object, ByVal e As fWSCadastraClienteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSCadastraClienteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_cliente() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSConsultaEnderecosClienteCompletedEventHandler(ByVal sender As Object, ByVal e As fWSConsultaEnderecosClienteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSConsultaEnderecosClienteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_cliente() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property enderecos() As EnderecoClienteComId()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),EnderecoClienteComId())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSExcluiEnderecoClienteCompletedEventHandler(ByVal sender As Object, ByVal e As fWSExcluiEnderecoClienteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSExcluiEnderecoClienteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_cliente() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_endereco() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSCadastraClienteAvancadoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSCadastraClienteAvancadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSCadastraClienteAvancadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_cliente() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSCadastraContatosClienteCompletedEventHandler(ByVal sender As Object, ByVal e As fWSCadastraContatosClienteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSCadastraContatosClienteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSCadastraEnderecoClienteCompletedEventHandler(ByVal sender As Object, ByVal e As fWSCadastraEnderecoClienteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSCadastraEnderecoClienteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSCadastraListaEnderecoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSCadastraListaEnderecoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSCadastraListaEnderecoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_endereco() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSCadastraEnderecoClienteAvancadoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSCadastraEnderecoClienteAvancadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSCadastraEnderecoClienteAvancadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSImportaClientesCompletedEventHandler(ByVal sender As Object, ByVal e As fWSImportaClientesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSImportaClientesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Cliente()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Cliente())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSImportaClientesAvancadoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSImportaClientesAvancadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSImportaClientesAvancadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ClienteAvancado()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ClienteAvancado())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSImportaClientesComPedidoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSImportaClientesComPedidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSImportaClientesComPedidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Cliente()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Cliente())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSImportaClientesComPedidoAvancadoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSImportaClientesComPedidoAvancadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSImportaClientesComPedidoAvancadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ClienteAvancado()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ClienteAvancado())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSImportaClientesSemDadosPedidoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSImportaClientesSemDadosPedidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSImportaClientesSemDadosPedidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ClienteSemDadosPedido()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ClienteSemDadosPedido())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSImportaClientesSemDadosPedidoAvancadoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSImportaClientesSemDadosPedidoAvancadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSImportaClientesSemDadosPedidoAvancadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ClienteSemDadosPedidoAvancado()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ClienteSemDadosPedidoAvancado())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSImportaClientePorIdCompletedEventHandler(ByVal sender As Object, ByVal e As fWSImportaClientePorIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSImportaClientePorIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Cliente()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Cliente())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSImportaClientePorIdAvancadoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSImportaClientePorIdAvancadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSImportaClientePorIdAvancadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ClienteAvancado()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ClienteAvancado())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSImportaClientePorEmailCompletedEventHandler(ByVal sender As Object, ByVal e As fWSImportaClientePorEmailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSImportaClientePorEmailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Cliente()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Cliente())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSImportaClientePorEmailAvancadoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSImportaClientePorEmailAvancadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSImportaClientePorEmailAvancadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ClienteAvancado()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ClienteAvancado())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSImportaClientePorCPFCompletedEventHandler(ByVal sender As Object, ByVal e As fWSImportaClientePorCPFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSImportaClientePorCPFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Cliente()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Cliente())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSImportaClientePorCPFAvancadoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSImportaClientePorCPFAvancadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSImportaClientePorCPFAvancadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ClienteAvancado()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ClienteAvancado())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSImportaClientePorCNPJCompletedEventHandler(ByVal sender As Object, ByVal e As fWSImportaClientePorCNPJCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSImportaClientePorCNPJCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Cliente()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Cliente())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSImportaClientePorCNPJAvancadoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSImportaClientePorCNPJAvancadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSImportaClientePorCNPJAvancadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ClienteAvancado()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ClienteAvancado())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSImportaClientePorPedidoAvancadoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSImportaClientePorPedidoAvancadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSImportaClientePorPedidoAvancadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ClienteAvancado()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ClienteAvancado())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSImportaPedidosCompletedEventHandler(ByVal sender As Object, ByVal e As fWSImportaPedidosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSImportaPedidosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Pedido()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Pedido())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSImportaPedidoPorIdCompletedEventHandler(ByVal sender As Object, ByVal e As fWSImportaPedidoPorIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSImportaPedidoPorIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Pedido
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Pedido)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSImportaItensPedidosCompletedEventHandler(ByVal sender As Object, ByVal e As fWSImportaItensPedidosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSImportaItensPedidosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Item_pedido()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Item_pedido())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSImportaItensPedidoPorIdCompletedEventHandler(ByVal sender As Object, ByVal e As fWSImportaItensPedidoPorIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSImportaItensPedidoPorIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Item_pedido()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Item_pedido())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSImportaParcelasPedidosCompletedEventHandler(ByVal sender As Object, ByVal e As fWSImportaParcelasPedidosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSImportaParcelasPedidosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Parcela_pedido()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Parcela_pedido())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSImportaParcelasPedidoPorIdCompletedEventHandler(ByVal sender As Object, ByVal e As fWSImportaParcelasPedidoPorIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSImportaParcelasPedidoPorIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Parcela_pedido()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Parcela_pedido())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSAtualizaPrecoProdutoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSAtualizaPrecoProdutoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSAtualizaPrecoProdutoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_produto() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSAtualizaProdutoDisponivelCompletedEventHandler(ByVal sender As Object, ByVal e As fWSAtualizaProdutoDisponivelCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSAtualizaProdutoDisponivelCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_produto() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSAtualizaEstoqueProdutoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSAtualizaEstoqueProdutoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSAtualizaEstoqueProdutoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_produto() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSAtualizaStatusPedidosCompletedEventHandler(ByVal sender As Object, ByVal e As fWSAtualizaStatusPedidosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSAtualizaStatusPedidosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_pedido() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSChavesLojasCompletedEventHandler(ByVal sender As Object, ByVal e As fWSChavesLojasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSChavesLojasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Chaves()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Chaves())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSAtualizaListaToDoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSAtualizaListaToDoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSAtualizaListaToDoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSConsultaStatusPedidoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSConsultaStatusPedidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSConsultaStatusPedidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_pedido() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property status_pedido() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSConcultaStatusPedidoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSConcultaStatusPedidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSConcultaStatusPedidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_pedido() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property status_pedido() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSCadastraCompreJuntoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSCadastraCompreJuntoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSCadastraCompreJuntoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_produto() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_compre_junto() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSCadastraCompreJuntoAvancadoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSCadastraCompreJuntoAvancadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSCadastraCompreJuntoAvancadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_produto() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_compre_junto() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSRelacionaProdutoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSRelacionaProdutoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSRelacionaProdutoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_produto() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_produtos_relacionados() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSCadastraListaDesejosCompletedEventHandler(ByVal sender As Object, ByVal e As fWSCadastraListaDesejosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSCadastraListaDesejosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSCadastraListaProdutosCompletedEventHandler(ByVal sender As Object, ByVal e As fWSCadastraListaProdutosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSCadastraListaProdutosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSExcluiListaDesejosCompletedEventHandler(ByVal sender As Object, ByVal e As fWSExcluiListaDesejosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSExcluiListaDesejosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSExcluirProdutoListaCompletedEventHandler(ByVal sender As Object, ByVal e As fWSExcluirProdutoListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSExcluirProdutoListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSExportaPagamentosPedidoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSExportaPagamentosPedidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSExportaPagamentosPedidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Pagamentos()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Pagamentos())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSBuscavendaListasCompletedEventHandler(ByVal sender As Object, ByVal e As fWSBuscavendaListasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSBuscavendaListasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DadosBuscaListaVendas()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DadosBuscaListaVendas())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSBuscaListasCompletedEventHandler(ByVal sender As Object, ByVal e As fWSBuscaListasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSBuscaListasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DadosBuscaLista()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DadosBuscaLista())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSImportaListasDesejoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSImportaListasDesejoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSImportaListasDesejoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DadosBuscaLista()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DadosBuscaLista())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSDadosRecursosExtrasCompletedEventHandler(ByVal sender As Object, ByVal e As fWSDadosRecursosExtrasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSDadosRecursosExtrasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_registro() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property entidade() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSRelacionaClientePerfilCompletedEventHandler(ByVal sender As Object, ByVal e As fWSRelacionaClientePerfilCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSRelacionaClientePerfilCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSCadastraListaPrecoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSCadastraListaPrecoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSCadastraListaPrecoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_lista() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSCadastraCamposGrupoImpostoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSCadastraCamposGrupoImpostoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSCadastraCamposGrupoImpostoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_campo() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSCadastraGrupoImpostoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSCadastraGrupoImpostoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSCadastraGrupoImpostoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property id_grupo() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property status() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSRelacionaImpostoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSRelacionaImpostoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSRelacionaImpostoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property grupo_id1() As RelacionamentoImposto()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),RelacionamentoImposto())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSConvertePedidoComissaoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSConvertePedidoComissaoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSConvertePedidoComissaoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_pedido() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSImportaGradePorCodReferenciaCompletedEventHandler(ByVal sender As Object, ByVal e As fWSImportaGradePorCodReferenciaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSImportaGradePorCodReferenciaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_produto() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub fWSImportaCategoriaPorDescricaoCompletedEventHandler(ByVal sender As Object, ByVal e As fWSImportaCategoriaPorDescricaoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fWSImportaCategoriaPorDescricaoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property id_categoriapai() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
End Namespace
