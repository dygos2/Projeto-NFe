'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.237
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.237.
'
Namespace NotasWs
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="FN4NotasServiceSoap", [Namespace]:="http://fisconet4.com/")>  _
    Partial Public Class FN4NotasService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private obterListaDeNotasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private obterUltimasAtualizacoesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private buscarNotasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private obterNotaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private cancelarNotaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private solicitarImpressaoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private solicitarInutilizacaoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private solicitarReenvioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AlterarEmailEReenviarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private obterNotasASeremInutilizadasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.FN4EntradaTxtCtl.My.MySettings.Default.FN4EntradaTxtCtl_NotasWs_FN4NotasService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event obterListaDeNotasCompleted As obterListaDeNotasCompletedEventHandler
        
        '''<remarks/>
        Public Event obterUltimasAtualizacoesCompleted As obterUltimasAtualizacoesCompletedEventHandler
        
        '''<remarks/>
        Public Event buscarNotasCompleted As buscarNotasCompletedEventHandler
        
        '''<remarks/>
        Public Event obterNotaCompleted As obterNotaCompletedEventHandler
        
        '''<remarks/>
        Public Event cancelarNotaCompleted As cancelarNotaCompletedEventHandler
        
        '''<remarks/>
        Public Event solicitarImpressaoCompleted As solicitarImpressaoCompletedEventHandler
        
        '''<remarks/>
        Public Event solicitarInutilizacaoCompleted As solicitarInutilizacaoCompletedEventHandler
        
        '''<remarks/>
        Public Event solicitarReenvioCompleted As solicitarReenvioCompletedEventHandler
        
        '''<remarks/>
        Public Event AlterarEmailEReenviarCompleted As AlterarEmailEReenviarCompletedEventHandler
        
        '''<remarks/>
        Public Event obterNotasASeremInutilizadasCompleted As obterNotasASeremInutilizadasCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fisconet4.com/obterListaDeNotas", RequestNamespace:="http://fisconet4.com/", ResponseNamespace:="http://fisconet4.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function obterListaDeNotas(ByVal status As String, ByVal registroInicial As Integer, ByVal registrosPorPagina As Integer, ByVal cnpj As String, ByVal token As String) As listaDeNotasVO
            Dim results() As Object = Me.Invoke("obterListaDeNotas", New Object() {status, registroInicial, registrosPorPagina, cnpj, token})
            Return CType(results(0),listaDeNotasVO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub obterListaDeNotasAsync(ByVal status As String, ByVal registroInicial As Integer, ByVal registrosPorPagina As Integer, ByVal cnpj As String, ByVal token As String)
            Me.obterListaDeNotasAsync(status, registroInicial, registrosPorPagina, cnpj, token, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub obterListaDeNotasAsync(ByVal status As String, ByVal registroInicial As Integer, ByVal registrosPorPagina As Integer, ByVal cnpj As String, ByVal token As String, ByVal userState As Object)
            If (Me.obterListaDeNotasOperationCompleted Is Nothing) Then
                Me.obterListaDeNotasOperationCompleted = AddressOf Me.OnobterListaDeNotasOperationCompleted
            End If
            Me.InvokeAsync("obterListaDeNotas", New Object() {status, registroInicial, registrosPorPagina, cnpj, token}, Me.obterListaDeNotasOperationCompleted, userState)
        End Sub
        
        Private Sub OnobterListaDeNotasOperationCompleted(ByVal arg As Object)
            If (Not (Me.obterListaDeNotasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent obterListaDeNotasCompleted(Me, New obterListaDeNotasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fisconet4.com/obterUltimasAtualizacoes", RequestNamespace:="http://fisconet4.com/", ResponseNamespace:="http://fisconet4.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function obterUltimasAtualizacoes(ByVal registroInicial As Integer, ByVal registrosPorPagina As Integer, ByVal cnpj As String, ByVal token As String) As atualizacaoVO()
            Dim results() As Object = Me.Invoke("obterUltimasAtualizacoes", New Object() {registroInicial, registrosPorPagina, cnpj, token})
            Return CType(results(0),atualizacaoVO())
        End Function
        
        '''<remarks/>
        Public Overloads Sub obterUltimasAtualizacoesAsync(ByVal registroInicial As Integer, ByVal registrosPorPagina As Integer, ByVal cnpj As String, ByVal token As String)
            Me.obterUltimasAtualizacoesAsync(registroInicial, registrosPorPagina, cnpj, token, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub obterUltimasAtualizacoesAsync(ByVal registroInicial As Integer, ByVal registrosPorPagina As Integer, ByVal cnpj As String, ByVal token As String, ByVal userState As Object)
            If (Me.obterUltimasAtualizacoesOperationCompleted Is Nothing) Then
                Me.obterUltimasAtualizacoesOperationCompleted = AddressOf Me.OnobterUltimasAtualizacoesOperationCompleted
            End If
            Me.InvokeAsync("obterUltimasAtualizacoes", New Object() {registroInicial, registrosPorPagina, cnpj, token}, Me.obterUltimasAtualizacoesOperationCompleted, userState)
        End Sub
        
        Private Sub OnobterUltimasAtualizacoesOperationCompleted(ByVal arg As Object)
            If (Not (Me.obterUltimasAtualizacoesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent obterUltimasAtualizacoesCompleted(Me, New obterUltimasAtualizacoesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fisconet4.com/buscarNotas", RequestNamespace:="http://fisconet4.com/", ResponseNamespace:="http://fisconet4.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function buscarNotas(ByVal tipoDeBusca As Integer, ByVal parametro As String, ByVal registroInicial As Integer, ByVal registrosPorPagina As Integer, ByVal cnpj As String, ByVal token As String) As listaDeNotasVO
            Dim results() As Object = Me.Invoke("buscarNotas", New Object() {tipoDeBusca, parametro, registroInicial, registrosPorPagina, cnpj, token})
            Return CType(results(0),listaDeNotasVO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub buscarNotasAsync(ByVal tipoDeBusca As Integer, ByVal parametro As String, ByVal registroInicial As Integer, ByVal registrosPorPagina As Integer, ByVal cnpj As String, ByVal token As String)
            Me.buscarNotasAsync(tipoDeBusca, parametro, registroInicial, registrosPorPagina, cnpj, token, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub buscarNotasAsync(ByVal tipoDeBusca As Integer, ByVal parametro As String, ByVal registroInicial As Integer, ByVal registrosPorPagina As Integer, ByVal cnpj As String, ByVal token As String, ByVal userState As Object)
            If (Me.buscarNotasOperationCompleted Is Nothing) Then
                Me.buscarNotasOperationCompleted = AddressOf Me.OnbuscarNotasOperationCompleted
            End If
            Me.InvokeAsync("buscarNotas", New Object() {tipoDeBusca, parametro, registroInicial, registrosPorPagina, cnpj, token}, Me.buscarNotasOperationCompleted, userState)
        End Sub
        
        Private Sub OnbuscarNotasOperationCompleted(ByVal arg As Object)
            If (Not (Me.buscarNotasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent buscarNotasCompleted(Me, New buscarNotasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fisconet4.com/obterNota", RequestNamespace:="http://fisconet4.com/", ResponseNamespace:="http://fisconet4.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function obterNota(ByVal nNF As Integer, ByVal CNPJ As String, ByVal serie As Integer, ByVal token As String) As notaVO
            Dim results() As Object = Me.Invoke("obterNota", New Object() {nNF, CNPJ, serie, token})
            Return CType(results(0),notaVO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub obterNotaAsync(ByVal nNF As Integer, ByVal CNPJ As String, ByVal serie As Integer, ByVal token As String)
            Me.obterNotaAsync(nNF, CNPJ, serie, token, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub obterNotaAsync(ByVal nNF As Integer, ByVal CNPJ As String, ByVal serie As Integer, ByVal token As String, ByVal userState As Object)
            If (Me.obterNotaOperationCompleted Is Nothing) Then
                Me.obterNotaOperationCompleted = AddressOf Me.OnobterNotaOperationCompleted
            End If
            Me.InvokeAsync("obterNota", New Object() {nNF, CNPJ, serie, token}, Me.obterNotaOperationCompleted, userState)
        End Sub
        
        Private Sub OnobterNotaOperationCompleted(ByVal arg As Object)
            If (Not (Me.obterNotaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent obterNotaCompleted(Me, New obterNotaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fisconet4.com/cancelarNota", RequestNamespace:="http://fisconet4.com/", ResponseNamespace:="http://fisconet4.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function cancelarNota(ByVal nNf As Integer, ByVal serie As Integer, ByVal justificativa As String, ByVal CNPJ As String, ByVal token As String) As String
            Dim results() As Object = Me.Invoke("cancelarNota", New Object() {nNf, serie, justificativa, CNPJ, token})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub cancelarNotaAsync(ByVal nNf As Integer, ByVal serie As Integer, ByVal justificativa As String, ByVal CNPJ As String, ByVal token As String)
            Me.cancelarNotaAsync(nNf, serie, justificativa, CNPJ, token, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub cancelarNotaAsync(ByVal nNf As Integer, ByVal serie As Integer, ByVal justificativa As String, ByVal CNPJ As String, ByVal token As String, ByVal userState As Object)
            If (Me.cancelarNotaOperationCompleted Is Nothing) Then
                Me.cancelarNotaOperationCompleted = AddressOf Me.OncancelarNotaOperationCompleted
            End If
            Me.InvokeAsync("cancelarNota", New Object() {nNf, serie, justificativa, CNPJ, token}, Me.cancelarNotaOperationCompleted, userState)
        End Sub
        
        Private Sub OncancelarNotaOperationCompleted(ByVal arg As Object)
            If (Not (Me.cancelarNotaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent cancelarNotaCompleted(Me, New cancelarNotaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fisconet4.com/solicitarImpressao", RequestNamespace:="http://fisconet4.com/", ResponseNamespace:="http://fisconet4.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function solicitarImpressao(ByVal nNf As Integer, ByVal serie As Integer, ByVal CNPJ As String, ByVal token As String, ByVal quantidade As Integer) As Integer
            Dim results() As Object = Me.Invoke("solicitarImpressao", New Object() {nNf, serie, CNPJ, token, quantidade})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub solicitarImpressaoAsync(ByVal nNf As Integer, ByVal serie As Integer, ByVal CNPJ As String, ByVal token As String, ByVal quantidade As Integer)
            Me.solicitarImpressaoAsync(nNf, serie, CNPJ, token, quantidade, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub solicitarImpressaoAsync(ByVal nNf As Integer, ByVal serie As Integer, ByVal CNPJ As String, ByVal token As String, ByVal quantidade As Integer, ByVal userState As Object)
            If (Me.solicitarImpressaoOperationCompleted Is Nothing) Then
                Me.solicitarImpressaoOperationCompleted = AddressOf Me.OnsolicitarImpressaoOperationCompleted
            End If
            Me.InvokeAsync("solicitarImpressao", New Object() {nNf, serie, CNPJ, token, quantidade}, Me.solicitarImpressaoOperationCompleted, userState)
        End Sub
        
        Private Sub OnsolicitarImpressaoOperationCompleted(ByVal arg As Object)
            If (Not (Me.solicitarImpressaoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent solicitarImpressaoCompleted(Me, New solicitarImpressaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fisconet4.com/solicitarInutilizacao", RequestNamespace:="http://fisconet4.com/", ResponseNamespace:="http://fisconet4.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function solicitarInutilizacao(ByVal inicio As Integer, ByVal fim As Integer, ByVal justificativa As String, ByVal CNPJ As String, ByVal token As String, ByVal serie As String) As String
            Dim results() As Object = Me.Invoke("solicitarInutilizacao", New Object() {inicio, fim, justificativa, CNPJ, token, serie})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub solicitarInutilizacaoAsync(ByVal inicio As Integer, ByVal fim As Integer, ByVal justificativa As String, ByVal CNPJ As String, ByVal token As String, ByVal serie As String)
            Me.solicitarInutilizacaoAsync(inicio, fim, justificativa, CNPJ, token, serie, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub solicitarInutilizacaoAsync(ByVal inicio As Integer, ByVal fim As Integer, ByVal justificativa As String, ByVal CNPJ As String, ByVal token As String, ByVal serie As String, ByVal userState As Object)
            If (Me.solicitarInutilizacaoOperationCompleted Is Nothing) Then
                Me.solicitarInutilizacaoOperationCompleted = AddressOf Me.OnsolicitarInutilizacaoOperationCompleted
            End If
            Me.InvokeAsync("solicitarInutilizacao", New Object() {inicio, fim, justificativa, CNPJ, token, serie}, Me.solicitarInutilizacaoOperationCompleted, userState)
        End Sub
        
        Private Sub OnsolicitarInutilizacaoOperationCompleted(ByVal arg As Object)
            If (Not (Me.solicitarInutilizacaoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent solicitarInutilizacaoCompleted(Me, New solicitarInutilizacaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fisconet4.com/solicitarReenvio", RequestNamespace:="http://fisconet4.com/", ResponseNamespace:="http://fisconet4.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function solicitarReenvio(ByVal nNF As Integer, ByVal CNPJ As String, ByVal serie As Integer, ByVal token As String) As String
            Dim results() As Object = Me.Invoke("solicitarReenvio", New Object() {nNF, CNPJ, serie, token})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub solicitarReenvioAsync(ByVal nNF As Integer, ByVal CNPJ As String, ByVal serie As Integer, ByVal token As String)
            Me.solicitarReenvioAsync(nNF, CNPJ, serie, token, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub solicitarReenvioAsync(ByVal nNF As Integer, ByVal CNPJ As String, ByVal serie As Integer, ByVal token As String, ByVal userState As Object)
            If (Me.solicitarReenvioOperationCompleted Is Nothing) Then
                Me.solicitarReenvioOperationCompleted = AddressOf Me.OnsolicitarReenvioOperationCompleted
            End If
            Me.InvokeAsync("solicitarReenvio", New Object() {nNF, CNPJ, serie, token}, Me.solicitarReenvioOperationCompleted, userState)
        End Sub
        
        Private Sub OnsolicitarReenvioOperationCompleted(ByVal arg As Object)
            If (Not (Me.solicitarReenvioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent solicitarReenvioCompleted(Me, New solicitarReenvioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fisconet4.com/AlterarEmailEReenviar", RequestNamespace:="http://fisconet4.com/", ResponseNamespace:="http://fisconet4.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AlterarEmailEReenviar(ByVal cnpj As String, ByVal token As String, ByVal nnf As Integer, ByVal serie As Integer, ByVal novoEmail As String) As Integer
            Dim results() As Object = Me.Invoke("AlterarEmailEReenviar", New Object() {cnpj, token, nnf, serie, novoEmail})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AlterarEmailEReenviarAsync(ByVal cnpj As String, ByVal token As String, ByVal nnf As Integer, ByVal serie As Integer, ByVal novoEmail As String)
            Me.AlterarEmailEReenviarAsync(cnpj, token, nnf, serie, novoEmail, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AlterarEmailEReenviarAsync(ByVal cnpj As String, ByVal token As String, ByVal nnf As Integer, ByVal serie As Integer, ByVal novoEmail As String, ByVal userState As Object)
            If (Me.AlterarEmailEReenviarOperationCompleted Is Nothing) Then
                Me.AlterarEmailEReenviarOperationCompleted = AddressOf Me.OnAlterarEmailEReenviarOperationCompleted
            End If
            Me.InvokeAsync("AlterarEmailEReenviar", New Object() {cnpj, token, nnf, serie, novoEmail}, Me.AlterarEmailEReenviarOperationCompleted, userState)
        End Sub
        
        Private Sub OnAlterarEmailEReenviarOperationCompleted(ByVal arg As Object)
            If (Not (Me.AlterarEmailEReenviarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AlterarEmailEReenviarCompleted(Me, New AlterarEmailEReenviarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fisconet4.com/obterNotasASeremInutilizadas", RequestNamespace:="http://fisconet4.com/", ResponseNamespace:="http://fisconet4.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function obterNotasASeremInutilizadas(ByVal cnpj As String, ByVal token As String) As serieVO()
            Dim results() As Object = Me.Invoke("obterNotasASeremInutilizadas", New Object() {cnpj, token})
            Return CType(results(0),serieVO())
        End Function
        
        '''<remarks/>
        Public Overloads Sub obterNotasASeremInutilizadasAsync(ByVal cnpj As String, ByVal token As String)
            Me.obterNotasASeremInutilizadasAsync(cnpj, token, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub obterNotasASeremInutilizadasAsync(ByVal cnpj As String, ByVal token As String, ByVal userState As Object)
            If (Me.obterNotasASeremInutilizadasOperationCompleted Is Nothing) Then
                Me.obterNotasASeremInutilizadasOperationCompleted = AddressOf Me.OnobterNotasASeremInutilizadasOperationCompleted
            End If
            Me.InvokeAsync("obterNotasASeremInutilizadas", New Object() {cnpj, token}, Me.obterNotasASeremInutilizadasOperationCompleted, userState)
        End Sub
        
        Private Sub OnobterNotasASeremInutilizadasOperationCompleted(ByVal arg As Object)
            If (Not (Me.obterNotasASeremInutilizadasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent obterNotasASeremInutilizadasCompleted(Me, New obterNotasASeremInutilizadasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://fisconet4.com/")>  _
    Partial Public Class listaDeNotasVO
        
        Private listaDeNotasField() As notaVO
        
        Private quantidadeDeRegistrosField As Integer
        
        '''<remarks/>
        Public Property listaDeNotas() As notaVO()
            Get
                Return Me.listaDeNotasField
            End Get
            Set
                Me.listaDeNotasField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property quantidadeDeRegistros() As Integer
            Get
                Return Me.quantidadeDeRegistrosField
            End Get
            Set
                Me.quantidadeDeRegistrosField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://fisconet4.com/")>  _
    Partial Public Class notaVO
        
        Private nFe_ide_nNFField As Long
        
        Private pastaDeTrabalhoField As String
        
        Private statusDaNotaField As Integer
        
        Private tentativasDeInclusaoField As Integer
        
        Private nFe_ide_dEmiField As Date
        
        Private dEmiStringField As String
        
        Private nFe_infNFe_idField As String
        
        Private nFe_emit_CNPJField As String
        
        Private nFe_emit_CPFField As String
        
        Private nFe_emit_xNomeField As String
        
        Private nFe_dest_CNPJField As String
        
        Private nFe_dest_CPFField As String
        
        Private nFe_dest_xNomeField As String
        
        Private nFe_dest_UFField As String
        
        Private nFe_total_ICMSTot_vNFField As Double
        
        Private retEnviNFe_infRec_nRecField As String
        
        Private retEnviNFe_cStatField As String
        
        Private retEnviNFe_xMotivoField As String
        
        Private protNfe_nProtField As String
        
        Private emailDestinatarioField As String
        
        Private dataUltimaAtualizacaoField As Date
        
        Private impressaoSolicitadaField As Integer
        
        Private impressoEmContingenciaField As Integer
        
        Private historicosField() As historicoVO
        
        Private statusDaNotaStringField As String
        
        Private atualizacoesField() As atualizacaoVO
        
        Private impressoraField As String
        
        Private serieField As Integer
        
        Private imprimeDanfeField As Integer
        
        Private ret_post_dataField As System.Nullable(Of Date)
        
        '''<remarks/>
        Public Property NFe_ide_nNF() As Long
            Get
                Return Me.nFe_ide_nNFField
            End Get
            Set
                Me.nFe_ide_nNFField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property pastaDeTrabalho() As String
            Get
                Return Me.pastaDeTrabalhoField
            End Get
            Set
                Me.pastaDeTrabalhoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property statusDaNota() As Integer
            Get
                Return Me.statusDaNotaField
            End Get
            Set
                Me.statusDaNotaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property tentativasDeInclusao() As Integer
            Get
                Return Me.tentativasDeInclusaoField
            End Get
            Set
                Me.tentativasDeInclusaoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NFe_ide_dEmi() As Date
            Get
                Return Me.nFe_ide_dEmiField
            End Get
            Set
                Me.nFe_ide_dEmiField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dEmiString() As String
            Get
                Return Me.dEmiStringField
            End Get
            Set
                Me.dEmiStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NFe_infNFe_id() As String
            Get
                Return Me.nFe_infNFe_idField
            End Get
            Set
                Me.nFe_infNFe_idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NFe_emit_CNPJ() As String
            Get
                Return Me.nFe_emit_CNPJField
            End Get
            Set
                Me.nFe_emit_CNPJField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NFe_emit_CPF() As String
            Get
                Return Me.nFe_emit_CPFField
            End Get
            Set
                Me.nFe_emit_CPFField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NFe_emit_xNome() As String
            Get
                Return Me.nFe_emit_xNomeField
            End Get
            Set
                Me.nFe_emit_xNomeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NFe_dest_CNPJ() As String
            Get
                Return Me.nFe_dest_CNPJField
            End Get
            Set
                Me.nFe_dest_CNPJField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NFe_dest_CPF() As String
            Get
                Return Me.nFe_dest_CPFField
            End Get
            Set
                Me.nFe_dest_CPFField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NFe_dest_xNome() As String
            Get
                Return Me.nFe_dest_xNomeField
            End Get
            Set
                Me.nFe_dest_xNomeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NFe_dest_UF() As String
            Get
                Return Me.nFe_dest_UFField
            End Get
            Set
                Me.nFe_dest_UFField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NFe_total_ICMSTot_vNF() As Double
            Get
                Return Me.nFe_total_ICMSTot_vNFField
            End Get
            Set
                Me.nFe_total_ICMSTot_vNFField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property retEnviNFe_infRec_nRec() As String
            Get
                Return Me.retEnviNFe_infRec_nRecField
            End Get
            Set
                Me.retEnviNFe_infRec_nRecField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property retEnviNFe_cStat() As String
            Get
                Return Me.retEnviNFe_cStatField
            End Get
            Set
                Me.retEnviNFe_cStatField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property retEnviNFe_xMotivo() As String
            Get
                Return Me.retEnviNFe_xMotivoField
            End Get
            Set
                Me.retEnviNFe_xMotivoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property protNfe_nProt() As String
            Get
                Return Me.protNfe_nProtField
            End Get
            Set
                Me.protNfe_nProtField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property emailDestinatario() As String
            Get
                Return Me.emailDestinatarioField
            End Get
            Set
                Me.emailDestinatarioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dataUltimaAtualizacao() As Date
            Get
                Return Me.dataUltimaAtualizacaoField
            End Get
            Set
                Me.dataUltimaAtualizacaoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property impressaoSolicitada() As Integer
            Get
                Return Me.impressaoSolicitadaField
            End Get
            Set
                Me.impressaoSolicitadaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property impressoEmContingencia() As Integer
            Get
                Return Me.impressoEmContingenciaField
            End Get
            Set
                Me.impressoEmContingenciaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property historicos() As historicoVO()
            Get
                Return Me.historicosField
            End Get
            Set
                Me.historicosField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property statusDaNotaString() As String
            Get
                Return Me.statusDaNotaStringField
            End Get
            Set
                Me.statusDaNotaStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property atualizacoes() As atualizacaoVO()
            Get
                Return Me.atualizacoesField
            End Get
            Set
                Me.atualizacoesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property impressora() As String
            Get
                Return Me.impressoraField
            End Get
            Set
                Me.impressoraField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property serie() As Integer
            Get
                Return Me.serieField
            End Get
            Set
                Me.serieField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property imprimeDanfe() As Integer
            Get
                Return Me.imprimeDanfeField
            End Get
            Set
                Me.imprimeDanfeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ret_post_data() As System.Nullable(Of Date)
            Get
                Return Me.ret_post_dataField
            End Get
            Set
                Me.ret_post_dataField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://fisconet4.com/")>  _
    Partial Public Class historicoVO
        
        Private nFe_emit_CNPJField As String
        
        Private idHistoricoField As String
        
        Private idTpHistoricoField As String
        
        Private nFe_ide_nNFField As Integer
        
        Private dataHoraField As Date
        
        Private complementoField As String
        
        Private mensagemField As String
        
        Private serieField As Integer
        
        '''<remarks/>
        Public Property NFe_emit_CNPJ() As String
            Get
                Return Me.nFe_emit_CNPJField
            End Get
            Set
                Me.nFe_emit_CNPJField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property idHistorico() As String
            Get
                Return Me.idHistoricoField
            End Get
            Set
                Me.idHistoricoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property idTpHistorico() As String
            Get
                Return Me.idTpHistoricoField
            End Get
            Set
                Me.idTpHistoricoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NFe_ide_nNF() As Integer
            Get
                Return Me.nFe_ide_nNFField
            End Get
            Set
                Me.nFe_ide_nNFField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dataHora() As Date
            Get
                Return Me.dataHoraField
            End Get
            Set
                Me.dataHoraField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property complemento() As String
            Get
                Return Me.complementoField
            End Get
            Set
                Me.complementoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property mensagem() As String
            Get
                Return Me.mensagemField
            End Get
            Set
                Me.mensagemField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property serie() As Integer
            Get
                Return Me.serieField
            End Get
            Set
                Me.serieField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://fisconet4.com/")>  _
    Partial Public Class serieVO
        
        Private numeroField As Integer
        
        Private notasField() As Integer
        
        '''<remarks/>
        Public Property numero() As Integer
            Get
                Return Me.numeroField
            End Get
            Set
                Me.numeroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property notas() As Integer()
            Get
                Return Me.notasField
            End Get
            Set
                Me.notasField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://fisconet4.com/")>  _
    Partial Public Class atualizacaoVO
        
        Private nFe_emit_CNPJField As String
        
        Private idHistoricoField As String
        
        Private nFe_ide_nNFField As Long
        
        Private nFe_dest_xNomeField As String
        
        Private dataHoraField As Date
        
        Private dataStringField As String
        
        Private atualizacaoField As String
        
        Private serieField As Integer
        
        '''<remarks/>
        Public Property NFe_emit_CNPJ() As String
            Get
                Return Me.nFe_emit_CNPJField
            End Get
            Set
                Me.nFe_emit_CNPJField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property idHistorico() As String
            Get
                Return Me.idHistoricoField
            End Get
            Set
                Me.idHistoricoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NFe_ide_nNF() As Long
            Get
                Return Me.nFe_ide_nNFField
            End Get
            Set
                Me.nFe_ide_nNFField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NFe_dest_xNome() As String
            Get
                Return Me.nFe_dest_xNomeField
            End Get
            Set
                Me.nFe_dest_xNomeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dataHora() As Date
            Get
                Return Me.dataHoraField
            End Get
            Set
                Me.dataHoraField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dataString() As String
            Get
                Return Me.dataStringField
            End Get
            Set
                Me.dataStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property atualizacao() As String
            Get
                Return Me.atualizacaoField
            End Get
            Set
                Me.atualizacaoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property serie() As Integer
            Get
                Return Me.serieField
            End Get
            Set
                Me.serieField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub obterListaDeNotasCompletedEventHandler(ByVal sender As Object, ByVal e As obterListaDeNotasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class obterListaDeNotasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As listaDeNotasVO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),listaDeNotasVO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub obterUltimasAtualizacoesCompletedEventHandler(ByVal sender As Object, ByVal e As obterUltimasAtualizacoesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class obterUltimasAtualizacoesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As atualizacaoVO()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),atualizacaoVO())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub buscarNotasCompletedEventHandler(ByVal sender As Object, ByVal e As buscarNotasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class buscarNotasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As listaDeNotasVO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),listaDeNotasVO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub obterNotaCompletedEventHandler(ByVal sender As Object, ByVal e As obterNotaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class obterNotaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As notaVO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),notaVO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub cancelarNotaCompletedEventHandler(ByVal sender As Object, ByVal e As cancelarNotaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class cancelarNotaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub solicitarImpressaoCompletedEventHandler(ByVal sender As Object, ByVal e As solicitarImpressaoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class solicitarImpressaoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub solicitarInutilizacaoCompletedEventHandler(ByVal sender As Object, ByVal e As solicitarInutilizacaoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class solicitarInutilizacaoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub solicitarReenvioCompletedEventHandler(ByVal sender As Object, ByVal e As solicitarReenvioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class solicitarReenvioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub AlterarEmailEReenviarCompletedEventHandler(ByVal sender As Object, ByVal e As AlterarEmailEReenviarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AlterarEmailEReenviarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub obterNotasASeremInutilizadasCompletedEventHandler(ByVal sender As Object, ByVal e As obterNotasASeremInutilizadasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class obterNotasASeremInutilizadasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As serieVO()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),serieVO())
            End Get
        End Property
    End Class
End Namespace
