'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.544
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.544.
'
Namespace nfecommerce_homolog
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="NFeCommerceSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class NFeCommerce
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private EnviarNotaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificarStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Fn4IntegradorNFeCommerceCtrl.My.MySettings.Default.Fn4IntegradorNFeCommerceCtrl_nfecommerce_homolog_NFeCommerce
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event EnviarNotaCompleted As EnviarNotaCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificarStatusCompleted As VerificarStatusCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EnviarNota", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EnviarNota(ByVal nota As String, ByVal cnpj As String, ByVal token As String, ByVal serie As Integer, ByVal nNF As Integer) As String
            Dim results() As Object = Me.Invoke("EnviarNota", New Object() {nota, cnpj, token, serie, nNF})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EnviarNotaAsync(ByVal nota As String, ByVal cnpj As String, ByVal token As String, ByVal serie As Integer, ByVal nNF As Integer)
            Me.EnviarNotaAsync(nota, cnpj, token, serie, nNF, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EnviarNotaAsync(ByVal nota As String, ByVal cnpj As String, ByVal token As String, ByVal serie As Integer, ByVal nNF As Integer, ByVal userState As Object)
            If (Me.EnviarNotaOperationCompleted Is Nothing) Then
                Me.EnviarNotaOperationCompleted = AddressOf Me.OnEnviarNotaOperationCompleted
            End If
            Me.InvokeAsync("EnviarNota", New Object() {nota, cnpj, token, serie, nNF}, Me.EnviarNotaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEnviarNotaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EnviarNotaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EnviarNotaCompleted(Me, New EnviarNotaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VerificarStatus", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificarStatus(ByVal cnpj As String, ByVal token As String, ByVal serie As Integer, ByVal numero As Integer) As statusDaNota
            Dim results() As Object = Me.Invoke("VerificarStatus", New Object() {cnpj, token, serie, numero})
            Return CType(results(0),statusDaNota)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificarStatusAsync(ByVal cnpj As String, ByVal token As String, ByVal serie As Integer, ByVal numero As Integer)
            Me.VerificarStatusAsync(cnpj, token, serie, numero, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificarStatusAsync(ByVal cnpj As String, ByVal token As String, ByVal serie As Integer, ByVal numero As Integer, ByVal userState As Object)
            If (Me.VerificarStatusOperationCompleted Is Nothing) Then
                Me.VerificarStatusOperationCompleted = AddressOf Me.OnVerificarStatusOperationCompleted
            End If
            Me.InvokeAsync("VerificarStatus", New Object() {cnpj, token, serie, numero}, Me.VerificarStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificarStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificarStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificarStatusCompleted(Me, New VerificarStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.450"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class statusDaNota
        
        Private numeroField As Integer
        
        Private serieField As Integer
        
        Private cnpjField As String
        
        Private statusField As String
        
        Private chaveField As String
        
        Private cStatField As Integer
        
        Private motivoField As String
        
        Private urlDanfeField As String
        
        Private dataUltimaAtualizacaoField As String
        
        '''<remarks/>
        Public Property numero() As Integer
            Get
                Return Me.numeroField
            End Get
            Set
                Me.numeroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property serie() As Integer
            Get
                Return Me.serieField
            End Get
            Set
                Me.serieField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cnpj() As String
            Get
                Return Me.cnpjField
            End Get
            Set
                Me.cnpjField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property chave() As String
            Get
                Return Me.chaveField
            End Get
            Set
                Me.chaveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cStat() As Integer
            Get
                Return Me.cStatField
            End Get
            Set
                Me.cStatField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property motivo() As String
            Get
                Return Me.motivoField
            End Get
            Set
                Me.motivoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property urlDanfe() As String
            Get
                Return Me.urlDanfeField
            End Get
            Set
                Me.urlDanfeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dataUltimaAtualizacao() As String
            Get
                Return Me.dataUltimaAtualizacaoField
            End Get
            Set
                Me.dataUltimaAtualizacaoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub EnviarNotaCompletedEventHandler(ByVal sender As Object, ByVal e As EnviarNotaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EnviarNotaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub VerificarStatusCompletedEventHandler(ByVal sender As Object, ByVal e As VerificarStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificarStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As statusDaNota
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),statusDaNota)
            End Get
        End Property
    End Class
End Namespace
